<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JT808.Protocol</name>
    </assembly>
    <members>
        <member name="T:JT808.Protocol.Buffers.JT808BufferWriter">
            <summary>
            
            ref System.Buffers.Writer
            </summary>
        </member>
        <member name="P:JT808.Protocol.Buffers.JT808BufferWriter.BeforeCodingWrittenPosition">
            <summary>
            编码之前的写入位置
            </summary>
        </member>
        <member name="T:JT808.Protocol.DependencyInjectionExtensions">
            <summary>
            JT808 DI扩展
            JT808 DependencyInjectionExtensions
            </summary>
        </member>
        <member name="M:JT808.Protocol.DependencyInjectionExtensions.AddJT808Configure(Microsoft.Extensions.DependencyInjection.IServiceCollection,JT808.Protocol.IJT808Config)">
            <summary>
            注册808配置
            </summary>
            <param name="services"></param>
            <param name="jT808Config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.DependencyInjectionExtensions.AddJT808Configure(JT808.Protocol.IJT808Builder,JT808.Protocol.IJT808Config)">
            <summary>
            注册808配置
            </summary>
            <param name="builder"></param>
            <param name="jT808Config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.DependencyInjectionExtensions.AddJT808Configure``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{``0})">
            <summary>
            注册808配置
            </summary>
            <typeparam name="TJT808Config"></typeparam>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.DependencyInjectionExtensions.AddJT808Configure``1(JT808.Protocol.IJT808Builder,System.Action{``0})">
            <summary>
            注册808配置
            </summary>
            <typeparam name="TJT808Config"></typeparam>
            <param name="builder"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.DependencyInjectionExtensions.AddJT808Configure(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{JT808.Protocol.IJT808Config})">
            <summary>
            注册808配置
            </summary>
            <param name="services"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.Enums.JT808Alarm">
            <summary>
            报警标志
            Alarm Flag
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Alarm.emergency_alarm">
            <summary>
            紧急报警_触动报警开关后触发
            The emergency alarm is triggered after the alarm switch is touched
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Alarm.overspeed_alarm">
            <summary>
            超速报警 标志维持至报警条件解除
            Overspeed alarm
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Alarm.fatigue_driving">
            <summary> 
            疲劳驾驶 标志维持至报警条件解除
            fatigue driving
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Alarm.danger_warning">
            <summary>
            危险预警 标志维持至报警条件解除
            danger warning
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Alarm.gnss_module_fault">
            <summary>
            GNSS模块发生故障 标志维持至报警条件解除
            The GNSS module is faulty
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Alarm.gnss_ant_not_connected">
            <summary>
            GNSS天线未接或被剪断 标志维持至报警条件解除
            The GNSS antenna is not connected or cut off
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Alarm.gnss_ant_short">
            <summary>
            GNSS天线短路 标志维持至报警条件解除
            GNSS antenna short-circuited  
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Alarm.terminal_main_power_undervoltage">
            <summary>
            终端主电源欠压 标志维持至报警条件解除
            The main power supply of the terminal is undervoltage
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Alarm.terminal_main_power_down">
            <summary>
            终端主电源掉电 标志维持至报警条件解除
            The main power supply of the terminal fails
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Alarm.terminal_display_fault">
            <summary>
            终端LCD或显示器故障 标志维持至报警条件解除
            The LCD or monitor of the terminal is faulty
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Alarm.tts_module_fault">
            <summary>
            TTS模块故障 标志维持至报警条件解除
            The TTS module is faulty  
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Alarm.camera_fault">
            <summary>
            摄像头故障 标志维持至报警条件解除
            Camera fault
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Alarm.road_transport_cert_ic_card_module_fault">
            <summary>
            道路运输证IC卡模块故障 标志维持至报警条件解除
            The IC card module of the road transport certificate is faulty
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Alarm.overspeed_warning">
            <summary>
            超速预警 标志维持至报警条件解除
            Overspeed warning
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Alarm.fatigue_driving_warning">
            <summary>
            疲劳驾驶预警 标志维持至报警条件解除
            Fatigue driving warning
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Alarm.reserve1">
            <summary>
            保留1
            reserve1
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Alarm.reserve2">
            <summary>
            保留2
            reserve2
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Alarm.reserve3">
            <summary>
            保留3
            reserve3
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Alarm.day_accumulated_driving_timeout">
            <summary>
            当天累计驾驶超时 标志维持至报警条件解除
            Accumulated driving overtime that day
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Alarm.timeout_parking">
            <summary>
            超时停车 标志维持至报警条件解除
            Timeout parking
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Alarm.in_area">
            <summary>
            进出区域 收到应答后清零
            In and out of the area
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Alarm.in_route">
            <summary>
            进出路线 收到应答后清零
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Alarm.road_driving_time_insufficient">
            <summary>
            路段行驶时间不足或过长 收到应答后清零
            Road section driving time is insufficient or too long
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Alarm.route_deviation_alarm">
            <summary>
            路线偏离报警 标志维持至报警条件解除
            Route deviation alarm
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Alarm.vehicle_vss_fault">
            <summary>
            车辆VSS故障 标志维持至报警条件解除
            VSS of the vehicle is faulty
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Alarm.vehicle_fuel_abnormal">
            <summary>
            车辆油量异常 标志维持至报警条件解除
            Abnormal vehicle fuel level
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Alarm.vehicle_stolen">
            <summary>
            车辆被盗通过车辆防盗器 标志维持至报警条件解除
            The vehicle is stolen
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Alarm.vehicle_illegal_ignition">
            <summary>
            车辆非法点火
            Illegal ignition of vehicles
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Alarm.vehicle_illegal_displacement">
            <summary>
            车辆非法位移 收到应答后清零
            Illegal displacement of vehicle
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Alarm.collision_warning">
            <summary>
            碰撞预警 标志维持至报警条件解除
            collision Warning
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Alarm.rollover_warning">
            <summary>
            侧翻预警 标志维持至报警条件解除
            rollover warning
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Alarm.illegal_opening_door_alarm">
            <summary>
            非法开门报警（终端未设置区域时，不判断非法开门） 收到应答后清零
            Illegal door opening alarm
            </summary>
        </member>
        <member name="T:JT808.Protocol.Enums.JT808CallBackType">
            <summary>
            电话回拨类型
            Callback type
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CallBackType.normal_call">
            <summary>
            普通通话
            normal call
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CallBackType.cue">
            <summary>
            监听
            cue
            </summary>
        </member>
        <member name="T:JT808.Protocol.Enums.JT808CameraResolutionType">
            <summary>
            摄像头分辨率
            Camera resolution
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CameraResolutionType.x320_240">
            <summary>
            x320_240
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CameraResolutionType.x640_480">
            <summary>
            x640_480
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CameraResolutionType.x800_600">
            <summary>
            x800_600
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CameraResolutionType.x1020_768">
            <summary>
            x1020_768
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CameraResolutionType.x176_144_Qcif">
            <summary>
            x176_144_Qcif
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CameraResolutionType.x352_288_Cif">
            <summary>
            x352_288_Cif
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CameraResolutionType.x704_288_HALF_D1">
            <summary>
            x704_288_HALF_D1
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CameraResolutionType.x704_576_D1">
            <summary>
            x704_576_D1
            </summary>
        </member>
        <member name="T:JT808.Protocol.Enums.JT808CarDVRCommandID">
            <summary>
            行车记录仪命令字
            Dashcam command words
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarDVRCommandID.collect_recorder_performs_standard_version">
            <summary>
            采集记录仪执行标准版本
            The collect recorder performs the standard version
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarDVRCommandID.collect_driver">
            <summary>
            采集当前驾驶人信息
            Collect current driver information
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarDVRCommandID.collect_realtime">
            <summary>
            采集记录仪实时时间
            Collect of real time recorder
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarDVRCommandID.collect_accumulated_mileage">
            <summary>
            采集累计行驶里程
            Collect accumulated mileage
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarDVRCommandID.collect_recorder_pulse_coefficient">
            <summary>
            采集记录仪脉冲系数
            Pulse coefficient of collect recorder
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarDVRCommandID.collect_vehicle_information">
            <summary>
            采集车辆信息
            Collection of vehicle information
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarDVRCommandID.collect_recorder_status_signal_configuration_information">
            <summary>
            采集记录仪状态信号配置信息
            Collect the configuration information of recorder status signal
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarDVRCommandID.collect_recorder_unique_number">
            <summary>
            采集记录仪唯一性编号
            Collection recorder unique number
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarDVRCommandID.collect_recorder_specified_speed">
            <summary>
            采集指定的行驶速度记录
            Collect the specified speed record
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarDVRCommandID.collect_specified_location_information">
            <summary>
            采集指定的位置信息记录
            Collect the specified location information record
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarDVRCommandID.collect_specified_incident_suspect_records">
            <summary>
            采集指定的事故疑点记录
            Collect specified incident suspect records
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarDVRCommandID.collect_specified_driving_overtime_records">
            <summary>
            采集指定的超时驾驶记录
            Collect specified driving overtime records
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarDVRCommandID.collect_drivers_identification_records">
            <summary>
            采集指定的驾驶人身份记录
            Collect identification records of designated drivers
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarDVRCommandID.collect_specified_external_power_supply_records">
            <summary>
            采集指定的外部供电记录
            Collect the specified external power supply records
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarDVRCommandID.collect_specified_modify_parameters_records">
            <summary>
            采集指定的参数修改记录
            Collect the modification records of specified parameters
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarDVRCommandID.collect_specified_speed_status_logs">
            <summary>
            采集指定的速度状态日志
            Collects the specified speed status logs
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarDVRCommandID.setting_vehicle_information">
            <summary>
            设置车辆信息
            Setting vehicle Information
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarDVRCommandID.set_first_install_date_recorder">
            <summary>
            设置记录仪初次安装日期
            Set the first installation date of recorder
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarDVRCommandID.set_state_quantity_configuration_information">
            <summary>
            设置状态量配置信息
            Set state quantity configuration information
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarDVRCommandID.set_recorder_time">
            <summary>
            设置记录仪时间
            Setting recorder time
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarDVRCommandID.set_pulse_coefficient_recorder">
            <summary>
            设置记录仪脉冲系数
            Set the pulse coefficient of recorder
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarDVRCommandID.set_init_mileage">
            <summary>
            设置初始里程
            Setting the initial mileage
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarDVRCommandID.enters_maintains_check_state">
            <summary>
            进入或保持检定状态
            Enters or maintains the check state
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarDVRCommandID.enter_mileage_error_measurement">
            <summary>
            进入里程误差测量
            Enter the mileage error measurement
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarDVRCommandID.enter_pulse_coefficient_error_measurement">
            <summary>
            进入脉冲系数误差测量
            Enter the pulse coefficient error measurement
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarDVRCommandID.enter_realtime_time_error_measurement">
            <summary>
            进入实时时间误差测量
            Enter real-time time error measurement
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarDVRCommandID.return_normal_working_status">
            <summary>
            返回正常工作状态
            Return to normal working status
            </summary>
        </member>
        <member name="T:JT808.Protocol.Enums.JT808CarSignalStatus">
            <summary>
            扩展车辆信号状态位
            Extended vehicle signal status bits
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarSignalStatus.close_light_signal">
            <summary>
            开启近光信号灯
            Close light signal
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarSignalStatus.high_beam_signal">
            <summary>
            远光灯信号
            High beam signal
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarSignalStatus.right_turn_signal">
            <summary>
            右转向灯信号
            Right turn signal
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarSignalStatus.left_turn_signal">
            <summary>
            左转向灯信号
            Left turn signal
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarSignalStatus.brake_signal">
            <summary>
            制动信号
            brake signal
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarSignalStatus.reverse_signals">
            <summary>
            倒档信号
            Reverse signals
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarSignalStatus.fog_light_signal">
            <summary>
            雾灯信号
            The fog light signal
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarSignalStatus.clearance_lamp">
            <summary>
            示廓灯
            Clearance Lamp
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarSignalStatus.horn_signal">
            <summary>
            喇叭信号
            horn signal
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarSignalStatus.air_condition_status">
            <summary>
            空调状态
            Air condition status
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarSignalStatus.neutral_signal">
            <summary>
            空挡信号
            Neutral signal
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarSignalStatus.retarder_working">
            <summary>
            缓速器工作
            Retarder working
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarSignalStatus.abs_working">
            <summary>
            ABS工作
            abs_working
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarSignalStatus.heater_operation">
            <summary>
            加热器工作
            Heater operation
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808CarSignalStatus.clutch_condition">
            <summary>
            离合器状态
            Clutch condition
            </summary>
        </member>
        <member name="T:JT808.Protocol.Enums.JT808DirectionType">
            <summary>
            方向类型
            Direction Type
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808DirectionType.direction_in">
            <summary>
            进
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808DirectionType.direction_out">
            <summary>
            出
            </summary>
        </member>
        <member name="T:JT808.Protocol.Enums.JT808DrivenRouteType">
            <summary>
            路线行驶返回结果
            Route driving returns results
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808DrivenRouteType.insufficient">
            <summary>
            不足
            insufficient
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808DrivenRouteType.overlength">
            <summary>
            过长
            overlength
            </summary>
        </member>
        <member name="T:JT808.Protocol.Enums.JT808EncryptMethod">
            <summary>
            JT808加密选项
            Encryption Options
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808EncryptMethod.None">
            <summary>
            未加密
            None
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808EncryptMethod.RSA">
            <summary>
            RSA加密
            RSA encrypt
            </summary>
        </member>
        <member name="T:JT808.Protocol.Enums.JT808ErrorCode">
            <summary>
            异常错误码
            Exception error code
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808ErrorCode.CheckCodeNotEqual">
            <summary>
            JT808校验和不相等
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808ErrorCode.CarDVRCheckCodeNotEqual">
            <summary>
            JT19056校验和不相等
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808ErrorCode.HeaderParseError">
            <summary>
            消息头解析错误
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808ErrorCode.BodiesParseError">
            <summary>
            消息体解析错误
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808ErrorCode.VailLength">
            <summary>
            验证长度
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808ErrorCode.NotImplType">
            <summary>
            没有实现对应的类型
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808ErrorCode.NotEnoughLength">
            <summary>
            长度不够
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808ErrorCode.NotGlobalRegisterFormatterAssembly">
            <summary>
            没有全局注册格式化器 IJT808MessagePackFormatter
            There is no global register formatter [IJT808MessagePackFormatter]
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808ErrorCode.LatOrLngError">
            <summary>
            经纬度错误
            </summary>
        </member>
        <member name="T:JT808.Protocol.Enums.JT808EventItemCoding">
            <summary>
            事件项编码
            Event item coding
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808EventItemCoding.platform_delivery_order">
            <summary>
            平台下发指令
            Platform delivery order
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808EventItemCoding.regular_action">
            <summary>
            定时动作
            Regular action
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808EventItemCoding.robbery_alarm_trigger">
            <summary>
            抢劫报警触发
            Robbery alarm trigger
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808EventItemCoding.collision_rollover_alarm_triggered">
            <summary>
            碰撞侧翻报警触发
            Collision rollover alarm triggered
            </summary>
        </member>
        <member name="T:JT808.Protocol.Enums.JT808EventSettingType">
            <summary>
            事件设置类型
            Event setting Type
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808EventSettingType.delete_terminal_all_existing_events">
            <summary>
            删除终端现有所有事件_该命令后不带后继字节
            Delete all existing events on the terminal This command does not contain subsequent bytes
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808EventSettingType.update_events">
            <summary>
            更新事件
            Update events
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808EventSettingType.append_events">
            <summary>
            追加事件
            Append events
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808EventSettingType.modify_events">
            <summary>
            修改事件
            Modify event
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808EventSettingType.delete_specific_events">
            <summary>
            删除特定几项事件，之后事件项中无需带事件内容
            Delete specific events
            </summary>
        </member>
        <member name="T:JT808.Protocol.Enums.JT808ICCardReadResult">
            <summary>
            IC 卡读取结果
            IC card read result
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808ICCardReadResult.ic_card_reading_succeeded">
            <summary>
            IC卡读卡成功
            IC card Reading succeeded.
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808ICCardReadResult.read_card_failure_auth">
            <summary>
            读卡失败_原因为卡片密钥认证未通过
            Read the card failure:The cause is that the card key authentication fails
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808ICCardReadResult.read_card_failure_locked">
            <summary>
            读卡失败_原因为卡片已被锁定
            Read the card failure:The reason is that the card is locked
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808ICCardReadResult.read_card_failure_removed">
            <summary>
            读卡失败_原因为卡片被拔出
            Read the card failure:The cause is that the card is removed
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808ICCardReadResult.read_card_failure_data_verify_error">
            <summary>
            读卡失败_原因为数据校验错误
             Read the card failure:The cause is a data verification error
            </summary>
        </member>
        <member name="T:JT808.Protocol.Enums.JT808ICCardStatus">
            <summary>
            插拔状态
            Plug state
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808ICCardStatus.ic_card_into">
            <summary>
            从业资格证IC卡插入_驾驶员上班
            License IC card inserted_Driver on duty
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808ICCardStatus.ic_card_pull_out">
            <summary>
            从业资格证IC卡拔出_驾驶员下班
            License IC card pulled out_driver off duty
            </summary>
        </member>
        <member name="T:JT808.Protocol.Enums.JT808InformationSettingType">
            <summary>
            信息设置类型
            Information setting type
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808InformationSettingType.delete_all_items">
            <summary>
            删除终端全部信息项
            Delete all terminal information items
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808InformationSettingType.update_menu">
            <summary>
            更新菜单
            Update menu
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808InformationSettingType.append_menu">
            <summary>
            追加菜单
            Append menu
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808InformationSettingType.modify_menu">
            <summary>
            修改菜单
            Modify the menu
            </summary>
        </member>
        <member name="T:JT808.Protocol.Enums.JT808IOStatus">
            <summary>
            IO状态位
            IO status bits
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808IOStatus.deep_dormant_state">
            <summary>
            深度休眠状态
            Deep dormant state
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808IOStatus.dormant_state">
            <summary>
            休眠状态
            dormant state
            </summary>
        </member>
        <member name="T:JT808.Protocol.Enums.JT808MsgId">
            <summary>
            JT808消息
            JT808 MsgId
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x0001">
            <summary>
            终端通用应答
            0x0001
            Terminal universal reply
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8001">
            <summary>
            平台通用应答
            0x8001
            Platform Universal response
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x0002">
            <summary>
            终端心跳
            0x0002
            Terminal heart
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8003">
            <summary>
            补传分包请求
            0x8003
            Forwarding subcontract request
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x0100">
            <summary>
            终端注册
            0x0100
            Terminal registration
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8100">
            <summary>
            终端注册应答
            0x8100
            Terminal registration reply
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x0003">
            <summary>
            终端注销
            0x0003
            Terminal logout
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x0102">
            <summary>
            终端鉴权
            0x0102
            Terminal authentication
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8103">
            <summary>
            设置终端参数
            0x8103
            Setting Terminal Parameters
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8104">
            <summary>
            查询终端参数
            0x8104
            Querying Terminal Parameters
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x0104">
            <summary>
            查询终端参数应答
            0x0104
            Query terminal parameter response
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8105">
            <summary>
            终端控制
            0x8105
            Terminal control
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8106">
            <summary>
            查询指定终端参数
            0x8106
            Example Query specified terminal parameters
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8107">
            <summary>
            查询终端属性
            0x8107
            Querying Terminal Properties
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x0107">
            <summary>
            查询终端属性应答
            0x0107
            Query the response of the terminal properties
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8108">
            <summary>
            下发终端升级包
            0x8108
            Query terminal properties reply Deliver the terminal upgrade package
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x0108">
            <summary>
            终端升级结果通知
            0x0108
            Terminal upgrade result notification
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x0200">
            <summary>
            位置信息汇报
            0x0200
            Location information reporting
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8201">
            <summary>
            位置信息查询
            0x8201
            Location information query
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x0201">
            <summary>
            位置信息查询应答
            0x0201
            Location information query response
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8202">
            <summary>
            临时位置跟踪控制
            0x8202
            Temporary position tracking control
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8203">
            <summary>
            人工确认报警消息
            0x8203
            Manually confirm the alarm message
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8300">
            <summary>
            文本信息下发
            0x8300
            Text message delivery
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8301">
            <summary>
            事件设置
            0x8301
            Event set
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x0301">
            <summary>
            事件报告
            0x0301
            event report
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8302">
            <summary>
            提问下发
            0x8302
            Questions issued
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x0302">
            <summary>
            提问应答
            0x0302
            Question answering
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8303">
            <summary>
            信息点播菜单设置
            0x8303
            Information on demand menu Settings
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x0303">
            <summary>
            信息点播/取消
            0x0303
            Information on demand
            Information cancel
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8304">
            <summary>
            信息服务
            0x8304
            Information service
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8400">
            <summary>
            电话回拨
            0x8400
            Back to the dial
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8401">
            <summary>
            设置电话本
            0x8401
            Set up a phone book
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8500">
            <summary>
            车辆控制
            0x8500
            Vehicle control
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x0500">
            <summary>
            车辆控制应答
            0x0500
            Vehicle control response
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8600">
            <summary>
            设置圆形区域
            0x8600
            Set the circular area
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8601">
            <summary>
            删除圆形区域
            0x8601
            Delete circular area
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8602">
            <summary>
            设置矩形区域
            0x8602
            Set rectangle area
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8603">
            <summary>
            删除矩形区域
            0x8603
            Delete rectangular area
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8604">
            <summary>
            设置多边形区域
            0x8604
            Set polygon region
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8605">
            <summary>
            删除多边形区域
            0x8605
            Delete polygon area
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8606">
            <summary>
            设置路线
            0x8606
            Set the route
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8607">
            <summary>
            删除路线
            0x8607
            Delete the route
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8700">
            <summary>
            行驶记录仪数据采集命令
            0x8700
            Drive recorder data acquisition command
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x0700">
            <summary>
            行驶记录仪数据上传
            0x0700
            Data upload from driving recorder
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8701">
            <summary>
            行驶记录仪参数下传命令
            0x8701
            Driving recorder parameters down command
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x0701">
            <summary>
            电子运单上报
            0x0701
            Electronic waybill reporting
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x0702">
            <summary>
            驾驶员身份信息采集上报
            0x0702
            Collect and report driver identity information
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8702">
            <summary>
            上报驾驶员身份信息请求
            0x8702
            Report driver identification request
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x0704">
            <summary>
            定位数据批量上传
            0x0704
            Upload location data in batches
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x0705">
            <summary>
            CAN总线数据上传
            0x0705
            CAN bus data upload
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x0800">
            <summary>
            多媒体事件信息上传
            0x0800
            Upload multimedia event information
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x0801">
            <summary>
            多媒体数据上传
            0x0801
            Multimedia Data upload
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8800">
            <summary>
            多媒体数据上传应答
            0x8800
            Reply to multimedia data upload
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8801">
            <summary>
            摄像头立即拍摄命令
            0x8801
            The camera immediately shoots the command
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x0805">
            <summary>
            摄像头立即拍摄命令应答
            0x0805
            The camera immediately shoots the command reply
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8802">
            <summary>
            存储多媒体数据检索
            0x8802
            Store multimedia data retrieval
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x0802">
            <summary>
             存储多媒体数据检索应答 
             0x0802
             Store multimedia data retrieval replies
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8803">
            <summary>
            存储多媒体数据上传
            0x8803
            Store multimedia data upload
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8804">
            <summary>
            录音开始命令
            0x8804
            Recording Start Command
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8805">
            <summary>
            单条存储多媒体数据检索上传命令
            0x8805
            Single storage multimedia data retrieval upload command
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8900">
            <summary>
            数据下行透传
            0x8900
            Data is transmitted through downlink
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x0900">
            <summary>
            数据上行透传
            0x0900
            Data is transparently transmitted upstream
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x0901">
            <summary>
            数据压缩上报
            0x0901
            Data compression reporting
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8A00">
            <summary>
             平台RSA公钥 
             0x8A00
             Platform RSA Public Key  
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x0A00">
            <summary>
             终端RSA公钥 
             0x0A00
             Terminal RSA Public Key  
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x0004">
            <summary>
             查询服务器时间请求 
             0x0004
             Queries server time requests
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8004">
            <summary>
             查询服务器时间应答 
             0x8004
             Query the server time response
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x0005">
            <summary>
             终端补传分包请求 
             0x0005
             The terminal sends the subcontract request
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8204">
            <summary>
             链路检测 
             0x8204
             Link detection
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x8608">
            <summary>
             查询区域或线路数据 
             0x8608
             Example Query area or line data
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MsgId._0x0608">
            <summary>
             查询区域或线路数据应答 
             0x0608
             Query area or line data reply
            </summary>
        </member>
        <member name="T:JT808.Protocol.Enums.JT808MultimediaCodingFormat">
            <summary>
            多媒体格式编码
            Multimedia format coding
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MultimediaCodingFormat.JPEG">
            <summary>
            JPEG
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MultimediaCodingFormat.TIF">
            <summary>
            TIF
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MultimediaCodingFormat.MP3">
            <summary>
            MP3
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MultimediaCodingFormat.WAV">
            <summary>
            WAV
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MultimediaCodingFormat.WMV">
            <summary>
            WMV
            </summary>
        </member>
        <member name="T:JT808.Protocol.Enums.JT808MultimediaDeleted">
            <summary>
            删除标志
            单条存储多媒体数据检索上传命令
            Single storage multimedia data retrieval upload command
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MultimediaDeleted.reserve">
            <summary>
            保留
            reserve
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MultimediaDeleted.delete">
            <summary>
            删除
            delete
            </summary>
        </member>
        <member name="T:JT808.Protocol.Enums.JT808MultimediaType">
            <summary>
            多媒体类型
            Multimedia Type
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MultimediaType.image">
            <summary>
            图像
            image
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MultimediaType.audio">
            <summary>
            音频
            audio
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808MultimediaType.video">
            <summary>
            视频
            video
            </summary>
        </member>
        <member name="T:JT808.Protocol.Enums.JT808PhoneNumberType">
            <summary>
            大陆11位 补0
            香港8位  区号：852 补0
            澳门8位  区号：853 补0
            台湾的是10位 区号：886
            台湾手机号码有10码，例如0912345678不过前面那个0是我们自己在台湾打的，
            假如是其他地方打来要改成打 +886912345678
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808PhoneNumberType.china">
            <summary>
            大陆
            china
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808PhoneNumberType.china_hongkong_macao">
            <summary>
            香港|澳门
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808PhoneNumberType.china_taiwan">
            <summary>
            台湾
            </summary>
        </member>
        <member name="T:JT808.Protocol.Enums.JT808PlatformResult">
            <summary>
            返回结果
            return to the result
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808PlatformResult.succeed">
            <summary>
            成功/确认
            succeed
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808PlatformResult.fail">
            <summary>
            失败
            fail
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808PlatformResult.message_wrong">
            <summary>
            消息有误
            The message is wrong
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808PlatformResult.nonsupport">
            <summary>
            不支持
            nonsupport
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808PlatformResult.alarm_processing_confirmation">
            <summary>
            报警处理确认
            Alarm processing confirmation
            </summary>
        </member>
        <member name="T:JT808.Protocol.Enums.JT808PositionType">
            <summary>
            位置类型
            Position type
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808PositionType.no_specific_position">
            <summary>
            无特定位置
            No specific position
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808PositionType.circular_region">
            <summary>
            圆形区域
            circular region
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808PositionType.rectangular_region">
            <summary>
            矩形区域
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808PositionType.polyarea">
            <summary>
            多边形区域
            polyarea
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808PositionType.road_segment">
            <summary>
            路段
            Road Segment
            </summary>
        </member>
        <member name="T:JT808.Protocol.Enums.JT808RecordCmd">
            <summary>
            录音命令
            The recording command
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808RecordCmd.stop">
            <summary>
            停止录音
            stop
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808RecordCmd.start">
            <summary>
            开始录音
            start
            </summary>
        </member>
        <member name="T:JT808.Protocol.Enums.JT808RecordSave">
            <summary>
            保存标志
            Save the logo
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808RecordSave.realtime_upload">
            <summary>
            实时上传
            In real time to upload
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808RecordSave.save">
            <summary>
            保存
            Save
            </summary>
        </member>
        <member name="T:JT808.Protocol.Enums.JT808SettingProperty">
            <summary>
            设置属性
            set attributes
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808SettingProperty.update_region">
            <summary>
            更新区域
            update region
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808SettingProperty.append_region">
            <summary>
            追加区域
            append region
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808SettingProperty.modify_region">
            <summary>
            修改区域
            modify region
            </summary>
        </member>
        <member name="T:JT808.Protocol.Enums.JT808SettingTelephoneBook">
            <summary>
            设置电话本设置类型
            Set the phone book setting type
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808SettingTelephoneBook.delete_all">
            <summary>
            删除终端上所有存储的联系人
            Delete all contacts stored on the terminal
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808SettingTelephoneBook.update_phone_book">
            <summary>
            更新电话本_删除终端中已有全部联系人并追加消息中的联系人
            Update the phone book _ Delete all contacts from the terminal and add contacts to the message 
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808SettingTelephoneBook.append_phone_book">
            <summary>
            追加电话本
            Append phone book
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808SettingTelephoneBook.modify_phone_book">
            <summary>
            修改电话本_以联系人为索引
            Modify the phone book to index contacts
            </summary>
        </member>
        <member name="T:JT808.Protocol.Enums.JT808Status">
            <summary>
            JT808车辆状态位
            Vehicle status position
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Status.acc_open">
            <summary>
            ACC开
            The ACC open  
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Status.location">
            <summary>
            定位
            location
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Status.latitude">
            <summary>
            南纬
            latitude
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Status.longitude">
            <summary>
            西经
            longitude
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Status.shutdown_state">
            <summary>
            停运状态
            Shut down the state
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Status.lat_lng_encrypt">
            <summary>
            经纬度已经保密插件加密
            Latitude and longitude are encrypted by secret plug-in
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Status.half_load">
            <summary>
            半载
            half_load
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Status.full_load">
            <summary>
            满载
            full load
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Status.vehicle_fuel_line_disconnected">
            <summary>
            车辆油路断开
            The fuel line of the vehicle is disconnected
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Status.vehicle_circuit_disconnection">
            <summary>
            车辆电路断开
            Vehicle circuit disconnection
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Status.door_lock">
            <summary>
            车门加锁
            The door lock
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Status.front_door_open">
            <summary>
            前门开
            The front door open
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Status.door_opened">
            <summary>
            中门开
            The door opened
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Status.back_door_open">
            <summary>
            后门开
            The back door open
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Status.drivers_seat_door_open">
            <summary>
            驾驶席门开
            The driver's seat door is open
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Status.custom">
            <summary>
            自定义
            custom
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Status.used_gps">
            <summary>
            使用GPS卫星进行定位
            GPS satellites are used for positioning
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Status.used_beidou">
            <summary>
            使用北斗卫星进行定位
            Beidou satellites were used for positioning
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Status.used_glonass">
            <summary>
            使用GLONASS卫星进行定位
            GLONASS satellite was used for positioning  
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Status.used_galileo">
            <summary>
            使用Galileo卫星进行定位+
            Galileo satellite is used for positioning  
            </summary>
        </member>
        <member name="T:JT808.Protocol.Enums.JT808TelephoneBookContactType">
            <summary>
            电话本联系人标志
            Phone book contact mark
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808TelephoneBookContactType.callin">
            <summary>
            呼入
            call_in
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808TelephoneBookContactType.callout">
            <summary>
            呼出
            call_out
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808TelephoneBookContactType.call_in_out">
            <summary>
            呼入_呼出
            call_in|call_out
            </summary>
        </member>
        <member name="T:JT808.Protocol.Enums.JT808TerminalRegisterResult">
            <summary>
            终端注册返回结果
            The terminal registration result is returned
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808TerminalRegisterResult.success">
            <summary>
            成功
            success
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808TerminalRegisterResult.vehicle_registered">
            <summary>
            车辆已被注册
            The vehicle has been registered
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808TerminalRegisterResult.vehicle_not_database">
            <summary>
            数据库中无该车辆
            The vehicle is not in the database
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808TerminalRegisterResult.terminal_registered">
            <summary>
            终端已被注册
            The terminal has been registered
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808TerminalRegisterResult.terminal_not_database">
            <summary>
            数据库中无该终端
            The terminal is not in the database
            </summary>
        </member>
        <member name="T:JT808.Protocol.Enums.JT808TerminalResult">
            <summary>
            通用应答返回
            Universal reply return
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808TerminalResult.Success">
            <summary>
            成功/确认
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808TerminalResult.Fail">
            <summary>
            失败
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808TerminalResult.MessageError">
            <summary>
            消息有误
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808TerminalResult.NotSupport">
            <summary>
            不支持
            </summary>
        </member>
        <member name="T:JT808.Protocol.Enums.JT808UpgradeResult">
            <summary>
            升级结果
            Upgrade Result
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808UpgradeResult.success">
            <summary>
            成功
            success
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808UpgradeResult.fail">
            <summary>
            失败
            fail
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808UpgradeResult.cancel">
            <summary>
            取消
            cancel
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808UpgradeResult.yue_biao_active_safety_target_device_not_found">
            <summary>
            粤标主动安全-未找到目标设备
            Yue Biao active Safety. - Target device not found
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808UpgradeResult.yue_biao_active_safety_hardware_not_supported">
            <summary>
            粤标主动安全-硬件型号不支持
            Yue Biao Active Safety - hardware models not supported
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808UpgradeResult.yue_biao_active_safety_same_software_version">
            <summary>
            粤标主动安全-软件版本相同
            Yue Biao Active Safety - Same Software Version
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808UpgradeResult.yue_biao_active_safety_same_software_version_not_supported">
            <summary>
            粤标主动安全-软件版本不支持
            Yue Biao Active Safety - The software version is not supported
            </summary>
        </member>
        <member name="T:JT808.Protocol.Enums.JT808UpgradeType">
            <summary>
            升级类型
            Upgrade Type
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808UpgradeType.terminal">
            <summary>
            终端
            terminal
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808UpgradeType.road_transport_cert_ic_card_reader">
            <summary>
            道路运输证IC卡读卡器
            Road transport certificate IC card reader
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808UpgradeType.beidou_module">
            <summary>
            北斗卫星定位模块
            Beidou satellite positioning module
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808UpgradeType.adas">
            <summary>
            粤标主动安全-高级驾驶辅助系统
            Advanced driver assistance system
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808UpgradeType.dsm">
            <summary>
            粤标主动安全-驾驶状态监控系统
            Driving condition monitoring system
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808UpgradeType.tpms">
            <summary>
            粤标主动安全-胎压监测系统
            tire pressure monitoring system
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808UpgradeType.bsd">
            <summary>
            粤标主动安全-盲点监测系统
            Blind Spot Monitoring system
            </summary>
        </member>
        <member name="T:JT808.Protocol.Enums.JT808Version">
            <summary>
            JT808版本号
            JT808 Version
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Version.JTT2011">
            <summary>
            2011
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Version.JTT2013">
            <summary>
            2013
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Version.JTT2019">
            <summary>
            2019
            </summary>
        </member>
        <member name="F:JT808.Protocol.Enums.JT808Version.JTT2013Force">
            <summary>
            强制2013
            </summary>
        </member>
        <member name="T:JT808.Protocol.Exceptions.JT808Exception">
            <summary>
            JT808异常处理类
            Exception handling class
            </summary>
        </member>
        <member name="M:JT808.Protocol.Exceptions.JT808Exception.#ctor(JT808.Protocol.Enums.JT808ErrorCode)">
            <summary>
            
            </summary>
            <param name="errorCode"></param>
        </member>
        <member name="M:JT808.Protocol.Exceptions.JT808Exception.#ctor(JT808.Protocol.Enums.JT808ErrorCode,System.String)">
            <summary>
            
            </summary>
            <param name="errorCode"></param>
            <param name="message"></param>
        </member>
        <member name="M:JT808.Protocol.Exceptions.JT808Exception.#ctor(JT808.Protocol.Enums.JT808ErrorCode,System.Exception)">
            <summary>
            
            </summary>
            <param name="errorCode"></param>
            <param name="ex"></param>
        </member>
        <member name="M:JT808.Protocol.Exceptions.JT808Exception.#ctor(JT808.Protocol.Enums.JT808ErrorCode,System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="errorCode"></param>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="P:JT808.Protocol.Exceptions.JT808Exception.ErrorCode">
            <summary>
            JT808统一错误码
            Unified error code
            </summary>
        </member>
        <member name="T:JT808.Protocol.Extensions.JT808AnalyzeExtensions">
            <summary>
            JT808分析器扩展
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808AnalyzeExtensions.Analyze(System.Object,JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="instance"></param>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.Extensions.JT808EnumExtensions">
            <summary>
            枚举扩展
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808EnumExtensions.ToValue``1(``0)">
            <summary>
            转为整型
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808EnumExtensions.ToUInt16Value``1(``0)">
            <summary>
            转为 u16 整型
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808EnumExtensions.ToByteValue``1(``0)">
            <summary>
            转为Byte
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808EnumExtensions.ToValueString``1(``0)">
            <summary>
            转为整型
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808EnumExtensions.ToEnum``1(System.String)">
            <summary>
            字符转枚举
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808EnumExtensions.GetName(System.Enum)">
            <summary>
            获取枚举字符串
            </summary>
            <param name="valueEnum"></param>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808EnumExtensions.GetDescription(System.Enum)">
            <summary>
            获取DescriptionAttribute特性枚举值的描述
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808EnumExtensions.IsEnumValid``1(System.Int32)">
            <summary>
            验证是否是枚举类型
            </summary>
            <typeparam name="TEnum"></typeparam>
            <param name="enumValue"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808EnumExtensions.GetDescriptionAttributeDictionary(System.Enum)">
            <summary>
            获取DescriptionAttribute特性枚举及描述
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808EnumExtensions.GetDisplayName(System.Enum)">
            <summary>
            获取DisplayNameAttribute特性枚举值的描述
            </summary>
            <param name="value">枚举值</param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808EnumExtensions.GetDisplayNameAttributeDictionary(System.Enum)">
            <summary>
            获取DisplayNameAttribute特性枚举及描述
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808EnumExtensions.GetAttribute``1(System.Enum)">
            <summary>
            获取枚举对应特性
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808EnumExtensions.GetEnumTypes``1(System.UInt32,System.Int32,System.Boolean)">
            <summary>
            根据值获取对应枚举类型集合
            </summary>
            <typeparam name="T">具体枚举类型</typeparam>
            <param name="value">枚举值</param>
            <param name="digit">位数(8,16,32)</param>
            <param name="ignoreUnknown">是否忽略未知数据</param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.Extensions.JT808BinaryExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808BinaryExtensions.ToHexString(System.Byte[])">
            <summary>
            16进制数组转16进制字符串
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808BinaryExtensions.ToHexBytes(System.String)">
            <summary>
            16进制字符串转16进制数组
            </summary>
            <param name="hexString"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808BinaryExtensions.ReadHexStringLittle(System.ReadOnlySpan{System.Byte},System.Int32@,System.Int32)">
            <summary>
            从内存块中读取16进制字符串
            </summary>
            <param name="read"></param>
            <param name="offset"></param>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808BinaryExtensions.WriteHexStringLittle(System.Byte[],System.Int32,System.String,System.Int32)">
            <summary>
            将16进制字符串写入对应数组中
            </summary>
            <param name="bytes"></param>
            <param name="offset"></param>
            <param name="data"></param>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808BinaryExtensions.ReadNumber(System.Byte,System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808BinaryExtensions.ReadNumber(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808BinaryExtensions.ReadNumber(System.UInt32,System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="format"></param>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808BinaryExtensions.ReadNumber(System.Int64,System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="format"></param>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808BinaryExtensions.ReadNumber(System.UInt64,System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="format"></param>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808BinaryExtensions.ReadNumber(System.Int16,System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="format"></param>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808BinaryExtensions.ReadNumber(System.UInt16,System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="format"></param>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808BinaryExtensions.ReadBinary(System.UInt16)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808BinaryExtensions.ReadBinary(System.Int16)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808BinaryExtensions.ReadBinary(System.UInt32)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808BinaryExtensions.ReadBinary(System.Int32)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808BinaryExtensions.ReadBinary(System.Byte)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.Extensions.JT808BinaryExtensions.HexUtil">
            <summary>
             ref:"www.codeproject.com/tips/447938/high-performance-csharp-byte-array-to-hex-string-t"
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808BinaryExtensions.HexUtil.DoHexDump(System.ReadOnlySpan{System.Byte},System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <param name="fromIndex"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808BinaryExtensions.HexUtil.DoHexDump(System.Byte[],System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="array"></param>
            <param name="fromIndex"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.Extensions.JT808PackageExtensions">
            <summary>
            JT808创建包扩展
            </summary>
            <summary>
            todo:source-generators正式发布以后将T4模板换掉
            https://devblogs.microsoft.com/dotnet/introducing-c-source-generators/
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create``1(JT808.Protocol.Enums.JT808MsgId,System.String,``0)">
            <summary>
            根据消息Id创建包
            </summary>
            <typeparam name="TJT808Bodies"></typeparam>
            <param name="msgId"></param>
            <param name="terminalPhoneNo"></param>
            <param name="bodies"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String)">
            <summary>
            根据消息Id创建包
            </summary>
            <param name="msgId"></param>
            <param name="terminalPhoneNo"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.CreateCustomMsgId``1(System.UInt16,System.String,``0)">
            <summary>
            根据自定义消息Id创建包
            </summary>
            <typeparam name="TJT808Bodies"></typeparam>
            <param name="msgId"></param>
            <param name="terminalPhoneNo"></param>
            <param name="bodies"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.CreateCustomMsgId(System.UInt16,System.String)">
            <summary>
            根据自定义消息Id创建包
            </summary>
            <param name="msgId"></param>
            <param name="terminalPhoneNo"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019``1(JT808.Protocol.Enums.JT808MsgId,System.String,``0)">
            <summary>
            根据消息Id创建2019版本包
            </summary>
            <typeparam name="TJT808Bodies"></typeparam>
            <param name="msgId"></param>
            <param name="terminalPhoneNo"></param>
            <param name="bodies"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String)">
            <summary>
            根据消息Id创建2019版本包
            </summary>
            <param name="msgId"></param>
            <param name="terminalPhoneNo"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.CreateCustomMsgId2019``1(System.UInt16,System.String,``0)">
            <summary>
            根据自定义消息Id创建2019版本包
            </summary>
            <typeparam name="TJT808Bodies"></typeparam>
            <param name="msgId"></param>
            <param name="terminalPhoneNo"></param>
            <param name="bodies"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.CreateCustomMsgId2019(System.UInt16,System.String)">
            <summary>
            根据自定义消息Id创建2019版本包
            </summary>
            <param name="msgId"></param>
            <param name="terminalPhoneNo"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_终端通用应答(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0001)">
            <summary>
            0x0001 - 终端通用应答
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0001)">
            <summary>
            0x0001 - 终端通用应答
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_终端通用应答_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0001)">
            <summary>
            0x0001 - 终端通用应答
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0001)">
            <summary>
            0x0001 - 终端通用应答
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_终端心跳(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0002)">
            <summary>
            0x0002 - 终端心跳
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0002)">
            <summary>
            0x0002 - 终端心跳
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_终端心跳_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0002)">
            <summary>
            0x0002 - 终端心跳
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0002)">
            <summary>
            0x0002 - 终端心跳
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_终端注销(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0003)">
            <summary>
            0x0003 - 终端注销
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0003)">
            <summary>
            0x0003 - 终端注销
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_终端注销_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0003)">
            <summary>
            0x0003 - 终端注销
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0003)">
            <summary>
            0x0003 - 终端注销
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_查询服务器时间请求(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0004)">
            <summary>
            0x0004 - 查询服务器时间请求
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0004)">
            <summary>
            0x0004 - 查询服务器时间请求
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_查询服务器时间请求_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0004)">
            <summary>
            0x0004 - 查询服务器时间请求
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0004)">
            <summary>
            0x0004 - 查询服务器时间请求
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_终端补传分包请求(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0005)">
            <summary>
            0x0005 - 终端补传分包请求
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0005)">
            <summary>
            0x0005 - 终端补传分包请求
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_终端补传分包请求_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0005)">
            <summary>
            0x0005 - 终端补传分包请求
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0005)">
            <summary>
            0x0005 - 终端补传分包请求
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_终端注册(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0100)">
            <summary>
            0x0100 - 终端注册
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0100)">
            <summary>
            0x0100 - 终端注册
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_终端注册_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0100)">
            <summary>
            0x0100 - 终端注册
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0100)">
            <summary>
            0x0100 - 终端注册
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_终端鉴权(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0102)">
            <summary>
            0x0102 - 终端鉴权
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0102)">
            <summary>
            0x0102 - 终端鉴权
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_终端鉴权_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0102)">
            <summary>
            0x0102 - 终端鉴权
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0102)">
            <summary>
            0x0102 - 终端鉴权
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_查询终端参数应答(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0104)">
            <summary>
            0x0104 - 查询终端参数应答
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0104)">
            <summary>
            0x0104 - 查询终端参数应答
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_查询终端参数应答_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0104)">
            <summary>
            0x0104 - 查询终端参数应答
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0104)">
            <summary>
            0x0104 - 查询终端参数应答
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_查询终端属性应答(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0107)">
            <summary>
            0x0107 - 查询终端属性应答
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0107)">
            <summary>
            0x0107 - 查询终端属性应答
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_查询终端属性应答_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0107)">
            <summary>
            0x0107 - 查询终端属性应答
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0107)">
            <summary>
            0x0107 - 查询终端属性应答
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_终端升级结果通知(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0108)">
            <summary>
            0x0108 - 终端升级结果通知
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0108)">
            <summary>
            0x0108 - 终端升级结果通知
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_终端升级结果通知_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0108)">
            <summary>
            0x0108 - 终端升级结果通知
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0108)">
            <summary>
            0x0108 - 终端升级结果通知
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_位置信息汇报(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0200)">
            <summary>
            0x0200 - 位置信息汇报
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0200)">
            <summary>
            0x0200 - 位置信息汇报
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_位置信息汇报_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0200)">
            <summary>
            0x0200 - 位置信息汇报
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0200)">
            <summary>
            0x0200 - 位置信息汇报
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_位置信息查询应答(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0201)">
            <summary>
            0x0201 - 位置信息查询应答
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0201)">
            <summary>
            0x0201 - 位置信息查询应答
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_位置信息查询应答_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0201)">
            <summary>
            0x0201 - 位置信息查询应答
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0201)">
            <summary>
            0x0201 - 位置信息查询应答
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_事件报告(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0301)">
            <summary>
            0x0301 - 事件报告
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0301)">
            <summary>
            0x0301 - 事件报告
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_事件报告_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0301)">
            <summary>
            0x0301 - 事件报告
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0301)">
            <summary>
            0x0301 - 事件报告
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_提问应答(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0302)">
            <summary>
            0x0302 - 提问应答
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0302)">
            <summary>
            0x0302 - 提问应答
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_提问应答_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0302)">
            <summary>
            0x0302 - 提问应答
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0302)">
            <summary>
            0x0302 - 提问应答
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_信息点播_取消(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0303)">
            <summary>
            0x0303 - 信息点播_取消
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0303)">
            <summary>
            0x0303 - 信息点播_取消
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_信息点播_取消_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0303)">
            <summary>
            0x0303 - 信息点播_取消
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0303)">
            <summary>
            0x0303 - 信息点播_取消
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_车辆控制应答(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0500)">
            <summary>
            0x0500 - 车辆控制应答
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0500)">
            <summary>
            0x0500 - 车辆控制应答
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_车辆控制应答_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0500)">
            <summary>
            0x0500 - 车辆控制应答
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0500)">
            <summary>
            0x0500 - 车辆控制应答
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_查询区域或线路数据应答(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0608)">
            <summary>
            0x0608 - 查询区域或线路数据应答
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0608)">
            <summary>
            0x0608 - 查询区域或线路数据应答
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_查询区域或线路数据应答_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0608)">
            <summary>
            0x0608 - 查询区域或线路数据应答
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0608)">
            <summary>
            0x0608 - 查询区域或线路数据应答
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_行驶记录仪数据上传(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0700)">
            <summary>
            0x0700 - 行驶记录仪数据上传
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0700)">
            <summary>
            0x0700 - 行驶记录仪数据上传
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_行驶记录仪数据上传_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0700)">
            <summary>
            0x0700 - 行驶记录仪数据上传
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0700)">
            <summary>
            0x0700 - 行驶记录仪数据上传
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_电子运单上报(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0701)">
            <summary>
            0x0701 - 电子运单上报
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0701)">
            <summary>
            0x0701 - 电子运单上报
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_电子运单上报_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0701)">
            <summary>
            0x0701 - 电子运单上报
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0701)">
            <summary>
            0x0701 - 电子运单上报
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_驾驶员身份信息采集上报(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0702)">
            <summary>
            0x0702 - 驾驶员身份信息采集上报
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0702)">
            <summary>
            0x0702 - 驾驶员身份信息采集上报
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_驾驶员身份信息采集上报_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0702)">
            <summary>
            0x0702 - 驾驶员身份信息采集上报
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0702)">
            <summary>
            0x0702 - 驾驶员身份信息采集上报
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_定位数据批量上传(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0704)">
            <summary>
            0x0704 - 定位数据批量上传
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0704)">
            <summary>
            0x0704 - 定位数据批量上传
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_定位数据批量上传_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0704)">
            <summary>
            0x0704 - 定位数据批量上传
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0704)">
            <summary>
            0x0704 - 定位数据批量上传
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_CAN总线数据上传(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0705)">
            <summary>
            0x0705 - CAN总线数据上传
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0705)">
            <summary>
            0x0705 - CAN总线数据上传
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_CAN总线数据上传_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0705)">
            <summary>
            0x0705 - CAN总线数据上传
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0705)">
            <summary>
            0x0705 - CAN总线数据上传
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_多媒体事件信息上传(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0800)">
            <summary>
            0x0800 - 多媒体事件信息上传
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0800)">
            <summary>
            0x0800 - 多媒体事件信息上传
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_多媒体事件信息上传_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0800)">
            <summary>
            0x0800 - 多媒体事件信息上传
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0800)">
            <summary>
            0x0800 - 多媒体事件信息上传
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_多媒体数据上传(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0801)">
            <summary>
            0x0801 - 多媒体数据上传
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0801)">
            <summary>
            0x0801 - 多媒体数据上传
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_多媒体数据上传_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0801)">
            <summary>
            0x0801 - 多媒体数据上传
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0801)">
            <summary>
            0x0801 - 多媒体数据上传
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_存储多媒体数据检索应答(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0802)">
            <summary>
            0x0802 - 存储多媒体数据检索应答
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0802)">
            <summary>
            0x0802 - 存储多媒体数据检索应答
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_存储多媒体数据检索应答_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0802)">
            <summary>
            0x0802 - 存储多媒体数据检索应答
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0802)">
            <summary>
            0x0802 - 存储多媒体数据检索应答
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_摄像头立即拍摄命令应答(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0805)">
            <summary>
            0x0805 - 摄像头立即拍摄命令应答
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0805)">
            <summary>
            0x0805 - 摄像头立即拍摄命令应答
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_摄像头立即拍摄命令应答_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0805)">
            <summary>
            0x0805 - 摄像头立即拍摄命令应答
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0805)">
            <summary>
            0x0805 - 摄像头立即拍摄命令应答
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_数据上行透传(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0900)">
            <summary>
            0x0900 - 数据上行透传
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0900)">
            <summary>
            0x0900 - 数据上行透传
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_数据上行透传_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0900)">
            <summary>
            0x0900 - 数据上行透传
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0900)">
            <summary>
            0x0900 - 数据上行透传
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_数据压缩上报(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0901)">
            <summary>
            0x0901 - 数据压缩上报
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0901)">
            <summary>
            0x0901 - 数据压缩上报
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_数据压缩上报_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0901)">
            <summary>
            0x0901 - 数据压缩上报
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0901)">
            <summary>
            0x0901 - 数据压缩上报
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_终端RSA公钥(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0A00)">
            <summary>
            0x0A00 - 终端RSA公钥
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0A00)">
            <summary>
            0x0A00 - 终端RSA公钥
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_终端RSA公钥_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0A00)">
            <summary>
            0x0A00 - 终端RSA公钥
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x0A00)">
            <summary>
            0x0A00 - 终端RSA公钥
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_平台通用应答(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8001)">
            <summary>
            0x8001 - 平台通用应答
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8001)">
            <summary>
            0x8001 - 平台通用应答
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_平台通用应答_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8001)">
            <summary>
            0x8001 - 平台通用应答
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8001)">
            <summary>
            0x8001 - 平台通用应答
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_补传分包请求(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8003)">
            <summary>
            0x8003 - 补传分包请求
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8003)">
            <summary>
            0x8003 - 补传分包请求
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_补传分包请求_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8003)">
            <summary>
            0x8003 - 补传分包请求
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8003)">
            <summary>
            0x8003 - 补传分包请求
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_查询服务器时间应答(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8004)">
            <summary>
            0x8004 - 查询服务器时间应答
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8004)">
            <summary>
            0x8004 - 查询服务器时间应答
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_查询服务器时间应答_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8004)">
            <summary>
            0x8004 - 查询服务器时间应答
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8004)">
            <summary>
            0x8004 - 查询服务器时间应答
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_终端注册应答(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8100)">
            <summary>
            0x8100 - 终端注册应答
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8100)">
            <summary>
            0x8100 - 终端注册应答
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_终端注册应答_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8100)">
            <summary>
            0x8100 - 终端注册应答
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8100)">
            <summary>
            0x8100 - 终端注册应答
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_设置终端参数(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8103)">
            <summary>
            0x8103 - 设置终端参数
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8103)">
            <summary>
            0x8103 - 设置终端参数
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_设置终端参数_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8103)">
            <summary>
            0x8103 - 设置终端参数
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8103)">
            <summary>
            0x8103 - 设置终端参数
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_查询终端参数(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8104)">
            <summary>
            0x8104 - 查询终端参数
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8104)">
            <summary>
            0x8104 - 查询终端参数
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_查询终端参数_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8104)">
            <summary>
            0x8104 - 查询终端参数
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8104)">
            <summary>
            0x8104 - 查询终端参数
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_终端控制(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8105)">
            <summary>
            0x8105 - 终端控制
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8105)">
            <summary>
            0x8105 - 终端控制
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_终端控制_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8105)">
            <summary>
            0x8105 - 终端控制
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8105)">
            <summary>
            0x8105 - 终端控制
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_查询指定终端参数(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8106)">
            <summary>
            0x8106 - 查询指定终端参数
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8106)">
            <summary>
            0x8106 - 查询指定终端参数
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_查询指定终端参数_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8106)">
            <summary>
            0x8106 - 查询指定终端参数
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8106)">
            <summary>
            0x8106 - 查询指定终端参数
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_查询终端属性(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8107)">
            <summary>
            0x8107 - 查询终端属性
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8107)">
            <summary>
            0x8107 - 查询终端属性
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_查询终端属性_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8107)">
            <summary>
            0x8107 - 查询终端属性
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8107)">
            <summary>
            0x8107 - 查询终端属性
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_下发终端升级包(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8108)">
            <summary>
            0x8108 - 下发终端升级包
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8108)">
            <summary>
            0x8108 - 下发终端升级包
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_下发终端升级包_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8108)">
            <summary>
            0x8108 - 下发终端升级包
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8108)">
            <summary>
            0x8108 - 下发终端升级包
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_位置信息查询(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8201)">
            <summary>
            0x8201 - 位置信息查询
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8201)">
            <summary>
            0x8201 - 位置信息查询
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_位置信息查询_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8201)">
            <summary>
            0x8201 - 位置信息查询
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8201)">
            <summary>
            0x8201 - 位置信息查询
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_临时位置跟踪控制(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8202)">
            <summary>
            0x8202 - 临时位置跟踪控制
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8202)">
            <summary>
            0x8202 - 临时位置跟踪控制
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_临时位置跟踪控制_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8202)">
            <summary>
            0x8202 - 临时位置跟踪控制
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8202)">
            <summary>
            0x8202 - 临时位置跟踪控制
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_人工确认报警消息(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8203)">
            <summary>
            0x8203 - 人工确认报警消息
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8203)">
            <summary>
            0x8203 - 人工确认报警消息
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_人工确认报警消息_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8203)">
            <summary>
            0x8203 - 人工确认报警消息
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8203)">
            <summary>
            0x8203 - 人工确认报警消息
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_链路检测(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8204)">
            <summary>
            0x8204 - 链路检测
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8204)">
            <summary>
            0x8204 - 链路检测
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_链路检测_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8204)">
            <summary>
            0x8204 - 链路检测
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8204)">
            <summary>
            0x8204 - 链路检测
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_文本信息下发(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8300)">
            <summary>
            0x8300 - 文本信息下发
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8300)">
            <summary>
            0x8300 - 文本信息下发
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_文本信息下发_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8300)">
            <summary>
            0x8300 - 文本信息下发
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8300)">
            <summary>
            0x8300 - 文本信息下发
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_事件设置(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8301)">
            <summary>
            0x8301 - 事件设置
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8301)">
            <summary>
            0x8301 - 事件设置
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_事件设置_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8301)">
            <summary>
            0x8301 - 事件设置
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8301)">
            <summary>
            0x8301 - 事件设置
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_提问下发(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8302)">
            <summary>
            0x8302 - 提问下发
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8302)">
            <summary>
            0x8302 - 提问下发
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_提问下发_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8302)">
            <summary>
            0x8302 - 提问下发
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8302)">
            <summary>
            0x8302 - 提问下发
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_信息点播菜单设置(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8303)">
            <summary>
            0x8303 - 信息点播菜单设置
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8303)">
            <summary>
            0x8303 - 信息点播菜单设置
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_信息点播菜单设置_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8303)">
            <summary>
            0x8303 - 信息点播菜单设置
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8303)">
            <summary>
            0x8303 - 信息点播菜单设置
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_信息服务(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8304)">
            <summary>
            0x8304 - 信息服务
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8304)">
            <summary>
            0x8304 - 信息服务
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_信息服务_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8304)">
            <summary>
            0x8304 - 信息服务
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8304)">
            <summary>
            0x8304 - 信息服务
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_电话回拨(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8400)">
            <summary>
            0x8400 - 电话回拨
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8400)">
            <summary>
            0x8400 - 电话回拨
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_电话回拨_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8400)">
            <summary>
            0x8400 - 电话回拨
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8400)">
            <summary>
            0x8400 - 电话回拨
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_设置电话本(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8401)">
            <summary>
            0x8401 - 设置电话本
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8401)">
            <summary>
            0x8401 - 设置电话本
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_设置电话本_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8401)">
            <summary>
            0x8401 - 设置电话本
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8401)">
            <summary>
            0x8401 - 设置电话本
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_车辆控制(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8500)">
            <summary>
            0x8500 - 车辆控制
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8500)">
            <summary>
            0x8500 - 车辆控制
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_车辆控制_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8500)">
            <summary>
            0x8500 - 车辆控制
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8500)">
            <summary>
            0x8500 - 车辆控制
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_设置圆形区域(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8600)">
            <summary>
            0x8600 - 设置圆形区域
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8600)">
            <summary>
            0x8600 - 设置圆形区域
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_设置圆形区域_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8600)">
            <summary>
            0x8600 - 设置圆形区域
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8600)">
            <summary>
            0x8600 - 设置圆形区域
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_删除圆形区域(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8601)">
            <summary>
            0x8601 - 删除圆形区域
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8601)">
            <summary>
            0x8601 - 删除圆形区域
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_删除圆形区域_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8601)">
            <summary>
            0x8601 - 删除圆形区域
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8601)">
            <summary>
            0x8601 - 删除圆形区域
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_设置矩形区域(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8602)">
            <summary>
            0x8602 - 设置矩形区域
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8602)">
            <summary>
            0x8602 - 设置矩形区域
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_设置矩形区域_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8602)">
            <summary>
            0x8602 - 设置矩形区域
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8602)">
            <summary>
            0x8602 - 设置矩形区域
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_删除矩形区域(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8603)">
            <summary>
            0x8603 - 删除矩形区域
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8603)">
            <summary>
            0x8603 - 删除矩形区域
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_删除矩形区域_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8603)">
            <summary>
            0x8603 - 删除矩形区域
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8603)">
            <summary>
            0x8603 - 删除矩形区域
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_设置多边形区域(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8604)">
            <summary>
            0x8604 - 设置多边形区域
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8604)">
            <summary>
            0x8604 - 设置多边形区域
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_设置多边形区域_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8604)">
            <summary>
            0x8604 - 设置多边形区域
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8604)">
            <summary>
            0x8604 - 设置多边形区域
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_删除多边形区域(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8605)">
            <summary>
            0x8605 - 删除多边形区域
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8605)">
            <summary>
            0x8605 - 删除多边形区域
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_删除多边形区域_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8605)">
            <summary>
            0x8605 - 删除多边形区域
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8605)">
            <summary>
            0x8605 - 删除多边形区域
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_设置路线(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8606)">
            <summary>
            0x8606 - 设置路线
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8606)">
            <summary>
            0x8606 - 设置路线
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_设置路线_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8606)">
            <summary>
            0x8606 - 设置路线
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8606)">
            <summary>
            0x8606 - 设置路线
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_删除路线(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8607)">
            <summary>
            0x8607 - 删除路线
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8607)">
            <summary>
            0x8607 - 删除路线
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_删除路线_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8607)">
            <summary>
            0x8607 - 删除路线
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8607)">
            <summary>
            0x8607 - 删除路线
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_查询区域或线路数据(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8608)">
            <summary>
            0x8608 - 查询区域或线路数据
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8608)">
            <summary>
            0x8608 - 查询区域或线路数据
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_查询区域或线路数据_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8608)">
            <summary>
            0x8608 - 查询区域或线路数据
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8608)">
            <summary>
            0x8608 - 查询区域或线路数据
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_行驶记录数据采集命令(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8700)">
            <summary>
            0x8700 - 行驶记录数据采集命令
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8700)">
            <summary>
            0x8700 - 行驶记录数据采集命令
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_行驶记录数据采集命令_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8700)">
            <summary>
            0x8700 - 行驶记录数据采集命令
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8700)">
            <summary>
            0x8700 - 行驶记录数据采集命令
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_行驶记录参数下传命令(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8701)">
            <summary>
            0x8701 - 行驶记录参数下传命令
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8701)">
            <summary>
            0x8701 - 行驶记录参数下传命令
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_行驶记录参数下传命令_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8701)">
            <summary>
            0x8701 - 行驶记录参数下传命令
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8701)">
            <summary>
            0x8701 - 行驶记录参数下传命令
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_上报驾驶员身份信息请求(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8702)">
            <summary>
            0x8702 - 上报驾驶员身份信息请求
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8702)">
            <summary>
            0x8702 - 上报驾驶员身份信息请求
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_上报驾驶员身份信息请求_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8702)">
            <summary>
            0x8702 - 上报驾驶员身份信息请求
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8702)">
            <summary>
            0x8702 - 上报驾驶员身份信息请求
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_多媒体数据上传应答(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8800)">
            <summary>
            0x8800 - 多媒体数据上传应答
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8800)">
            <summary>
            0x8800 - 多媒体数据上传应答
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_多媒体数据上传应答_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8800)">
            <summary>
            0x8800 - 多媒体数据上传应答
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8800)">
            <summary>
            0x8800 - 多媒体数据上传应答
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_摄像头立即拍摄命令(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8801)">
            <summary>
            0x8801 - 摄像头立即拍摄命令
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8801)">
            <summary>
            0x8801 - 摄像头立即拍摄命令
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_摄像头立即拍摄命令_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8801)">
            <summary>
            0x8801 - 摄像头立即拍摄命令
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8801)">
            <summary>
            0x8801 - 摄像头立即拍摄命令
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_存储多媒体数据检索(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8802)">
            <summary>
            0x8802 - 存储多媒体数据检索
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8802)">
            <summary>
            0x8802 - 存储多媒体数据检索
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_存储多媒体数据检索_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8802)">
            <summary>
            0x8802 - 存储多媒体数据检索
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8802)">
            <summary>
            0x8802 - 存储多媒体数据检索
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_存储多媒体数据上传命令(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8803)">
            <summary>
            0x8803 - 存储多媒体数据上传命令
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8803)">
            <summary>
            0x8803 - 存储多媒体数据上传命令
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_存储多媒体数据上传命令_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8803)">
            <summary>
            0x8803 - 存储多媒体数据上传命令
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8803)">
            <summary>
            0x8803 - 存储多媒体数据上传命令
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_录音开始命令(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8804)">
            <summary>
            0x8804 - 录音开始命令
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8804)">
            <summary>
            0x8804 - 录音开始命令
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_录音开始命令_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8804)">
            <summary>
            0x8804 - 录音开始命令
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8804)">
            <summary>
            0x8804 - 录音开始命令
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_单条存储多媒体数据检索上传命令(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8805)">
            <summary>
            0x8805 - 单条存储多媒体数据检索上传命令
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8805)">
            <summary>
            0x8805 - 单条存储多媒体数据检索上传命令
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_单条存储多媒体数据检索上传命令_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8805)">
            <summary>
            0x8805 - 单条存储多媒体数据检索上传命令
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8805)">
            <summary>
            0x8805 - 单条存储多媒体数据检索上传命令
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_数据下行透传(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8900)">
            <summary>
            0x8900 - 数据下行透传
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8900)">
            <summary>
            0x8900 - 数据下行透传
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_数据下行透传_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8900)">
            <summary>
            0x8900 - 数据下行透传
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8900)">
            <summary>
            0x8900 - 数据下行透传
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_平台RSA公钥(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8A00)">
            <summary>
            0x8A00 - 平台RSA公钥
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8A00)">
            <summary>
            0x8A00 - 平台RSA公钥
            auto-generated
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create_平台RSA公钥_2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8A00)">
            <summary>
            0x8A00 - 平台RSA公钥
            auto-generated 2019 version
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808PackageExtensions.Create2019(JT808.Protocol.Enums.JT808MsgId,System.String,JT808.Protocol.MessageBody.JT808_0x8A00)">
            <summary>
            0x8A00 - 平台RSA公钥
            auto-generated 2019 version
            </summary>
        </member>
        <member name="T:JT808.Protocol.Extensions.JT808ValidationExtensions">
            <summary>
            验证长度扩展方法
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808ValidationExtensions.ValiString(System.String,System.String@,System.Int32@)">
            <summary>
            验证字符串长度
            </summary>
            <param name="value"></param>
            <param name="fieldName"></param>
            <param name="fixedLength"></param>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808ValidationExtensions.ValiMaxString(System.String,System.String@,System.Int32@)">
            <summary>
            验证字符串最大长度
            </summary>
            <param name="value"></param>
            <param name="fieldName"></param>
            <param name="maxLength"></param>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808ValidationExtensions.ValiBytes(System.Byte[],System.String@,System.Int32@)">
            <summary>
            验证数组长度
            </summary>
            <param name="value"></param>
            <param name="fieldName"></param>
            <param name="fixedLength"></param>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808ValidationExtensions.ValiList``1(System.Collections.Generic.IEnumerable{``0},System.String@,System.Int32@)">
            <summary>
            验证集合长度
            </summary>
            <param name="value"></param>
            <param name="fieldName"></param>
            <param name="fixedLength"></param>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808ValidationExtensions.vali(System.Int32@,System.String@,System.Int32@)">
            <summary>
            验证
            </summary>
            <param name="length"></param>
            <param name="fieldName"></param>
            <param name="fixedLength"></param>
        </member>
        <member name="T:JT808.Protocol.Extensions.JT808_0X0200_FactoryExtensions">
            <summary>
            0200扩展
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808_0X0200_FactoryExtensions.TryGetValue(JT808.Protocol.Interfaces.IJT808_0x0200_Factory,JT808.Protocol.Enums.JT808Version,System.Byte,System.Object@)">
            <summary>
            根据不同的版本号进行附加保留位判断
            </summary>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.Extensions.JT808_0x8105_CommandParameterExtensions">
            <summary>
            终端控制 命令参数扩展
            </summary>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808_0x8105_CommandParameterExtensions.CreateCommandParameter(System.Int32@)">
            <summary>
            创建标准命令参数
            </summary>
            <param name="order"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808_0x8105_CommandParameterExtensions.GetCommandParameter``1(System.Collections.Generic.List{JT808.Protocol.MessageBody.JT808_0x8105.ICommandParameter})">
            <summary>
            获取-连接控制
            </summary>
            <param name="CommandParameters"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Extensions.JT808_0x8105_CommandParameterExtensions.ToValueString(JT808.Protocol.MessageBody.JT808_0x8105.ICommandParameter)">
            <summary>
            获取-连接控制
            </summary>
            <param name="commandParameter"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.JT808ConfigExtensions">
            <summary>
            JT808配置扩展
            </summary>
        </member>
        <member name="M:JT808.Protocol.JT808ConfigExtensions.GetMessagePackFormatterByType(JT808.Protocol.IJT808Config,System.Type)">
            <summary>
            通过类型获取对应的消息序列化器
            </summary>
            <param name="jT808Config"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808ConfigExtensions.Cast``1(System.Object)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808ConfigExtensions.DeserializeExt``1(System.Object,JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="instance"></param>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808ConfigExtensions.SerializeExt(System.Object,JT808.Protocol.MessagePack.JT808MessagePackWriter@,System.Object,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="instance"></param>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808ConfigExtensions.GetAnalyzeByType(JT808.Protocol.IJT808Config,System.Type)">
            <summary>
            通过类型获取对应的消息分析器
            </summary>
            <param name="jT808Config"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808ConfigExtensions.GetMessagePackFormatter``1(JT808.Protocol.IJT808Config)">
            <summary>
            获取对应的消息序列化器
            </summary>
            <typeparam name="T"></typeparam>
            <param name="jT808Config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808ConfigExtensions.GetAnalyze``1(JT808.Protocol.IJT808Config)">
            <summary>
            获取对应的消息分析器
            </summary>
            <typeparam name="T"></typeparam>
            <param name="jT808Config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808ConfigExtensions.GetCarDVRSerializer(JT808.Protocol.IJT808Config)">
            <summary>
            获取JT19056序列化器
            </summary>
            <param name="jT808Config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808ConfigExtensions.GetSerializer(JT808.Protocol.IJT808Config)">
            <summary>
            获取JT808序列化器
            </summary>
            <param name="jT808Config"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.Formatters.IJT808FormatterFactory">
            <summary>
            序列化工厂
            Serialization factory
            </summary>
        </member>
        <member name="P:JT808.Protocol.Formatters.IJT808FormatterFactory.FormatterDict">
            <summary>
            
            </summary>
        </member>
        <member name="M:JT808.Protocol.Formatters.IJT808FormatterFactory.SetMap``1">
            <summary>
            
            </summary>
            <typeparam name="TJT808MessagePackFormatter"></typeparam>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.Formatters.IJT808MessagePackFormatter`1">
            <summary>
            序列化器接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:JT808.Protocol.Formatters.IJT808MessagePackFormatter`1.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,`0,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.Formatters.IJT808MessagePackFormatter`1.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.Formatters.IJT808MessagePackFormatter">
            <summary>
            
            </summary>
        </member>
        <member name="M:JT808.Protocol.Formatters.IJT808MessagePackFormatter.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,System.Object,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.Formatters.IJT808MessagePackFormatter.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.Formatters.JT808MessagePackFormatter`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:JT808.Protocol.Formatters.JT808MessagePackFormatter`1.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Formatters.JT808MessagePackFormatter`1.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,`0,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.IJT808Builder">
            <summary>
            JT808构造器
            </summary>
        </member>
        <member name="P:JT808.Protocol.IJT808Builder.Config">
            <summary>
            JT808配置
            </summary>
        </member>
        <member name="P:JT808.Protocol.IJT808Builder.Services">
            <summary>
            DI ServiceCollection
            </summary>
        </member>
        <member name="T:JT808.Protocol.Interfaces.GlobalConfigBase">
            <summary>
            全局配置基类
            </summary>
        </member>
        <member name="M:JT808.Protocol.Interfaces.GlobalConfigBase.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.GlobalConfigBase.ConfigId">
            <summary>
            配置Id
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.GlobalConfigBase.MsgSNDistributed">
            <summary>
            分布式消息自增流水号
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.GlobalConfigBase.Compress">
            <summary>
            压缩
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.GlobalConfigBase.SplitPackageStrategy">
            <summary>
            808分包策略
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.GlobalConfigBase.MsgIdFactory">
            <summary>
            808消息Id工厂
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.GlobalConfigBase.Encoding">
            <summary>
            GBK编码
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.GlobalConfigBase.SkipCRCCode">
            <summary>
            跳过校验码验证
            默认false
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.GlobalConfigBase.FormatterFactory">
            <summary>
            序列化器工厂
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.GlobalConfigBase.JT808_0X0200_Custom_Factory">
            <summary>
            0x0200自定义附加信息工厂
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.GlobalConfigBase.JT808_0X0200_Factory">
            <summary>
            0x0200附加信息工厂
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.GlobalConfigBase.JT808_0X8103_Custom_Factory">
            <summary>
            0x8103自定义终端参数设置自定义消息工厂
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.GlobalConfigBase.JT808_0X8103_Factory">
            <summary>
            0x8103终端参数设置消息工厂
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.GlobalConfigBase.TerminalPhoneNoLength">
            <summary>
            终端SIM卡长度
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.GlobalConfigBase.Trim">
            <summary>
            是否去掉头尾空格
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.GlobalConfigBase.JT808_0x0900_Custom_Factory">
            <summary>
            自定义数据上行透传消息工厂
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.GlobalConfigBase.JT808_0x8900_Custom_Factory">
            <summary>
            自定义数据下行透传消息工厂
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.GlobalConfigBase.JT808_0x8500_2019_Factory">
            <summary>
            车辆控制消息工厂
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.GlobalConfigBase.JT808_CarDVR_Up_Factory">
            <summary>
            JT19056上行消息工厂
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.GlobalConfigBase.JT808_CarDVR_Down_Factory">
            <summary>
            JT19056下行消息工厂
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.GlobalConfigBase.SkipCarDVRCRCCode">
            <summary>
            跳过校验码验证
            默认false
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.GlobalConfigBase.JT808_0x8105_Cusotm_Factory">
            <summary>
            终端控制自定义参数命令工厂
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.GlobalConfigBase.EnableAutoMerge">
            <inheritdoc/>
        </member>
        <member name="P:JT808.Protocol.Interfaces.GlobalConfigBase.AutoMergeTimeoutSecond">
            <inheritdoc/>
        </member>
        <member name="P:JT808.Protocol.Interfaces.GlobalConfigBase.Jt808PackageMerger">
            <inheritdoc/>
        </member>
        <member name="M:JT808.Protocol.Interfaces.GlobalConfigBase.Register(System.Reflection.Assembly[])">
            <summary>
            外部扩展程序集注册
            </summary>
            <param name="externalAssemblies"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Interfaces.GlobalConfigBase.ReplaceMsgId``2">
            <summary>
            替换原有消息
            </summary>
            <typeparam name="TSourceJT808Bodies"></typeparam>
            <typeparam name="TTargetJT808Bodies"></typeparam>
        </member>
        <member name="T:JT808.Protocol.Interfaces.IJT808Analyze">
            <summary>
            JT808分析器
            </summary>
        </member>
        <member name="M:JT808.Protocol.Interfaces.IJT808Analyze.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            分析器
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.Interfaces.IJT808Compress">
            <summary>
            压缩接口
            </summary>
        </member>
        <member name="M:JT808.Protocol.Interfaces.IJT808Compress.Compress(System.Byte[])">
            <summary>
            压缩
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Interfaces.IJT808Compress.Decompress(System.Byte[])">
            <summary>
            解压缩
            </summary>
            <param name="compressData"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.Interfaces.IJT808Description">
            <summary>
            消息描述接口
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.IJT808Description.Description">
            <summary>
            消息描述
            </summary>
        </member>
        <member name="T:JT808.Protocol.Interfaces.IJT808ExternalRegister">
            <summary>
            外部注册
            </summary>
        </member>
        <member name="M:JT808.Protocol.Interfaces.IJT808ExternalRegister.Register(System.Reflection.Assembly)">
            <summary>
            
            </summary>
            <param name="externalAssembly"></param>
        </member>
        <member name="T:JT808.Protocol.Interfaces.IJT808MsgIdFactory">
            <summary>
            JT808消息工厂接口
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.IJT808MsgIdFactory.Map">
            <summary>
            
            </summary>
        </member>
        <member name="M:JT808.Protocol.Interfaces.IJT808MsgIdFactory.TryGetValue(System.UInt16,System.Object@)">
            <summary>
            
            </summary>
            <param name="msgId"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Interfaces.IJT808MsgIdFactory.SetMap``1">
            <summary>
            
            </summary>
            <typeparam name="TJT808Bodies"></typeparam>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.Interfaces.IJT808MsgSNDistributed">
            <summary>
            JT808分布式自增流水号
            </summary>
        </member>
        <member name="M:JT808.Protocol.Interfaces.IJT808MsgSNDistributed.Increment(System.String)">
            <summary>
            根据终端SIM号自增
            </summary>
            <param name="terminalPhoneNo"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.Interfaces.IJT808SplitPackageStrategy">
            <summary>
            分包策略
            注意:处理808的分包读取完流需要先进行转义在进行分包
            </summary>
        </member>
        <member name="M:JT808.Protocol.Interfaces.IJT808SplitPackageStrategy.Processor(System.ReadOnlySpan{System.Byte})">
            <summary>
            分包处理器
            </summary>
            <param name="bigData"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.Interfaces.IJT808_0x0200_Custom_Factory">
            <summary>
            自定义0x0200附加信息工厂
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.IJT808_0x0200_Custom_Factory.Map">
            <summary>
            map JT808_0x0200_CustomBodyBase
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.IJT808_0x0200_Custom_Factory.Map2">
            <summary>
            map JT808_0x0200_CustomBodyBase2
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.IJT808_0x0200_Custom_Factory.Map3">
            <summary>
            map JT808_0x0200_CustomBodyBase3
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.IJT808_0x0200_Custom_Factory.Map4">
            <summary>
            map JT808_0x0200_CustomBodyBase4
            </summary>
        </member>
        <member name="M:JT808.Protocol.Interfaces.IJT808_0x0200_Custom_Factory.SetMap``1">
            <summary>
            
            </summary>
            <typeparam name="TJT808_0x0200_CustomBody"></typeparam>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Interfaces.IJT808_0x0200_Custom_Factory.SetMap2``1">
            <summary>
            
            </summary>
            <typeparam name="TJT808_0x0200_CustomBody2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Interfaces.IJT808_0x0200_Custom_Factory.SetMap3``1">
            <summary>
            
            </summary>
            <typeparam name="TJT808_0x0200_CustomBody3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.Interfaces.IJT808_0x0200_Custom_Factory.SetMap4``1">
            <summary>
            
            </summary>
            <typeparam name="TJT808_0x0200_CustomBody4"></typeparam>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.Interfaces.IJT808_0x0200_Factory">
            <summary>
            0x0200附加信息工厂
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.IJT808_0x0200_Factory.Map">
            <summary>
            
            </summary>
        </member>
        <member name="M:JT808.Protocol.Interfaces.IJT808_0x0200_Factory.SetMap``1">
            <summary>
            
            </summary>
            <typeparam name="TJT808_0x0200_Body"></typeparam>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.Interfaces.IJT808_0x0900_Custom_Factory">
            <summary>
            自定义数据上行透传
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.IJT808_0x0900_Custom_Factory.Map">
            <summary>
            
            </summary>
        </member>
        <member name="M:JT808.Protocol.Interfaces.IJT808_0x0900_Custom_Factory.SetMap``1">
            <summary>
            
            </summary>
            <typeparam name="TJT808_0x0900_BodyBase"></typeparam>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.Interfaces.IJT808_0x8103_Custom_Factory">
            <summary>
            自定义设置终端参数消息工厂
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.IJT808_0x8103_Custom_Factory.Map">
            <summary>
            
            </summary>
        </member>
        <member name="M:JT808.Protocol.Interfaces.IJT808_0x8103_Custom_Factory.SetMap``1">
            <summary>
            
            </summary>
            <typeparam name="TJT808_0x8103_CustomBody"></typeparam>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.Interfaces.IJT808_0x8103_Factory">
            <summary>
            设置终端参数消息工厂
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.IJT808_0x8103_Factory.Map">
            <summary>
            
            </summary>
        </member>
        <member name="M:JT808.Protocol.Interfaces.IJT808_0x8103_Factory.SetMap``1">
            <summary>
            
            </summary>
            <typeparam name="TJT808_0x8103_Body"></typeparam>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.Interfaces.IJT808_0x8105_Cusotm_Factory">
            <summary>
            自定义0x8105命令参数扩展工厂
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.IJT808_0x8105_Cusotm_Factory.Map">
            <summary>
            
            </summary>
        </member>
        <member name="M:JT808.Protocol.Interfaces.IJT808_0x8105_Cusotm_Factory.SetMap``1">
            <summary>
            
            </summary>
            <typeparam name="TICusotmCommandParameter"></typeparam>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.Interfaces.IJT808_0x8500_2019_Factory">
            <summary>
            车辆控制
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.IJT808_0x8500_2019_Factory.Map">
            <summary>
            
            </summary>
        </member>
        <member name="M:JT808.Protocol.Interfaces.IJT808_0x8500_2019_Factory.SetMap``1">
            <summary>
            
            </summary>
            <typeparam name="TJT808_0x8500_ControlType"></typeparam>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.Interfaces.IJT808_0x8900_Custom_Factory">
            <summary>
            自定义数据下行透传消息工厂
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.IJT808_0x8900_Custom_Factory.Map">
            <summary>
            
            </summary>
        </member>
        <member name="M:JT808.Protocol.Interfaces.IJT808_0x8900_Custom_Factory.SetMap``1">
            <summary>
            
            </summary>
            <typeparam name="TJT808_0x8900_BodyBase"></typeparam>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.Interfaces.IJT808_2019_Version">
            <summary>
            只用来标识2019版本增删改情况
            </summary>
        </member>
        <member name="T:JT808.Protocol.Interfaces.IJT808_CarDVR_Down_Factory">
            <summary>
            记录仪工厂
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.IJT808_CarDVR_Down_Factory.Map">
            <summary>
            
            </summary>
        </member>
        <member name="M:JT808.Protocol.Interfaces.IJT808_CarDVR_Down_Factory.SetMap``1">
            <summary>
            
            </summary>
            <typeparam name="TJT808CarDVRDownBodies"></typeparam>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.Interfaces.IJT808_CarDVR_Down_Package">
            <summary>
            
            </summary>
        </member>
        <member name="T:JT808.Protocol.Interfaces.IJT808_CarDVR_Up_Factory">
            <summary>
            记录仪工厂
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.IJT808_CarDVR_Up_Factory.Map">
            <summary>
            
            </summary>
        </member>
        <member name="M:JT808.Protocol.Interfaces.IJT808_CarDVR_Up_Factory.SetMap``1">
            <summary>
            
            </summary>
            <typeparam name="TJT808CarDVRUpBodies"></typeparam>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.Interfaces.IJT808_CarDVR_Up_Package">
            <summary>
            
            </summary>
        </member>
        <member name="T:JT808.Protocol.Interfaces.IMerger">
            <summary>
            合并分包数据接口
            </summary>
        </member>
        <member name="M:JT808.Protocol.Interfaces.IMerger.TryMerge(JT808.Protocol.JT808Header,System.Byte[],JT808.Protocol.IJT808Config,JT808.Protocol.JT808Bodies@)">
            <summary>
            合并元数据并反序列化数据包
            </summary>
            <param name="header">消息头</param>
            <param name="data">分包数据包中的消息体部分元数据<see cref="P:JT808.Protocol.JT808Package.SubDataBodies"/></param>
            <param name="config">配置项</param>
            <param name="body">反序列化得出的数据包</param>
            <returns>是否反序列化成功</returns>
        </member>
        <member name="T:JT808.Protocol.Interfaces.JT808_CarDVR_Down_Factory">
            <summary>
            记录仪工厂
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.JT808_CarDVR_Down_Factory.Map">
            <summary>
            
            </summary>
        </member>
        <member name="M:JT808.Protocol.Interfaces.JT808_CarDVR_Down_Factory.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:JT808.Protocol.Interfaces.JT808_CarDVR_Down_Factory.Register(System.Reflection.Assembly)">
            <summary>
            
            </summary>
            <param name="externalAssembly"></param>
        </member>
        <member name="M:JT808.Protocol.Interfaces.JT808_CarDVR_Down_Factory.SetMap``1">
            <summary>
            
            </summary>
            <typeparam name="TJT808CarDVRDownBodies"></typeparam>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.Interfaces.JT808_CarDVR_Up_Factory">
            <summary>
            记录仪工厂
            </summary>
        </member>
        <member name="P:JT808.Protocol.Interfaces.JT808_CarDVR_Up_Factory.Map">
            <summary>
            
            </summary>
        </member>
        <member name="M:JT808.Protocol.Interfaces.JT808_CarDVR_Up_Factory.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:JT808.Protocol.Interfaces.JT808_CarDVR_Up_Factory.Register(System.Reflection.Assembly)">
            <summary>
            
            </summary>
            <param name="externalAssembly"></param>
        </member>
        <member name="M:JT808.Protocol.Interfaces.JT808_CarDVR_Up_Factory.SetMap``1">
            <summary>
            
            </summary>
            <typeparam name="TJT808CarDVRUpBodies"></typeparam>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.IJT808Config">
            <summary>
            JT808接口配置
            </summary>
        </member>
        <member name="P:JT808.Protocol.IJT808Config.ConfigId">
            <summary>
            配置ID
            </summary>
        </member>
        <member name="P:JT808.Protocol.IJT808Config.MsgSNDistributed">
            <summary>
            消息流水号
            </summary>
        </member>
        <member name="P:JT808.Protocol.IJT808Config.MsgIdFactory">
            <summary>
            消息工厂
            </summary>
        </member>
        <member name="P:JT808.Protocol.IJT808Config.Compress">
            <summary>
            压缩接口
            </summary>
        </member>
        <member name="P:JT808.Protocol.IJT808Config.SplitPackageStrategy">
            <summary>
            分包策略
            注意:处理808的分包读取完流需要先进行转义在进行分包
            </summary>
        </member>
        <member name="P:JT808.Protocol.IJT808Config.Jt808PackageMerger">
            <summary>
            808自动合并组包接口
            </summary>
        </member>
        <member name="P:JT808.Protocol.IJT808Config.FormatterFactory">
            <summary>
            序列化器工厂
            </summary>
        </member>
        <member name="P:JT808.Protocol.IJT808Config.JT808_0X0200_Custom_Factory">
            <summary>
            自定义附加信息工厂
            </summary>
        </member>
        <member name="P:JT808.Protocol.IJT808Config.JT808_0X0200_Factory">
            <summary>
            附加信息工厂
            </summary>
        </member>
        <member name="P:JT808.Protocol.IJT808Config.JT808_0X8103_Custom_Factory">
             <summary>
            自定义设置终端参数工厂
             </summary>
        </member>
        <member name="P:JT808.Protocol.IJT808Config.JT808_0X8103_Factory">
             <summary>
            设置终端参数工厂
             </summary>
        </member>
        <member name="P:JT808.Protocol.IJT808Config.JT808_0x0900_Custom_Factory">
             <summary>
            数据上行透传工厂
             </summary>
        </member>
        <member name="P:JT808.Protocol.IJT808Config.JT808_0x8900_Custom_Factory">
             <summary>
            数据下行透传工厂
             </summary>
        </member>
        <member name="P:JT808.Protocol.IJT808Config.JT808_0x8500_2019_Factory">
            <summary>
            控制类型工厂
            </summary>
        </member>
        <member name="P:JT808.Protocol.IJT808Config.JT808_0x8105_Cusotm_Factory">
            <summary>
            终端控制自定义参数命令工厂
            </summary>
        </member>
        <member name="P:JT808.Protocol.IJT808Config.JT808_CarDVR_Up_Factory">
            <summary>
            记录仪上行命令字工厂
            </summary>
        </member>
        <member name="P:JT808.Protocol.IJT808Config.JT808_CarDVR_Down_Factory">
            <summary>
            记录仪下行命令字工厂
            </summary>
        </member>
        <member name="P:JT808.Protocol.IJT808Config.Encoding">
            <summary>
            统一编码
            </summary>
        </member>
        <member name="P:JT808.Protocol.IJT808Config.SkipCRCCode">
            <summary>
            跳过校验码
            测试的时候需要手动修改值，避免验证
            默认：false
            </summary>
        </member>
        <member name="P:JT808.Protocol.IJT808Config.SkipCarDVRCRCCode">
            <summary>
            跳过行车记录仪校验码
            测试的时候需要手动修改值，避免验证
            默认：false
            </summary>
        </member>
        <member name="P:JT808.Protocol.IJT808Config.Trim">
            <summary>
            ReadBCD是否需要去0操作
            默认是去0
            注意:有时候对协议来说是有意义的0
            </summary>
        </member>
        <member name="P:JT808.Protocol.IJT808Config.TerminalPhoneNoLength">
            <summary>
            设备终端号(默认12位)
            </summary>
        </member>
        <member name="P:JT808.Protocol.IJT808Config.EnableAutoMerge">
            <summary>
            是否启用自动组包，默认不启用。
            <para>当反序列化时遇到分包消息时，将分包数据缓存至内存，直到收到最后一包数据，将其取出进行反序列化，并清除相应缓存</para>
            </summary>
            <remarks>启用该选项存在一定风险，请谨慎使用。</remarks>
        </member>
        <member name="P:JT808.Protocol.IJT808Config.AutoMergeTimeoutSecond">
            <summary>
            自动合并分包超时时间,收到第一个分包开始计算，单位：秒，默认值300秒
            <para>如该值为30且第一个分包在2011-11-11 11:11:11时收到，则在2011-11-11 11:11:41时认为过期，期间如果未收到所有分包，则自动合并分包将无法完成，并将自动清理相关缓存</para>
            </summary>
        </member>
        <member name="M:JT808.Protocol.IJT808Config.Register(System.Reflection.Assembly[])">
            <summary>
            全局注册外部程序集
            </summary>
            <param name="externalAssemblies"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.IJT808Config.ReplaceMsgId``2">
            <summary>
            替换原有消息
            </summary>
        </member>
        <member name="T:JT808.Protocol.Internal.DefaultBuilder">
            <summary>
            默认JT808构造器
            </summary>
        </member>
        <member name="P:JT808.Protocol.Internal.DefaultBuilder.Services">
            <summary>
            DI服务
            </summary>
        </member>
        <member name="P:JT808.Protocol.Internal.DefaultBuilder.Config">
            <summary>
            JT808配置
            </summary>
        </member>
        <member name="M:JT808.Protocol.Internal.DefaultBuilder.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="services"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.Internal.DefaultGlobalConfig">
            <summary>
            默认全局配置
            </summary> 
        </member>
        <member name="P:JT808.Protocol.Internal.DefaultGlobalConfig.ConfigId">
            <summary>
            配置Id
            </summary>
        </member>
        <member name="M:JT808.Protocol.Internal.DefaultGlobalConfig.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="configId"></param>
        </member>
        <member name="T:JT808.Protocol.Internal.DefaultMerger">
            <summary>
            默认分包合并实现
            </summary>
        </member>
        <member name="F:JT808.Protocol.Internal.DefaultMerger.splitPackageDictionary">
            <summary>
            分包数据缓存
            <para>key为sim卡号，value为字典，key为消息id,value为元组，结构为：(分包索引,分包元数据)</para>
            </summary>
        </member>
        <member name="M:JT808.Protocol.Internal.DefaultMerger.TryMerge(JT808.Protocol.JT808Header,System.Byte[],JT808.Protocol.IJT808Config,JT808.Protocol.JT808Bodies@)">
            <inheritdoc/>
        </member>
        <member name="T:JT808.Protocol.JT808ArrayPool">
            <summary>
            内存池
            </summary>
        </member>
        <member name="M:JT808.Protocol.JT808ArrayPool.Rent(System.Int32)">
            <summary>
            申请
            </summary>
            <param name="minimumLength"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808ArrayPool.Return(System.Byte[],System.Boolean)">
            <summary>
            回收
            </summary>
            <param name="array"></param>
            <param name="clearArray"></param>
        </member>
        <member name="T:JT808.Protocol.JT808Bodies">
            <summary>
            JT808数据体
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808Bodies.SkipSerialization">
            <summary>
            跳过数据体序列化
            默认不跳过
            当数据体为空的时候，使用null作为空包感觉不适合，所以就算使用空包也需要new一下来表达意思。
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808Bodies.MsgId">
            <summary>
            消息Id
            </summary>
        </member>
        <member name="T:JT808.Protocol.JT808CarDVRDownBodies">
            <summary>
            记录仪上行数据体
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808CarDVRDownBodies.CommandId">
            <summary>
            命令字
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808CarDVRDownBodies.SkipSerialization">
            <summary>
            跳过数据体序列化
            默认不跳过
            当数据体为空的时候，使用null作为空包感觉不适合，所以就算使用空包也需要new一下来表达意思。
            </summary>
        </member>
        <member name="T:JT808.Protocol.JT808CarDVRDownPackage">
            <summary>
            行车记录仪下行数据包
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808CarDVRDownPackage.BeginFlag">
            <summary>
            头标识
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808CarDVRDownPackage.Begin">
            <summary>
            起始字头
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808CarDVRDownPackage.CommandId">
            <summary>
            命令字
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808CarDVRDownPackage.KeepFields">
            <summary>
            保留字段
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808CarDVRDownPackage.DataLength">
            <summary>
            数据块长度
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808CarDVRDownPackage.Bodies">
            <summary>
            记录仪体下行数据体
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808CarDVRDownPackage.CheckCode">
            <summary>
            校验字
            </summary>
        </member>
        <member name="M:JT808.Protocol.JT808CarDVRDownPackage.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.JT808CarDVRDownPackage,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.JT808CarDVRDownPackage.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808CarDVRDownPackage.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.JT808CarDVRSerializer">
            <summary>
            JT19056序列化器
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808CarDVRSerializer.JT808CarDVRUpPackage">
            <summary>
            
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808CarDVRSerializer.JT808CarDVRDownPackage">
            <summary>
            
            </summary>
        </member>
        <member name="M:JT808.Protocol.JT808CarDVRSerializer.#ctor(JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="jT808Config"></param>
        </member>
        <member name="M:JT808.Protocol.JT808CarDVRSerializer.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808CarDVRSerializer.SerializerId">
            <summary>
            
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808CarDVRSerializer.jT808Config">
            <summary>
            
            </summary>
        </member>
        <member name="M:JT808.Protocol.JT808CarDVRSerializer.Serialize(JT808.Protocol.JT808CarDVRUpPackage,JT808.Protocol.Enums.JT808Version,System.Int32)">
            <summary>
            
            </summary>
            <param name="package"></param>
            <param name="version"></param>
            <param name="minBufferSize"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808CarDVRSerializer.SerializeReadOnlySpan(JT808.Protocol.JT808CarDVRUpPackage,JT808.Protocol.Enums.JT808Version,System.Int32)">
            <summary>
            
            </summary>
            <param name="package"></param>
            <param name="version"></param>
            <param name="minBufferSize"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808CarDVRSerializer.Serialize(JT808.Protocol.JT808CarDVRDownPackage,JT808.Protocol.Enums.JT808Version,System.Int32)">
            <summary>
            
            </summary>
            <param name="package"></param>
            <param name="version"></param>
            <param name="minBufferSize"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808CarDVRSerializer.SerializeReadOnlySpan(JT808.Protocol.JT808CarDVRDownPackage,JT808.Protocol.Enums.JT808Version,System.Int32)">
            <summary>
            
            </summary>
            <param name="package"></param>
            <param name="version"></param>
            <param name="minBufferSize"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808CarDVRSerializer.UpDeserialize(System.ReadOnlySpan{System.Byte},JT808.Protocol.Enums.JT808Version)">
            <summary>
            
            </summary>
            <param name="bytes"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808CarDVRSerializer.DownDeserialize(System.ReadOnlySpan{System.Byte},JT808.Protocol.Enums.JT808Version)">
            <summary>
            
            </summary>
            <param name="bytes"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808CarDVRSerializer.Serialize``1(``0,JT808.Protocol.Enums.JT808Version,System.Int32)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <param name="version"></param>
            <param name="minBufferSize"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808CarDVRSerializer.SerializeReadOnlySpan``1(``0,JT808.Protocol.Enums.JT808Version,System.Int32)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <param name="version"></param>
            <param name="minBufferSize"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808CarDVRSerializer.Deserialize``1(System.ReadOnlySpan{System.Byte},JT808.Protocol.Enums.JT808Version)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="bytes"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808CarDVRSerializer.Deserialize(System.ReadOnlySpan{System.Byte},System.Type,JT808.Protocol.Enums.JT808Version)">
            <summary>
            
            </summary>
            <param name="bytes"></param>
            <param name="type"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808CarDVRSerializer.UpAnalyze(System.ReadOnlySpan{System.Byte},JT808.Protocol.Enums.JT808Version,System.Text.Json.JsonWriterOptions)">
            <summary>
            
            </summary>
            <param name="bytes"></param>
            <param name="version"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808CarDVRSerializer.DownAnalyze(System.ReadOnlySpan{System.Byte},JT808.Protocol.Enums.JT808Version,System.Text.Json.JsonWriterOptions)">
            <summary>
            
            </summary>
            <param name="bytes"></param>
            <param name="version"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808CarDVRSerializer.Analyze``1(System.ReadOnlySpan{System.Byte},JT808.Protocol.Enums.JT808Version,System.Text.Json.JsonWriterOptions)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="bytes"></param>
            <param name="version"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808CarDVRSerializer.UpAnalyzeJsonBuffer(System.ReadOnlySpan{System.Byte},JT808.Protocol.Enums.JT808Version,System.Text.Json.JsonWriterOptions)">
            <summary>
            
            </summary>
            <param name="bytes"></param>
            <param name="version"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808CarDVRSerializer.DownAnalyzeJsonBuffer(System.ReadOnlySpan{System.Byte},JT808.Protocol.Enums.JT808Version,System.Text.Json.JsonWriterOptions)">
            <summary>
            
            </summary>
            <param name="bytes"></param>
            <param name="version"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808CarDVRSerializer.AnalyzeJsonBuffer``1(System.ReadOnlySpan{System.Byte},JT808.Protocol.Enums.JT808Version,System.Text.Json.JsonWriterOptions)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="bytes"></param>
            <param name="version"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.JT808CarDVRUpBodies">
            <summary>
            记录仪上行数据体
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808CarDVRUpBodies.CommandId">
            <summary>
            命令字
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808CarDVRUpBodies.SkipSerialization">
            <summary>
            跳过数据体序列化
            默认不跳过
            当数据体为空的时候，使用null作为空包感觉不适合，所以就算使用空包也需要new一下来表达意思。
            </summary>
        </member>
        <member name="T:JT808.Protocol.JT808CarDVRUpPackage">
            <summary>
            行车记录仪上行数据包
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808CarDVRUpPackage.BeginFlag">
            <summary>
            起始字头
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808CarDVRUpPackage.Begin">
            <summary>
            起始字头
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808CarDVRUpPackage.CommandId">
            <summary>
            命令字
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808CarDVRUpPackage.ErrorFlag">
            <summary>
            错误标志
            CommandId == 0xFA || CommandId == 0xFB
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808CarDVRUpPackage.DataLength">
            <summary>
            数据块长度
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808CarDVRUpPackage.KeepFields">
            <summary>
            保留字段
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808CarDVRUpPackage.Bodies">
            <summary>
            记录仪体上行数据体
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808CarDVRUpPackage.CheckCode">
            <summary>
            校验字
            </summary>
        </member>
        <member name="M:JT808.Protocol.JT808CarDVRUpPackage.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.JT808CarDVRUpPackage.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808CarDVRUpPackage.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.JT808CarDVRUpPackage,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.JT808Constants">
            <summary>
            JT808常量
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808Constants.DateLimitYear">
            <summary>
            日期限制于2000年
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.UTCBaseTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808Constants.Encoding">
            <summary>
            
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x0200_0x01">
            <summary>
            JT808_0x0200_0x01
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x0200_0x02">
            <summary>
            JT808_0x0200_0x02
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x0200_0x03">
            <summary>
            JT808_0x0200_0x03
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x0200_0x04">
            <summary>
            JT808_0x0200_0x04
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x0200_0x05">
            <summary>
            JT808_0x0200_0x05
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x0200_0x06">
            <summary>
            JT808_0x0200_0x06
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x0200_0x07">
            <summary>
            JT808_0x0200_0x07
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x0200_0x11">
            <summary>
            JT808_0x0200_0x11
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x0200_0x12">
            <summary>
            JT808_0x0200_0x12
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x0200_0x13">
            <summary>
            JT808_0x0200_0x13
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x0200_0x25">
            <summary>
            JT808_0x0200_0x25
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x0200_0x2A">
            <summary>
            JT808_0x0200_0x2A
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x0200_0x2B">
            <summary>
            JT808_0x0200_0x2B
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x0200_0x30">
            <summary>
            JT808_0x0200_0x30
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x0200_0x31">
            <summary>
            JT808_0x0200_0x31
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0001">
            <summary>
            终端心跳发送间隔，单位为秒（s）
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0002">
            <summary>
            TCP 消息应答超时时间，单位为秒（s）
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0003">
            <summary>
            TCP 消息重传次数
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0004">
            <summary>
            UDP 消息应答超时时间，单位为秒（s）
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0005">
            <summary>
             UDP 消息重传次数
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0006">
            <summary>
            SMS 消息应答超时时间，单位为秒（s）
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0007">
            <summary>
            SMS 消息重传次数
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0010">
            <summary>
            主服务器 APN，无线通信拨号访问点。若网络制式为 CDMA，则该处为PPP 拨号号码
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0011">
            <summary>
            主服务器无线通信拨号用户名
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0012">
            <summary>
            主服务器无线通信拨号密码
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0013">
            <summary>
            主服务器地址,IP 或域名
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0014">
            <summary>
            主服务器地址,IP 或域名
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0015">
            <summary>
            备份服务器无线通信拨号用户名
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0016">
            <summary>
            备份服务器无线通信拨号密码
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0017">
            <summary>
            备份服务器地址,IP 或域名
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0018">
            <summary>
            服务器 TCP 端口
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0019">
            <summary>
            服务器 UDP 端口
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x001A">
            <summary>
            道路运输证 IC 卡认证主服务器 IP 地址或域名
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x001B">
            <summary>
            道路运输证 IC 卡认证主服务器 TCP 端口
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x001C">
            <summary>
            道路运输证 IC 卡认证主服务器 UDP 端口
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x001D">
            <summary>
            道路运输证 IC 卡认证备份服务器 IP 地址或域名，端口同主服务器
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0020">
            <summary>
            位置汇报策略，0：定时汇报；1：定距汇报；2：定时和定距汇报
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0021">
            <summary>
            位置汇报方案，0：根据 ACC 状态； 1：根据登录状态和 ACC 状态，先判断登录状态，若登录再根据 ACC 状态
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0022">
            <summary>
            驾驶员未登录汇报时间间隔，单位为秒（s），>0
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0027">
            <summary>
            休眠时汇报时间间隔，单位为秒（s），>0
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0028">
            <summary>
            紧急报警时汇报时间间隔，单位为秒（s），>0
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0029">
            <summary>
            缺省时间汇报间隔，单位为秒（s），>0
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x002C">
            <summary>
            缺省距离汇报间隔，单位为米（m），>0
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x002D">
            <summary>
            驾驶员未登录汇报距离间隔，单位为米（m），>0
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x002E">
            <summary>
            休眠时汇报距离间隔，单位为米（m），>0
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x002F">
            <summary>
            紧急报警时汇报距离间隔，单位为米（m）>0
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0030">
            <summary>
            拐点补传角度小于180
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0031">
            <summary>
            电子围栏半径（非法位移阈值），单位为米
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0032">
            <summary>
            电子围栏半径（非法位移阈值），单位为米
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0040">
            <summary>
            监控平台电话号码
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0041">
            <summary>
            复位电话号码，可采用此电话号码拨打终端电话让终端复位
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0042">
            <summary>
            恢复出厂设置电话号码，可采用此电话号码拨打终端电话让终端恢复出厂设置
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0043">
            <summary>
            监控平台 SMS 电话号码
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0044">
            <summary>
            接收终端 SMS 文本报警号码
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0045">
            <summary>
            终端电话接听策略，0：自动接听；1：ACC ON 时自动接听，OFF 时手动接听
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0046">
            <summary>
            每次最长通话时间，单位为秒（s），0 为不允许通话，0xFFFFFFFF 为不限制
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0047">
            <summary>
            当月最长通话时间，单位为秒（s），0 为不允许通话，0xFFFFFFFF 为不限制
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0048">
            <summary>
            监听电话号码
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0049">
            <summary>
            监管平台特权短信号码
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0050">
            <summary>
            报警屏蔽字，与位置信息汇报消息中的报警标志相对应，相应位为 1则相应报警被屏蔽
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0051">
            <summary>
            报警发送文本 SMS 开关，与位置信息汇报消息中的报警标志相对应，相应位为 1 则相应报警时发送文本 SMS
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0052">
            <summary>
            报警拍摄开关，与位置信息汇报消息中的报警标志相对应，相应位为1 则相应报警时摄像头拍摄
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0053">
            <summary>
            报警拍摄存储标志，与位置信息汇报消息中的报警标志相对应，相应位为 1 则对相应报警时拍的照片进行存储，否则实时上传
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0054">
            <summary>
            关键标志，与位置信息汇报消息中的报警标志相对应，相应位为 1 则对相应报警为关键报警
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0055">
            <summary>
            最高速度，单位为公里每小时（km/h）
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0056">
            <summary>
            超速持续时间，单位为秒（s）
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0057">
            <summary>
            连续驾驶时间门限，单位为秒（s）
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0058">
            <summary>
            当天累计驾驶时间门限，单位为秒（s）
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0059">
            <summary>
            最小休息时间，单位为秒（s）
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x005A">
            <summary>
            最长停车时间，单位为秒（s）
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x005B">
            <summary>
            超速报警预警差值，单位为 1/10Km/h
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x005C">
            <summary>
            疲劳驾驶预警差值，单位为秒（s），>0
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x005D">
            <summary>
            碰撞报警参数设置
            b7-b0： 碰撞时间，单位 4ms；
            b15-b8：碰撞加速度，单位 0.1g，设置范围在：0-79 之间，默认为10。
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x005E">
            <summary>
            侧翻报警参数设置：
            侧翻角度，单位 1 度，默认为 30 度
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0064">
            <summary>
            定时拍照控制，见 表 13
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0065">
            <summary>
            定距拍照控制，见 表 14
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0070">
            <summary>
            图像/视频质量，1-10，1 最好
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0071">
            <summary>
            亮度，0-255
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0072">
            <summary>
            对比度，0-127
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0073">
            <summary>
            饱和度，0-127
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0074">
            <summary>
            色度，0-255
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0080">
            <summary>
            车辆里程表读数，1/10km
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0081">
            <summary>
            车辆所在的省域 ID
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0082">
            <summary>
            车辆所在的市域 ID
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0083">
            <summary>
            公安交通管理部门颁发的机动车号牌
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0084">
            <summary>
            车牌颜色，按照 JT/T415-2006 的 5.4.12
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0090">
            <summary>
            GNSS 定位模式，定义如下：
            bit0，0：禁用 GPS 定位， 1：启用 GPS 定位；
            bit1，0：禁用北斗定位， 1：启用北斗定位；
            bit2，0：禁用 GLONASS 定位， 1：启用 GLONASS 定位；
            bit3，0：禁用 Galileo 定位， 1：启用 Galileo 定位。
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0091">
            <summary>
            GNSS 波特率，定义如下：
            0x00：4800；0x01：9600；
            0x02：19200；0x03：38400；
            0x04：57600；0x05：115200。
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0092">
            <summary>
            GNSS 模块详细定位数据输出频率，定义如下：
            0x00：500ms；0x01：1000ms（默认值）；
            0x02：2000ms；0x03：3000ms；
            0x04：4000ms。
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0093">
            <summary>
            GNSS 模块详细定位数据采集频率，单位为秒，默认为 1。
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0094">
            <summary>
            GNSS 模块详细定位数据上传方式
            0x00，本地存储，不上传（默认值）；
            0x01，按时间间隔上传；
            0x02，按距离间隔上传；
            0x0B，按累计时间上传，达到传输时间后自动停止上传；
            0x0C，按累计距离上传，达到距离后自动停止上传；
            0x0D，按累计条数上传，达到上传条数后自动停止上传。
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0095">
            <summary>
            GNSS 模块详细定位数据上传设置：
            上传方式为 0x01 时，单位为秒；
            上传方式为 0x02 时，单位为米；
            上传方式为 0x0B 时，单位为秒；
            上传方式为 0x0C 时，单位为米；
            上传方式为 0x0D 时，单位为条。
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0100">
            <summary>
            CAN 总线通道 1 采集时间间隔(ms)，0 表示不采集
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0101">
            <summary>
            CAN 总线通道 1 上传时间间隔(s)，0 表示不上传
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0102">
            <summary>
            CAN 总线通道 2 采集时间间隔(ms)，0 表示不采集
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0103">
            <summary>
            CAN 总线通道 2 上传时间间隔(s)，0 表示不上传
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Constants.JT808_0x8103_0x0110">
            <summary>
            CAN 总线 ID 单独采集设置：
            bit63-bit32 表示此 ID 采集时间间隔(ms)，0 表示不采集；
            bit31 表示 CAN 通道号，0：CAN1，1：CAN2；
            bit30 表示帧类型，0：标准帧，1：扩展帧；
            bit29 表示数据采集方式，0：原始数据，1：采集区间的计算值；
            bit28-bit0 表示 CAN 总线 ID。
            </summary>
        </member>
        <member name="T:JT808.Protocol.JT808Header">
            <summary>
            头部
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808Header.MsgId">
            <summary>
            消息ID 
            <see cref="T:JT808.Protocol.Enums.JT808MsgId"/>
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808Header.MessageBodyProperty">
            <summary>
            消息体属性
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808Header.ProtocolVersion">
            <summary>
            协议版本号(2019版本)
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808Header.TerminalPhoneNo">
            <summary>
            终端手机号
            根据安装后终端自身的手机号转换。手机号不足 12 位，则在前补充数字，大陆手机号补充数字 0，港澳台则根据其区号进行位数补充
            (2019版本)手机号不足 20 位，则在前补充数字 0
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808Header.MsgNum">
            <summary>
            消息流水号
            发送计数器
            占用两个字节，为发送信息的序列号，用于接收方检测是否有信息的丢失，上级平台和下级平台接自己发送数据包的个数计数，互不影响。
            程序开始运行时等于零，发送第一帧数据时开始计数，到最大数后自动归零
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808Header.ManualMsgNum">
            <summary>
            手动消息流水号（only test）
            发送计数器
            占用两个字节，为发送信息的序列号，用于接收方检测是否有信息的丢失，上级平台和下级平台接自己发送数据包的个数计数，互不影响。
            程序开始运行时等于零，发送第一帧数据时开始计数，到最大数后自动归零
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808Header.PackgeCount">
            <summary>
            消息总包数
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808Header.PackageIndex">
            <summary>
            报序号 从1开始
            </summary>
        </member>
        <member name="M:JT808.Protocol.JT808Header.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808Header.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.JT808Header,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.JT808HeaderMessageBodyProperty">
            <summary>
            头部消息体属性
            </summary>
        </member>
        <member name="M:JT808.Protocol.JT808HeaderMessageBodyProperty.#ctor(System.Int32,System.Boolean,System.Boolean,JT808.Protocol.Enums.JT808EncryptMethod)">
            <summary>
            
            </summary>
            <param name="dataLength"></param>
            <param name="isPackage"></param>
            <param name="versionFlag"></param>
            <param name="jT808EncryptMethod"></param>
        </member>
        <member name="M:JT808.Protocol.JT808HeaderMessageBodyProperty.#ctor(System.Boolean,System.Boolean,JT808.Protocol.Enums.JT808EncryptMethod)">
            <summary>
            
            </summary>
            <param name="isPackage"></param>
            <param name="versionFlag"></param>
            <param name="jT808EncryptMethod"></param>
        </member>
        <member name="M:JT808.Protocol.JT808HeaderMessageBodyProperty.#ctor(System.Boolean,JT808.Protocol.Enums.JT808EncryptMethod)">
            <summary>
            
            </summary>
            <param name="versionFlag"></param>
            <param name="jT808EncryptMethod"></param>
        </member>
        <member name="M:JT808.Protocol.JT808HeaderMessageBodyProperty.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:JT808.Protocol.JT808HeaderMessageBodyProperty.#ctor(System.UInt16)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:JT808.Protocol.JT808HeaderMessageBodyProperty.VersionFlag">
            <summary>
            版本标识（默认为1=true）
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808HeaderMessageBodyProperty.Reserve">
            <summary>
            保留
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808HeaderMessageBodyProperty.IsPackage">
            <summary>
            是否分包
             true-1  表示消息体为长消息，进行分包发送处理
             false-0 消息头中无消息包封装项字段。
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808HeaderMessageBodyProperty.IsMerged">
            <summary>
            当<see cref="P:JT808.Protocol.JT808HeaderMessageBodyProperty.IsPackage"/>为true时，表示是否已自动合并为完整的包
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808HeaderMessageBodyProperty.Encrypt">
            <summary>
            加密标识，0为不加密
            当此三位都为 0，表示消息体不加密；
            当第 10 位为 1，表示消息体经过 RSA 算法加密；
            todo:没有涉及到加密先不考虑
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808HeaderMessageBodyProperty.DataLength">
            <summary>
            消息体长度
            </summary>
        </member>
        <member name="M:JT808.Protocol.JT808HeaderMessageBodyProperty.Wrap">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.JT808HeaderPackage">
            <summary>
            JT808头部数据包
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808HeaderPackage.Begin">
            <summary>
            起始符
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808HeaderPackage.Header">
            <summary>
            头数据
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808HeaderPackage.Bodies">
            <summary>
            数据体
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808HeaderPackage.CheckCode">
            <summary>
            校验码
            从消息头开始，同后一字节异或，直到校验码前一个字节，占用一个字节。
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808HeaderPackage.End">
            <summary>
            终止符
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808HeaderPackage.Version">
            <summary>
            808版本号
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808HeaderPackage.OriginalData">
            <summary>
            原数据
            </summary>
        </member>
        <member name="M:JT808.Protocol.JT808HeaderPackage.#ctor(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.JT808Package">
            <summary>
            JT808数据包
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Package.BeginFlag">
            <summary>
            起始符
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Package.EndFlag">
            <summary>
            终止符
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808Package.Begin">
            <summary>
            起始符
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808Package.Header">
            <summary>
            头数据
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808Package.Bodies">
            <summary>
            数据体
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808Package.SubDataBodies">
            <summary>
            分包数据体
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808Package.CheckCode">
            <summary>
            校验码
            从消息头开始，同后一字节异或，直到校验码前一个字节，占用一个字节。
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808Package.End">
            <summary>
            终止符
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808Package.Version">
            <summary>
            808版本号
            </summary>
        </member>
        <member name="M:JT808.Protocol.JT808Package.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808Package.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.JT808Package,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.JT808Package.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.JT808Serializer">
            <summary>
            JT808序列化器
            </summary>
        </member>
        <member name="F:JT808.Protocol.JT808Serializer.Instance">
            <summary>
            默认实例
            default instance
            </summary>
        </member>
        <member name="M:JT808.Protocol.JT808Serializer.#ctor(JT808.Protocol.IJT808Config)">
            <summary>
            ctor
            </summary>
            <param name="jT808Config"></param>
        </member>
        <member name="M:JT808.Protocol.JT808Serializer.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="P:JT808.Protocol.JT808Serializer.SerializerId">
            <summary>
            标识
            </summary>
        </member>
        <member name="M:JT808.Protocol.JT808Serializer.Serialize(JT808.Protocol.JT808Package,JT808.Protocol.Enums.JT808Version,System.Int32)">
            <summary>
            序列化数据包
            </summary>
            <param name="package">数据包</param>
            <param name="version">协议版本</param>
            <param name="minBufferSize">最低所需缓冲区大小</param>
            <returns>元数据</returns>
        </member>
        <member name="M:JT808.Protocol.JT808Serializer.Deserialize(System.ReadOnlySpan{System.Byte},JT808.Protocol.Enums.JT808Version,System.Int32)">
            <summary>
            反序列化
            </summary>
            <param name="bytes">元数据</param>
            <param name="version">协议版本</param>
            <param name="minBufferSize">最低所需缓冲区大小</param>
            <returns>数据包</returns>
        </member>
        <member name="M:JT808.Protocol.JT808Serializer.Serialize``1(``0,JT808.Protocol.Enums.JT808Version,System.Int32)">
            <summary>
            序列化
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj">数据包</param>
            <param name="version">协议版本</param>
            <param name="minBufferSize">最低所需缓冲区大小</param>
            <returns>元数据</returns>
        </member>
        <member name="M:JT808.Protocol.JT808Serializer.Deserialize``1(System.ReadOnlySpan{System.Byte},JT808.Protocol.Enums.JT808Version,System.Int32)">
            <summary>
            根据泛型反序列化元数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="bytes">元素书</param>
            <param name="version">协议版本</param>
            <param name="minBufferSize">最低所需缓冲区大小</param>
            <returns>数据包</returns>
        </member>
        <member name="M:JT808.Protocol.JT808Serializer.CheckPackageType(System.Type)">
            <summary>
            验证类型是否为<see cref="F:JT808.Protocol.JT808Serializer.JT808_Package_Type"/>或者<see cref="F:JT808.Protocol.JT808Serializer.JT808_Header_Package_Type"/>
            </summary>
            <param name="type">需要验证的类型</param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808Serializer.HeaderDeserialize(System.ReadOnlySpan{System.Byte},JT808.Protocol.Enums.JT808Version,System.Int32)">
            <summary>
            反序列化消息头
            <para>用于负载或者分布式的时候，在网关只需要解到头部，根据头部的消息Id进行分发处理，可以防止小部分性能损耗。</para>
            </summary>
            <param name="bytes">元数据</param>
            <param name="version">协议版本</param>
            <param name="minBufferSize">最低所需缓冲区大小</param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808Serializer.Deserialize(System.ReadOnlySpan{System.Byte},System.Type,JT808.Protocol.Enums.JT808Version,System.Int32)">
            <summary>
            根据类型反序列化
            </summary>
            <param name="bytes">元数据</param>
            <param name="type">类型</param>
            <param name="version">协议版本</param>
            <param name="minBufferSize">最低所需缓冲区大小</param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808Serializer.Analyze(System.ReadOnlySpan{System.Byte},JT808.Protocol.Enums.JT808Version,System.Text.Json.JsonWriterOptions,System.Int32)">
            <summary>
            分析元数据至json
            </summary>
            <param name="bytes">元数据</param>
            <param name="version">协议版本</param>
            <param name="options">json选项</param>
            <param name="minBufferSize">最低所需缓冲区大小</param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808Serializer.Analyze``1(System.ReadOnlySpan{System.Byte},JT808.Protocol.Enums.JT808Version,System.Text.Json.JsonWriterOptions,System.Int32)">
            <summary>
            分析元数据至json
            </summary>
            <typeparam name="T"></typeparam>
            <param name="bytes">元数据</param>
            <param name="version">协议版本</param>
            <param name="options">json序列化选项</param>
            <param name="minBufferSize">最低所需缓冲区大小</param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808Serializer.Analyze(System.UInt16,System.ReadOnlySpan{System.Byte},JT808.Protocol.Enums.JT808Version,System.Text.Json.JsonWriterOptions,System.Int32)">
            <summary>
            用于分包组合
            </summary>
            <param name="msgid">对应消息id</param>
            <param name="bytes">组合的数据体</param>
            <param name="version">对应版本号</param>
            <param name="options">序列化选项</param>
            <param name="minBufferSize">默认65535</param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808Serializer.AnalyzeJsonBuffer(System.UInt16,System.ReadOnlySpan{System.Byte},JT808.Protocol.Enums.JT808Version,System.Text.Json.JsonWriterOptions,System.Int32)">
            <summary>
            用于分包组合
            </summary>
            <param name="msgid">对应消息id</param>
            <param name="bytes">组合的数据体</param>
            <param name="version">对应版本号</param>
            <param name="options">序列化选项</param>
            <param name="minBufferSize">默认65535</param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808Serializer.AnalyzeJsonBuffer(System.ReadOnlySpan{System.Byte},JT808.Protocol.Enums.JT808Version,System.Text.Json.JsonWriterOptions,System.Int32)">
            <summary>
            分析元数据至json
            </summary>
            <param name="bytes">元数据</param>
            <param name="version">协议版本</param>
            <param name="options">json选项</param>
            <param name="minBufferSize">最低所需缓冲区大小</param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808Serializer.AnalyzeJsonBuffer``1(System.ReadOnlySpan{System.Byte},JT808.Protocol.Enums.JT808Version,System.Text.Json.JsonWriterOptions,System.Int32)">
            <summary>
            分析元数据至json
            </summary>
            <typeparam name="T"></typeparam>
            <param name="bytes">元数据</param>
            <param name="version">协议版本</param>
            <param name="options">json选项</param>
            <param name="minBufferSize">最低所需缓冲区大小</param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.JT808Serializer.Register(System.Reflection.Assembly[])">
            <summary>
            外部注册
            </summary>
            <param name="externalAssemblies"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x00">
            <summary>
            采集记录仪执行标准版本
            返回：记录仪执行标准的年号及修改单号
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x00.CommandId">
            <summary>
            0x00
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x00.Description">
            <summary>
            采集记录仪执行标准版本
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x00.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x01">
            <summary>
            机动车驾驶证号码
            返回：当前驾驶人的机动车驾驶证号码
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x01.CommandId">
            <summary>
            0x01
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x01.Description">
            <summary>
            采集机动车驾驶证号码
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x01.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x02">
            <summary>
            采集记录仪实时时间
            返回：实时时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x02.CommandId">
            <summary>
            0x02
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x02.Description">
            <summary>
            实时时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x02.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x03">
            <summary>
            采集累计行驶里程
            返回：实时时间、安装时的初始里程及安装后的累计行驶里程
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x03.CommandId">
            <summary>
            0x03
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x03.Description">
            <summary>
            实时时间、安装时的初始里程及安装后的累计行驶里程
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x03.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x04">
            <summary>
            采集记录仪脉冲系数
            返回：实时时间及设定的脉冲系数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x04.CommandId">
            <summary>
            0x04
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x04.Description">
            <summary>
            实时时间及设定的脉冲系数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x04.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x05">
            <summary>
            采集车辆信息
            返回：车辆识别代号、机动车号牌号码和机动车号牌分类
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x05.CommandId">
            <summary>
            0x05
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x05.Description">
            <summary>
            车辆识别代号、机动车号牌号码和机动车号牌分类
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x05.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x06">
            <summary>
            采集记录仪状态信号配置信息
            返回：状态信号配置信息
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x06.CommandId">
            <summary>
            0x06
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x06.Description">
            <summary>
            状态信号配置信息
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x06.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x07">
            <summary>
            采集记录仪唯一性编号
            返回：唯一性编号及初次安装日期
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x07.CommandId">
            <summary>
            0x07
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x07.Description">
            <summary>
            唯一性编号及初次安装日期
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x07.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x08">
            <summary>
            采集指定的行驶速度记录
            返回：符合条件的行驶速度记录
            如在指定的时间范围内无数据记录，则本数据块数据为空
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x08.CommandId">
            <summary>
            0x08
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x08.StartTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x08.EndTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x08.Count">
            <summary>
            最大单位数据块个数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x08.Description">
            <summary>
            符合条件的行驶速度记录
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x08.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x08.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x08,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x08.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x08.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x09">
            <summary>
            采集指定的位置信息记录
            返回：符合条件的位置信息记录
            指定的时间范围内无数据记录，则本数据块数据为空
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x09.CommandId">
            <summary>
            0x09
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x09.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x09.Description">
            <summary>
            符合条件的位置信息记录
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x09.StartTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x09.EndTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x09.Count">
            <summary>
            最大单位数据块个数
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x09.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x09,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x09.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x09.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x10">
            <summary>
            采集指定的事故疑点记录
            返回：符合条件的事故疑点记录
            指定的时间范围内无数据记录，则本数据块数据为空
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x10.CommandId">
            <summary>
            0x10
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x10.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x10.Description">
            <summary>
            符合条件的事故疑点记录
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x10.StartTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x10.EndTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x10.Count">
            <summary>
            最大单位数据块个数
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x10.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x10,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x10.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x10.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x11">
            <summary>
            采集指定的超时驾驶记录
            返回：符合条件的超时驾驶记录
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x11.CommandId">
            <summary>
            0x11
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x11.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x11.Description">
            <summary>
            符合条件的超时驾驶记录
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x11.StartTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x11.EndTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x11.Count">
            <summary>
            最大单位数据块个数
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x11.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x11,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x11.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x11.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x12">
            <summary>
            采集指定的驾驶人身份记录
            返回：符合条件的驾驶人登录退出记录
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x12.CommandId">
            <summary>
            0x12
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x12.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x12.Description">
            <summary>
            符合条件的驾驶人登录退出记录
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x12.StartTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x12.EndTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x12.Count">
            <summary>
            最大单位数据块个数
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x12.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x12,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x12.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x12.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x13">
            <summary>
            采集指定的外部供电记录
            返回：符合条件的供电记录
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x13.CommandId">
            <summary>
            0x13
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x13.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x13.Description">
            <summary>
            符合条件的供电记录
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x13.StartTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x13.EndTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x13.Count">
            <summary>
            最大单位数据块个数
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x13.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x13,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x13.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x13.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x14">
            <summary>
            采集指定的参数修改记录
            返回：符合条件的参数修改记录
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x14.CommandId">
            <summary>
            0x14
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x14.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x14.Description">
            <summary>
            符合条件的参数修改记录
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x14.StartTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x14.EndTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x14.Count">
            <summary>
            最大单位数据块个数
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x14.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x14,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x14.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x14.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x15">
            <summary>
            采集指定的速度状态日志
            返回：符合条件的速度状态日志
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x15.CommandId">
            <summary>
            0x15
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x15.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x15.Description">
            <summary>
            符合条件的速度状态日志
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x15.StartTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x15.EndTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x15.Count">
            <summary>
            最大单位数据块个数
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x15.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x15,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x15.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x15.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x82">
            <summary>
            设置车辆信息
            返回：车辆信息
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x82.CommandId">
            <summary>
            0x82
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x82.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x82.Vin">
            <summary>
            车辆识别代号
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x82.VehicleNo">
            <summary>
            机动车号牌号码
            后 3 个字节为备用字
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x82.VehicleType">
            <summary>
            机动车号牌分类
            后 4 个字节为备用字
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x82.Description">
            <summary>
            车辆信息
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x82.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x82.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x82,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x82.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x83">
            <summary>
            设置记录仪初次安装日期
            返回：初次安装日期
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x83.CommandId">
            <summary>
            0x83
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x83.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x83.RealTime">
            <summary>
            实时时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x83.Description">
            <summary>
            初次安装日期
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x83.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x83.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x83,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x83.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x84">
            <summary>
            设置状态量配置信息
            返回：状态量配置信息
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x84.CommandId">
            <summary>
            0x84
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x84.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x84.RealTime">
            <summary>
            实时时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x84.SignalOperate">
            <summary>
            信号字节个数
            单位字节的 D7～D0（由高到低）分别对应 8 个状态信号， 1 表示有操作，0表示无操作
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x84.D0">
            <summary>
            D0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x84.D1">
            <summary>
            D1
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x84.D2">
            <summary>
            D2
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x84.NearLight">
            <summary>
            近光 D3
            10个字节，未使用或不足时，补0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x84.FarLight">
            <summary>
            远光 D4
            10个字节，未使用或不足时，补0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x84.RightTurn">
            <summary>
            右转向 D5
            10个字节，未使用或不足时，补0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x84.LeftTurn">
            <summary>
            左转向 D6
            10个字节，未使用或不足时，补0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x84.Brake">
            <summary>
            制动 D7
            10个字节，未使用或不足时，补0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x84.Description">
            <summary>
            状态量配置信息
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x84.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x84.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x84,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0x84.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xC2">
            <summary>
            设置记录仪时间
            返回：北京时间的日期、时钟
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xC2.CommandId">
            <summary>
            0xC2
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xC2.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xC2.RealTime">
            <summary>
            实时时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xC2.Description">
            <summary>
            北京时间的日期、时钟
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xC2.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xC2.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xC2,JT808.Protocol.IJT808Config)">
            <summary>
            北京时间的日期、时钟
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xC2.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xC3">
            <summary>
            设置记录仪脉冲系数
            返回：记录仪脉冲系数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xC3.CommandId">
            <summary>
            0xC3
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xC3.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xC3.RealTime">
            <summary>
            当前时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xC3.PulseCoefficient">
            <summary>
            脉冲系数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xC3.Description">
            <summary>
            记录仪脉冲系数
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xC3.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xC3.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xC3,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xC3.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xC4">
            <summary>
            设置初始里程
            返回：记录仪初次安装时车辆已行驶的总里程
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xC4.CommandId">
            <summary>
            0xC4
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xC4.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xC4.RealTime">
            <summary>
            实时时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xC4.FirstInstallTime">
            <summary>
            初次安装时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xC4.FirstMileage">
            <summary>
            初始里程
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xC4.TotalMilage">
            <summary>
            累计里程
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xC4.Description">
            <summary>
            车辆识别代号、机动车号牌号码和机动车号牌分类
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xC4.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xC4.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xC4,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xC4.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xE0">
            <summary>
            进入或保持检定状态
            返回：进入或保持检定状态
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xE0.CommandId">
            <summary>
            0xE0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xE0.Description">
            <summary>
            进入或保持检定状态
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xE0.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xE1">
            <summary>
            进入里程误差测量
            返回：通过 DB9 的 7 脚接收标准速度脉冲测量信号（TTL 电平）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xE1.CommandId">
            <summary>
            0xE1
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xE1.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xE1.UniqueNumber">
            <summary>
            记录仪唯一性编号
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xE1.PulseCoefficient">
            <summary>
            脉冲系数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xE1.Speed">
            <summary>
            当前速度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xE1.TotalMileage">
            <summary>
            累计里程  单位为米
            单位为 0.1 千米每小时
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xE1.StatusSignal">
            <summary>
            状态信号
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xE1.Description">
            <summary>
            通过DB9的7脚接收标准速度脉冲测量信号（TTL 电平）
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xE1.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xE1.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xE1,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xE1.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xE2">
            <summary>
            进入脉冲系数误差测量
            返回：通过 DB9 的 7 脚输出车速传感器信号（TTL 电平）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xE2.CommandId">
            <summary>
            0xE2
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xE2.Description">
            <summary>
            通过DB9的7脚输出车速传感器信号（TTL 电平）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xE2.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xE3">
            <summary>
            进入实时时间误差测量
            返回：通过 DB9 的 7 脚输出实时时钟的秒脉冲信号（TTL 电平）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xE3.CommandId">
            <summary>
            0xE3
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xE3.Description">
            <summary>
            通过 DB9 的 7 脚输出实时时钟的秒脉冲信号（TTL 电平）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xE3.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xE4">
            <summary>
            返回正常工作状态
            返回：返回正常工作状态
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xE4.CommandId">
            <summary>
            0xE4
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xE4.Description">
            <summary>
            返回正常工作状态
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Down_0xE4.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x00">
            <summary>
            采集记录仪执行标准版本
            返回：记录仪执行标准的年号及修改单号
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x00.CommandId">
            <summary>
            0x00
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x00.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x00.StandardYear">
            <summary>
            记录仪执行标准年号后 2 位  BCD 码
            无应答则默认为 03
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x00.ModifyNumber">
            <summary>
            修改单号
            无修改单或无应答则默认为 00H
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x00.Description">
            <summary>
            记录仪执行标准的年号及修改单号
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x00.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x00.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x00,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x00.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x01">
            <summary>
            机动车驾驶证号码
            返回：当前驾驶人的机动车驾驶证号码
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x01.CommandId">
            <summary>
            0x01
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x01.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x01.DriverLicenseNo">
            <summary>
            机动车驾驶证号码
            机动车驾驶证号码为 15 位时，后 3 位以 00H 补齐。驾驶人身份未知时以 00H 表示
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x01.Description">
            <summary>
            当前驾驶人的机动车驾驶证号码
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x01.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x01.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x01,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x01.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x02">
            <summary>
            采集记录仪实时时间
            返回：实时时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x02.CommandId">
            <summary>
            0x02
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x02.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x02.RealTime">
            <summary>
            实时时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x02.Description">
            <summary>
            实时时间
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x02.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x02.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x02,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x02.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x03">
            <summary>
            采集累计行驶里程
            返回：实时时间、安装时的初始里程及安装后的累计行驶里程
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x03.CommandId">
            <summary>
            0x03
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x03.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x03.RealTime">
            <summary>
            实时时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x03.FirstInstallTime">
            <summary>
            初次安装时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x03.FirstMileage">
            <summary>
            初始里程
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x03.TotalMilage">
            <summary>
            累计里程
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x03.Description">
            <summary>
            实时时间、安装时的初始里程及安装后的累计行驶里程
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x03.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x03.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x03,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x03.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x04">
            <summary>
            采集记录仪脉冲系数
            返回：实时时间及设定的脉冲系数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x04.CommandId">
            <summary>
            0x04
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x04.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x04.RealTime">
            <summary>
            当前时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x04.PulseCoefficient">
            <summary>
            脉冲系数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x04.Description">
            <summary>
            实时时间及设定的脉冲系数
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x04.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x04.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x04,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x04.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x05">
            <summary>
            采集车辆信息
            返回：车辆识别代号、机动车号牌号码和机动车号牌分类
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x05.CommandId">
            <summary>
            0x05
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x05.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x05.Vin">
            <summary>
            车辆识别代号
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x05.VehicleNo">
            <summary>
            机动车号牌号码
            后 3 个字节为备用字
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x05.VehicleType">
            <summary>
            机动车号牌分类
            后 4 个字节为备用字
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x05.Description">
            <summary>
            车辆识别代号、机动车号牌号码和机动车号牌分类
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x05.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x05.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x05,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x05.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x06">
            <summary>
            采集记录仪状态信号配置信息
            返回：状态信号配置信息
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x06.CommandId">
            <summary>
            0x06
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x06.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x06.RealTime">
            <summary>
            实时时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x06.SignalOperate">
            <summary>
            信号字节个数
            单位字节的 D7～D0（由高到低）分别对应 8 个状态信号， 1 表示有操作，0表示无操作
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x06.D0">
            <summary>
            D0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x06.D1">
            <summary>
            D1
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x06.D2">
            <summary>
            D2
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x06.NearLight">
            <summary>
            近光 D3
            10个字节，未使用或不足时，补0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x06.FarLight">
            <summary>
            远光 D4
            10个字节，未使用或不足时，补0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x06.RightTurn">
            <summary>
            右转向 D5
            10个字节，未使用或不足时，补0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x06.LeftTurn">
            <summary>
            左转向 D6
            10个字节，未使用或不足时，补0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x06.Brake">
            <summary>
            制动 D7
            10个字节，未使用或不足时，补0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x06.Description">
            <summary>
            状态信号配置信息
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x06.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x06.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x06,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x06.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x07">
            <summary>
            采集记录仪唯一性编号
            返回：唯一性编号及初次安装日期
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x07.CommandId">
            <summary>
            0x07
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x07.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x07.ProductionPlantCCCCertificationCode">
            <summary>
            生产厂 CCC 认证代码  7字节
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x07.CertifiedProductModels">
            <summary>
            认证产品型号  16字节
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x07.ProductionDate">
            <summary>
            生产日期  3字节
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x07.ProductProductionFlowNumber">
            <summary>
            产品生产流水号  4字节
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x07.Reversed">
            <summary>
            备用  5字节
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x07.Description">
            <summary>
            唯一性编号及初次安装日期
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x07.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x07.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x07,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x07.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x08">
            <summary>
            采集指定的行驶速度记录
            返回：符合条件的行驶速度记录
            如在指定的时间范围内无数据记录，则本数据块数据为空
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x08.CommandId">
            <summary>
            0x08
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x08.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x08.JT808_CarDVR_Up_0x08_SpeedPerMinutes">
            <summary>
            请求发送指定的时间范围内 N 个单位数据块的数据（N≥1）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x08.Description">
            <summary>
            符合条件的行驶速度记录
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x08.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x08.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x08,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x08.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x08_SpeedPerMinute">
            <summary>
            单位分钟行驶速度记录数据块格式
            1.本数据块总长度为 126 个字节，不足部分以 FFH补齐；
            2.如单位分钟内无数据记录，则本数据块无效，数据长度为0，数据为空
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x08_SpeedPerMinute.StartTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x08_SpeedPerMinute.JT808_CarDVR_Up_0x08_SpeedPerSeconds">
            <summary>
            60s钟，每秒的信息
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x08_SpeedPerSecond">
            <summary>
            开始时间之后每秒钟的平均速度和状态信号
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x08_SpeedPerSecond.AvgSpeedAfterStartTime">
            <summary>
            开始时间之后每秒钟的平均速度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x08_SpeedPerSecond.StatusSignalAfterStartTime">
            <summary>
            开始时间之后每秒钟的状态信号
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x09">
            <summary>
            采集指定的位置信息记录
            返回：符合条件的位置信息记录
            指定的时间范围内无数据记录，则本数据块数据为空
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x09.CommandId">
            <summary>
            0x09
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x09.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x09.JT808_CarDVR_Up_0x09_PositionPerHours">
            <summary>
            请求发送指定的时间范围内 N 个单位数据块的数据（N≥1）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x09.Description">
            <summary>
            符合条件的位置信息记录
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x09.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x09.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x09,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x09.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x09_PositionPerHour">
            <summary>
            指定的结束时间之前最近的每 小时的位置信息记录
            1.本数据块总长度为 666 个字节，不足部分以 FFH补齐；
            2.如单位分钟内无数据记录，则本数据块无效，数据长度为0，数据为空
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x09_PositionPerHour.StartTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x09_PositionPerHour.JT808_CarDVR_Up_0x09_PositionPerMinutes">
            <summary>
            60s钟，每秒的信息
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x09_PositionPerMinute">
            <summary>
            开始时间之后每分钟的平均速度和位置信息
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x09_PositionPerMinute.GpsLng">
            <summary>
            经度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x09_PositionPerMinute.GpsLat">
            <summary>
            纬度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x09_PositionPerMinute.Height">
            <summary>
            高度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x09_PositionPerMinute.AvgSpeedAfterStartTime">
            <summary>
            开始时间之后每分钟的平均速度
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x10">
            <summary>
            采集指定的事故疑点记录
            返回：符合条件的事故疑点记录
            指定的时间范围内无数据记录，则本数据块数据为空
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x10.CommandId">
            <summary>
            0x10
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x10.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x10.JT808_CarDVR_Up_0x10_AccidentSuspectins">
            <summary>
            请求发送指定的时间范围内 N 个单位数据块的数据（N≥1）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x10.Description">
            <summary>
            符合条件的事故疑点记录
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x10.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x10.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x10,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x10.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x10_AccidentSuspectin">
            <summary>
            指定的结束时间之前最近的每条事故疑点记录
            1.本数据块总长度为 234 个字节;
            2.如单位分钟内无数据记录，则本数据块无效，数据长度为0，数据为空
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x10_AccidentSuspectin.EndTime">
            <summary>
            行驶结束时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x10_AccidentSuspectin.DriverLicenseNo">
            <summary>
            机动车驾驶证号码
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x10_AccidentSuspectin.JT808_CarDVR_Up_0x10_DrivingStatuss">
            <summary>
            每 0.2s 间隔采集 1 次，共 100组 20s 的事故疑点记录，按时间倒序排列
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x10_AccidentSuspectin.GpsLng">
            <summary>
            经度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x10_AccidentSuspectin.GpsLat">
            <summary>
            纬度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x10_AccidentSuspectin.Height">
            <summary>
            高度
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x10_DrivingStatus">
            <summary>
            行驶结束时间前的状态
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x10_DrivingStatus.Speed">
            <summary>
            速度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x10_DrivingStatus.StatusSignal">
            <summary>
            状态信号
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x11">
            <summary>
            采集指定的超时驾驶记录
            返回：符合条件的超时驾驶记录
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x11.CommandId">
            <summary>
            0x11
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x11.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x11.JT808_CarDVR_Up_0x11_DriveOverTimes">
            <summary>
            请求发送指定的时间范围内 N 个单位数据块的数据（N≥1）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x11.Description">
            <summary>
            符合条件的超时驾驶记录
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x11.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x11.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x11,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x11.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x11_DriveOverTime">
            <summary>
            单位超时驾驶记录数据块
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x11_DriveOverTime.DriverLicenseNo">
            <summary>
            机动车驾驶证号码 18位
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x11_DriveOverTime.ContinueDrivingStartTime">
            <summary>
            连续驾驶开始时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x11_DriveOverTime.ContinueDrivingEndTime">
            <summary>
            连续驾驶结束时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x11_DriveOverTime.GpsStartLng">
            <summary>
            经度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x11_DriveOverTime.GpsStartLat">
            <summary>
            纬度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x11_DriveOverTime.StartHeight">
            <summary>
            高度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x11_DriveOverTime.GpsEndLng">
            <summary>
            经度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x11_DriveOverTime.GpsEndLat">
            <summary>
            纬度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x11_DriveOverTime.EndHeight">
            <summary>
            高度
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x12">
            <summary>
            采集指定的驾驶人身份记录
            返回：符合条件的驾驶人登录退出记录
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x12.CommandId">
            <summary>
            0x12
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x12.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x12.JT808_CarDVR_Up_0x12_DriveLogins">
            <summary>
            请求发送指定的时间范围内 N 个单位数据块的数据（N≥1）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x12.Description">
            <summary>
            符合条件的驾驶人登录退出记录
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x12.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x12.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x12,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x12.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x12_DriveLogin">
            <summary>
            单位驾驶人身份记录数据块格式
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x12_DriveLogin.LoginTime">
            <summary>
            登入登出时间发生时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x12_DriveLogin.DriverLicenseNo">
            <summary>
            机动车驾驶证号码 18位
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x12_DriveLogin.LoginType">
            <summary>
            事件类型
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x13">
            <summary>
            采集指定的外部供电记录
            返回：符合条件的供电记录
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x13.CommandId">
            <summary>
            0x13
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x13.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x13.JT808_CarDVR_Up_0x13_ExternalPowerSupplys">
            <summary>
            请求发送指定的时间范围内 N 个单位数据块的数据（N≥1）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x13.Description">
            <summary>
            符合条件的供电记录
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x13.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x13.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x13,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x13.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x13_ExternalPowerSupply">
            <summary>
            单位记录仪外部供电记录数据块格式
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x13_ExternalPowerSupply.EventTime">
            <summary>
             事件发生时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x13_ExternalPowerSupply.EventType">
            <summary>
            事件类型
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x14">
            <summary>
            采集指定的参数修改记录
            返回：符合条件的参数修改记录
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x14.CommandId">
            <summary>
            0x14
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x14.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x14.JT808_CarDVR_Up_0x14_ParameterModifys">
            <summary>
            请求发送指定的时间范围内 N 个单位数据块的数据（N≥1）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x14.Description">
            <summary>
            符合条件的参数修改记录
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x14.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x14.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x14,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x14.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x14_ParameterModify">
            <summary>
            单位参数修改记录数据块格式
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x14_ParameterModify.EventTime">
            <summary>
             事件发生时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x14_ParameterModify.EventType">
            <summary>
            事件类型
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x15">
            <summary>
            采集指定的速度状态日志
            返回：符合条件的速度状态日志
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x15.CommandId">
            <summary>
            0x15
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x15.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x15.JT808_CarDVR_Up_0x15_SpeedStatusLogs">
            <summary>
            请求发送指定的时间范围内 N 个单位数据块的数据（N≥1）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x15.Description">
            <summary>
            符合条件的速度状态日志
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x15.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x15.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x15,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x15.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x15_SpeedStatusLog">
            <summary>
             单位速度状态日志数据块格式
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x15_SpeedStatusLog.SpeedStatus">
            <summary>
             记录仪的速度状态
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x15_SpeedStatusLog.SpeedStatusStartTime">
            <summary>
            速度状态判定的开始时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x15_SpeedStatusLog.SpeedStatusEndTime">
            <summary>
            速度状态判定的结束时间
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x15_SpeedStatusLog.JT808_CarDVR_Up_0x15_SpeedPerSeconds">
            <summary>
            60组
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x15_SpeedPerSecond">
            <summary>
            每秒速度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x15_SpeedPerSecond.RecordSpeed">
            <summary>
             记录速度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x15_SpeedPerSecond.ReferenceSpeed">
            <summary>
            参考速度
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x82">
            <summary>
            设置车辆信息
            返回：车辆信息
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x82.CommandId">
            <summary>
            0x82
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x82.Description">
            <summary>
            车辆信息
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x82.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x83">
            <summary>
            设置记录仪初次安装日期
            返回：初次安装日期
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x83.CommandId">
            <summary>
            0x83
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x83.Description">
            <summary>
            初次安装日期
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x83.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x84">
            <summary>
            设置状态量配置信息
            返回：状态量配置信息
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x84.CommandId">
            <summary>
            0x84
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x84.Description">
            <summary>
            状态量配置信息
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0x84.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0xC2">
            <summary>
            设置记录仪时间
            返回：北京时间的日期、时钟
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0xC2.CommandId">
            <summary>
            0xC2
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0xC2.Description">
            <summary>
            北京时间的日期、时钟
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0xC2.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0xC3">
            <summary>
            设置记录仪脉冲系数
            返回：记录仪脉冲系数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0xC3.CommandId">
            <summary>
            0xC3
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0xC3.Description">
            <summary>
            记录仪脉冲系数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0xC3.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0xC4">
            <summary>
            设置初始里程
            返回：记录仪初次安装时车辆已行驶的总里程
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0xC4.CommandId">
            <summary>
            0xC4
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0xC4.Description">
            <summary>
            车辆识别代号、机动车号牌号码和机动车号牌分类
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0xC4.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0xE0">
            <summary>
            进入或保持检定状态
            返回：进入或保持检定状态
            在检定状态下，检定装置以不大于2秒的时间间隔发送包含本命令字的命令帧，记录仪在6秒内未收到该命令帧，则自动返回正常工作状态。
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0xE0.CommandId">
            <summary>
            0xE0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0xE0.Description">
            <summary>
            进入或保持检定状态
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0xE0.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0xE1">
            <summary>
            进入里程误差测量
            返回：通过 DB9 的 7 脚接收标准速度脉冲测量信号（TTL 电平）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0xE1.CommandId">
            <summary>
            0xE1
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0xE1.Description">
            <summary>
            通过DB9的7脚接收标准速度脉冲测量信号（TTL 电平）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0xE1.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0xE2">
            <summary>
            进入脉冲系数误差测量
            返回：通过 DB9 的 7 脚输出车速传感器信号（TTL 电平）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0xE2.CommandId">
            <summary>
            0xE2
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0xE2.Description">
            <summary>
            通过DB9的7脚输出车速传感器信号（TTL 电平）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0xE2.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0xE3">
            <summary>
            进入实时时间误差测量
            返回：通过 DB9 的 7 脚输出实时时钟的秒脉冲信号（TTL 电平）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0xE3.CommandId">
            <summary>
            0xE3
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0xE3.Description">
            <summary>
            通过DB9的7脚输出实时时钟的秒脉冲信号（TTL 电平）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0xE3.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0xE4">
            <summary>
            返回正常工作状态
            返回：返回正常工作状态
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0xE4.CommandId">
            <summary>
            0xE4
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0xE4.Description">
            <summary>
            返回正常工作状态
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.CarDVR.JT808_CarDVR_Up_0xE4.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0001">
            <summary>
            终端通用应答
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0001.MsgId">
            <summary>
            0x0001
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0001.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0001.Description">
            <summary>
            终端通用应答
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0001.ReplyMsgNum">
            <summary>
            应答流水号
            对应的平台消息的流水号
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0001.ReplyMsgId">
            <summary>
            应答 ID
            对应的平台消息的 ID
            <see cref="T:JT808.Protocol.Enums.JT808MsgId"/>
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0001.TerminalResult">
            <summary>
            结果
            0：成功/确认；1：失败；2：消息有误；3：不支持
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0001.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0001.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0001,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0001.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0002">
            <summary>
            终端心跳
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0002.SkipSerialization">
            <summary>
            跳过数据体序列化
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0002.MsgId">
            <summary>
            0x0002
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0002.Description">
            <summary>
            终端心跳
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0003">
            <summary>
            终端注销请求
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0003.SkipSerialization">
            <summary>
            跳过数据体序列化
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0003.MsgId">
            <summary>
            0x0003
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0003.Description">
            <summary>
            终端注销
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0004">
            <summary>
            查询服务器时间请求
            2019版本
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0004.SkipSerialization">
            <summary>
            跳过数据体序列化
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0004.MsgId">
            <summary>
            0x0004
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0004.Description">
            <summary>
            查询服务器时间请求
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0005">
            <summary>
            终端补传分包请求
            2019版本
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0005.MsgId">
            <summary>
            0x0005
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0005.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0005.Description">
            <summary>
            终端补传分包请求
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0005.OriginalMsgNum">
            <summary>
            原始消息流水号
            对应要求补传的原始消息第一包的消息流水号
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0005.AgainPackageCount">
            <summary>
            重传包总数
            n
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0005.AgainPackageData">
            <summary>
            重传包 ID 列表
            BYTE[2*n]
            重传包序号顺序排列，如“包 ID1 包 ID2......包 IDn”。
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0005.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0005.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0005,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0005.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0100">
            <summary>
            终端注册
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0100.MsgId">
            <summary>
            0x0100
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0100.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0100.Description">
            <summary>
            终端注册
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0100.AreaID">
            <summary>
            省域 ID
            标示终端安装车辆所在的省域，0 保留，由平台取默
            认值。省域 ID 采用 GB/T 2260 中规定的行政区划代
            码六位中前两位
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0100.CityOrCountyId">
            <summary>
            市县域 ID
            标示终端安装车辆所在的市域和县域，0 保留，由平
            台取默认值。市县域 ID 采用 GB/T 2260 中规定的行
            政区划代码六位中后四位。
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0100.MakerId">
            <summary>
            制造商 ID
            2013版本 5 个字节，终端制造商编码
            2019版本 11 个字节，终端制造商编码
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0100.TerminalModel">
            <summary>
            终端型号
            2011版本   8个字节  ，此终端型号由制造商自行定义，位数不足时，后补“0X00”
            2013版本   20 个字节，此终端型号由制造商自行定义，位数不足时，后补“0X00”。
            2019版本   30 个字节，此终端型号由制造商自行定义，位数不足时，后补“0X00”。
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0100.TerminalId">
            <summary>
            终端 ID
            2013版本  7个字节，由大写字母和数字组成，此终端 ID 由制造商自行定义，位数不足时，后补“0X00”。
            2019版本  30个字节，由大写字母和数字组成，此终端 ID 由制造商自行定义，位数不足时，后补“0X00”。
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0100.PlateColor">
            <summary>
            车牌颜色
            车牌颜色，按照 JT/T415-2006 的 5.4.12。
            未上牌时，取值为 0。
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0100.PlateNo">
            <summary>
            车辆标识
            车牌颜色为 0 时，表示车辆 VIN；
            否则，表示公安交通管理部门颁发的机动车号牌。
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0100.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0100.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0100,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0100.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0102">
            <summary>
            终端鉴权
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0102.MsgId">
            <summary>
            0x0102
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0102.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0102.Description">
            <summary>
            终端鉴权
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0102.Code">
            <summary>
            鉴权码
            鉴权码内容 2019版本
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0102.CodeLength">
            <summary>
            鉴权码长度 2019版本
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0102.IMEI">
            <summary>
            终端IMEI  长度15 2019版本
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0102.SoftwareVersion">
            <summary>
            软件版本号 长度20 后补 "0x00" 2019版本
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0102.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0102.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0102,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0102.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0104">
            <summary>
            查询终端参数应答
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0104.MsgId">
            <summary>
            0x0104
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0104.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0104.Description">
            <summary>
            查询终端参数应答
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0104.MsgNum">
            <summary>
            应答流水号
            查询指定终端参数的流水号
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0104.AnswerParamsCount">
            <summary>
            应答参数个数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0104.ParamList">
            <summary>
            参数列表
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0104.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0104.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0104,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0104.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0107">
            <summary>
            查询终端属性应答
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0107.MsgId">
            <summary>
            0x0107
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0107.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0107.Description">
            <summary>
            查询终端属性应答
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0107.TerminalType">
            <summary>
            终端类型
            bit0，0：不适用客运车辆，1：适用客运车辆；
            bit1，0：不适用危险品车辆，1：适用危险品车辆；
            bit2，0：不适用普通货运车辆，1：适用普通货运车辆；
            bit3，0：不适用出租车辆，1：适用出租车辆；
            bit6，0：不支持硬盘录像，1：支持硬盘录像；
            bit7，0：一体机，1：分体机
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0107.MakerId">
            <summary>
            制造商 ID
            2013版本 5 个字节，终端制造商编码
            2019版本 11 个字节，终端制造商编码
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0107.TerminalModel">
            <summary>
            终端型号
            BYTE[20] 20 个字节，此终端型号由制造商自行定义，位数不足时，后补“0X00”。
            2019版本
            BYTE[30] 30 个字节，此终端型号由制造商自行定义，位数不足时，后补“0X00”。
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0107.TerminalId">
            <summary>
            终端ID 
            BYTE[7]  7 个字节，由大写字母和数字组成，此终端 ID 由制造商自行定义，位数不足时，后补“0X00”
            2019版本
            BYTE[30]  30 个字节，由大写字母和数字组成，此终端 ID 由制造商自行定义，位数不足时，后补“0X00”
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0107.Terminal_SIM_ICCID">
            <summary>
            终端 SIM 卡 ICCID
            BCD[10]
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0107.Terminal_Hardware_Version_Length">
            <summary>
            终端硬件版本号长度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0107.Terminal_Hardware_Version_Num">
            <summary>
            终端硬件版本号
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0107.Terminal_Firmware_Version_Length">
            <summary>
            终端固件版本号长度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0107.Terminal_Firmware_Version_Num">
            <summary>
            终端固件版本号
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0107.GNSSModule">
            <summary>
            GNSS 模块属性
            bit0，0：不支持 GPS 定位， 1：支持 GPS 定位；
            bit1，0：不支持北斗定位， 1：支持北斗定位；
            bit2，0：不支持 GLONASS 定位， 1：支持 GLONASS 定位；
            bit3，0：不支持 Galileo 定位， 1：支持 Galileo 定位
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0107.CommunicationModule">
            <summary>
            通信模块属性
            bit0，0：不支持GPRS通信， 1：支持GPRS通信；
            bit1，0：不支持CDMA通信， 1：支持CDMA通信；
            bit2，0：不支持TD-SCDMA通信， 1：支持TD-SCDMA通信；
            bit3，0：不支持WCDMA通信， 1：支持WCDMA通信；
            bit4，0：不支持CDMA2000通信， 1：支持CDMA2000通信。
            bit5，0：不支持TD-LTE通信， 1：支持TD-LTE通信；
            bit7，0：不支持其他通信方式， 1：支持其他通信方式
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0107.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0107.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0107,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0107.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0108">
            <summary>
            终端升级结果通知
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0108.MsgId">
            <summary>
            0x0108
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0108.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0108.Description">
            <summary>
            终端升级结果通知
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0108.UpgradeType">
            <summary>
            升级类型
            0：终端，12：道路运输证 IC 卡读卡器，52：北斗卫星定位模块
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0108.UpgradeResult">
            <summary>
            升级结果
            0：成功，1：失败，2：取消
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0108.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0108.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0108,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0108.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0200">
            <summary>
            位置信息汇报
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200.MsgId">
            <summary>
            0x0200
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200.Description">
            <summary>
            位置信息汇报
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200.AlarmFlag">
            <summary>
            报警标志 
            <see cref="T:JT808.Protocol.Enums.JT808Alarm"/>
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200.StatusFlag">
            <summary>
            状态位标志
            <see cref="T:JT808.Protocol.Enums.JT808Status"/>
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200.Lat">
            <summary>
            纬度
            以度为单位的纬度值乘以 10 的 6 次方，精确到百万分之一度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200.Lng">
            <summary>
            经度
            以度为单位的经度值乘以 10 的 6 次方，精确到百万分之一度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200.Altitude">
            <summary>
            高程
            海拔高度，单位为米（m）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200.Speed">
            <summary>
            速度 1/10km/h
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200.Direction">
            <summary>
            方向 0-359，正北为 0，顺时针
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200.GPSTime">
            <summary>
            YY-MM-DD-hh-mm-ss（GMT+8 时间，本标准中之后涉及的时间均采用此时区）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200.BasicLocationAttachData">
            <summary>
            基础位置附加信息
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200.CustomLocationAttachData">
            <summary>
            自定义位置附加信息
            场景：
            一个设备厂商对应多个设备类型，不同设备类型可能存在相同的自定义位置附加信息Id，导致自定义附加信息Id冲突，无法解析。
            解决方式：
            1.凡是解析自定义附加信息Id协议的，先进行分割存储，然后在根据外部的设备类型进行统一处理。
            2.可以根据设备类型做个工厂，解耦对公共序列化器的依赖。
            缺点：
            依赖平台录入的设备类型
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200.CustomLocationAttachData2">
            <summary>
            自定义位置附加信息2
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200.CustomLocationAttachData3">
            <summary>
            自定义位置附加信息3
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200.CustomLocationAttachData4">
            <summary>
            自定义位置附加信息4
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200.UnknownLocationAttachData">
            <summary>
            未知自定义附加数据【一切都是为了尽可能兼容】
            形如:自定义_附加Id字节数_附加数据长度_附加Id
            注意：这边不是最好的解决方式，最好的方式就是通过已知的自定义协议附加，根据提供的文档进行组织后在注册。
            这边采用优先1-1的，然后是绝大多数设备厂家有2-1，少部分是2-2，最后是1_4。
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200.ExceptionLocationAttachOriginalData">
            <summary>
            设备未知自定义附加数据（未注册）、数据解析异常
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0200,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0200_0x01">
            <summary>
            里程
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x01.AttachInfoId">
            <summary>
            JT808_0x0200_0x01
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x01.AttachInfoLength">
            <summary>
             4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x01.Mileage">
            <summary>
            里程
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x01.ConvertMileage">
            <summary>
            里程 1/10km，对应车上里程表读数
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x01.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x01.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x01.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0200_0x01,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0200_0x02">
            <summary>
            油量
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x02.Oil">
            <summary>
            油量
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x02.ConvertOil">
            <summary>
            油量 1/10L，对应车上油量表读数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x02.AttachInfoId">
            <summary>
            JT808_0x0200_0x02
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x02.AttachInfoLength">
            <summary>
            2 byte
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x02.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x02.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x02.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0200_0x02,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0200_0x03">
            <summary>
            行驶记录功能获取的速度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x03.Speed">
            <summary>
            行驶记录功能获取的速度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x03.ConvertSpeed">
            <summary>
            行驶记录功能获取的速度 1/10km/h
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x03.AttachInfoId">
            <summary>
            JT808_0x0200_0x03
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x03.AttachInfoLength">
            <summary>
            2 byte
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x03.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x03.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x03.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0200_0x03,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0200_0x04">
            <summary>
            人工确认报警事件
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x04.EventId">
            <summary>
            需要人工确认报警事件的 ID，从 1 开始计数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x04.AttachInfoId">
            <summary>
            JT808_0x0200_0x04
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x04.AttachInfoLength">
            <summary>
            2 byte
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x04.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x04.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x04.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0200_0x04,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0200_0x05">
            <summary>
            胎压
             2019版本
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x05.TirePressure">
            <summary>
            胎压
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x05.AttachInfoId">
            <summary>
            JT808_0x0200_0x05
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x05.AttachInfoLength">
            <summary>
            30 byte
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x05.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x05.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x05.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0200_0x05,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0200_0x06">
            <summary>
            胎压
             2019版本
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x06.CarTemperature">
            <summary>
            车厢温度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x06.AttachInfoId">
            <summary>
            JT808_0x0200_0x06
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x06.AttachInfoLength">
            <summary>
            2 byte
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x06.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x06.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x06.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0200_0x06,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0200_0x07">
            <summary>
            卫星状态数据
             2019版本
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x07.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x07.AttachInfoId">
            <summary>
            JT808_0x0200_0x07
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x07.AttachInfoLength">
            <summary>
            4 的倍数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x07.BeiDou">
            <summary>
            BeiDou
            最小值是 0，最大值 12，CN 值大于等于 20 的卫星数量
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x07.GPS">
            <summary>
            GPS
            最小值是 0，最大值 12，CN 值大于等于 20 的卫星数量
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x07.GLONASS">
            <summary>
            GLONASS
            最小值是 0，最大值 12，CN 值大于等于 20 的卫星数量
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x07.Galileo">
            <summary>
            Galileo
            最小值是 0，最大值 12，CN 值大于等于 20 的卫星数量
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x07.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x07.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x07.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0200_0x07,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0200_0x07.SatelliteStatusInformation">
            <summary>
            卫星状态信息
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x07.SatelliteStatusInformation.No">
            <summary>
            卫星编号
            1-200
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x07.SatelliteStatusInformation.Elevation">
            <summary>
            仰角
            0-90
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x07.SatelliteStatusInformation.AzimuthAngle">
            <summary>
            方位角
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x07.SatelliteStatusInformation.Analyze(System.String,System.Text.Json.Utf8JsonWriter)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="writer"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0200_0x11">
            <summary>
            超速报警附加信息
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x11.JT808PositionType">
            <summary>
            超速报警附加信息
            0：无特定位置；
            1：圆形区域；
            2：矩形区域；
            3：多边形区域；
            4：路段
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x11.AreaId">
            <summary>
            区域或路段 ID
            若位置类型为 0，无该字段
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x11.AttachInfoId">
            <summary>
            JT808_0x0200_0x11
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x11.AttachInfoLength">
            <summary>
            1或5 byte
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x11.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x11.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x11.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0200_0x11,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0200_0x12">
            <summary>
            进出区域/路线报警附加信息
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x12.JT808PositionType">
            <summary>
            位置类型
            1：圆形区域；
            2：矩形区域；
            3：多边形区域；
            4：路段
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x12.AreaId">
            <summary>
            区域或路段 ID
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x12.Direction">
            <summary>
            方向 
            0：进
            1：出
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x12.AttachInfoId">
            <summary>
            JT808_0x0200_0x12
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x12.AttachInfoLength">
            <summary>
            6 byte
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x12.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x12.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x12.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0200_0x12,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0200_0x13">
            <summary>
            路段行驶时间不足/过长报警附加信息
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x13.AttachInfoId">
            <summary>
            JT808_0x0200_0x13
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x13.AttachInfoLength">
            <summary>
            7 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x13.DrivenRouteId">
            <summary>
            路段 ID
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x13.Time">
            <summary>
            路段行驶时间
            单位为秒（s)
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x13.DrivenRoute">
            <summary>
             结果 0：不足；1：过长
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x13.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x13.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x13.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0200_0x13,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0200_0x25">
            <summary>
            扩展车辆信号状态位
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x25.CarSignalStatus">
            <summary>
            扩展车辆信号状态位
            <seealso cref="T:JT808.Protocol.Enums.JT808CarSignalStatus"/>
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x25.AttachInfoId">
            <summary>
            JT808_0x0200_0x25
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x25.AttachInfoLength">
            <summary>
            4 byte
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x25.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x25.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x25.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0200_0x25,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0200_0x2A">
            <summary>
            IO状态位
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x2A.IOStatus">
            <summary>
            IO状态位
            Flags
            <see cref="T:JT808.Protocol.Enums.JT808IOStatus"/>
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x2A.AttachInfoId">
            <summary>
            JT808_0x0200_0x2A
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x2A.AttachInfoLength">
            <summary>
            AttachInfoLength
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x2A.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x2A.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x2A.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0200_0x2A,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0200_0x2B">
            <summary>
            模拟量
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x2B.Analog">
            <summary>
            模拟量 bit0-15，AD0；bit16-31，AD1
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x2B.AttachInfoId">
            <summary>
            JT808_0x0200_0x2B
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x2B.AttachInfoLength">
            <summary>
            4 byte
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x2B.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x2B.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x2B.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0200_0x2B,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0200_0x30">
            <summary>
            无线通信网络信号强度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x30.WiFiSignalStrength">
            <summary>
            无线通信网络信号强度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x30.AttachInfoId">
            <summary>
            JT808_0x0200_0x30
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x30.AttachInfoLength">
            <summary>
            AttachInfoLength
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x30.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x30.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x30.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0200_0x30,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0200_0x31">
            <summary>
            GNSS 定位卫星数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x31.GNSSCount">
            <summary>
            GNSS 定位卫星数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x31.AttachInfoId">
            <summary>
            JT808_0x0200_0x31
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_0x31.AttachInfoLength">
            <summary>
            1 byte
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x31.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x31.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0200_0x31.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0200_0x31,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0200_BodyBase">
            <summary>
            位置附加信息
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_BodyBase.AttachInfoId">
            <summary>
            附加信息Id
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_BodyBase.AttachInfoLength">
            <summary>
            附加信息长度
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0200_CustomBodyBase">
            <summary>
            自定义位置附加信息
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_CustomBodyBase.AttachInfoId">
            <summary>
            自定义附加信息Id
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_CustomBodyBase.AttachInfoLength">
            <summary>
            自定义附加信息长度
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0200_CustomBodyBase2">
            <summary>
            自定义位置附加信息
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_CustomBodyBase2.AttachInfoId">
            <summary>
            自定义附加信息Id扩展
            两个字节
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_CustomBodyBase2.AttachInfoLength">
            <summary>
            自定义附加信息长度
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0200_CustomBodyBase3">
            <summary>
            自定义位置附加信息
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_CustomBodyBase3.AttachInfoId">
            <summary>
            自定义附加信息Id扩展
            两个字节
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_CustomBodyBase3.AttachInfoLength">
            <summary>
            自定义附加信息长度
            两个字节
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0200_CustomBodyBase4">
            <summary>
            自定义位置附加信息
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_CustomBodyBase4.AttachInfoId">
            <summary>
            自定义附加信息Id扩展
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0200_CustomBodyBase4.AttachInfoLength">
            <summary>
            自定义附加信息长度
            四个字节
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0201">
            <summary>
            位置信息查询应答
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0201.MsgId">
            <summary>
            0x0201
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0201.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0201.Description">
            <summary>
            位置信息查询应答
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0201.ReplyMsgNum">
            <summary>
            应答流水号
            对应的终端注册消息的流水号
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0201.Position">
            <summary>
            位置信息汇报见 8.12
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0201.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0201.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0201.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0201,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0301">
            <summary>
            事件报告
            0x0301
            2019版本已作删除
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0301.MsgId">
            <summary>
            0x0301
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0301.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0301.Description">
            <summary>
            事件报告
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0301.EventId">
            <summary>
            事件 ID 
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0301.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0301.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0301.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0301,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0302">
            <summary>
            提问应答
            0x0302
            2019版本已作删除
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0302.MsgId">
            <summary>
            0x0302
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0302.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0302.Description">
            <summary>
            提问应答
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0302.ReplySNo">
            <summary>
            应答流水号
            对应的提问下发消息的流水号
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0302.AnswerId">
            <summary>
            答案 ID 
            提问下发中附带的答案 ID
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0302.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0302.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0302.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0302,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0303">
            <summary>
            信息点播/取消
            0x0303
            2019版本已作删除
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0303.MsgId">
            <summary>
            0x0303
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0303.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0303.Description">
            <summary>
            信息点播_取消
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0303.InformationType">
            <summary>
            信息类型
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0303.Flag">
            <summary>
            点播/取消标志
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0303.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0303.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0303.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0303,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0500">
            <summary>
            车辆控制应答
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0500.MsgId">
            <summary>
            0x0500
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0500.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0500.Description">
            <summary>
            车辆控制应答
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0500.MsgNum">
            <summary>
            应答流水号
            对应的终端注册消息的流水号
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0500.JT808_0x0200">
            <summary>
            位置信息汇报消息体
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0500.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0500.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0500.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0500,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0608">
            <summary>
            查询区域或线路数据应答
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0608.MsgId">
            <summary>
            0x0608
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0608.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0608.Description">
            <summary>
            查询区域或线路数据应答
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0608.QueryType">
            <summary>
            查询类型
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0608.Count">
            <summary>
            查询的区域或线路的ID数量
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0608.Ids">
            <summary>
            查询的区域或线路的ID
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0608.JT808_0x8600s">
            <summary>
            设置圆形区域 
            查询类型为1
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0608.JT808_0x8602s">
            <summary>
            设置矩形区域
            查询类型为2
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0608.JT808_0x8604s">
            <summary>
            设置多边形区域
            查询类型为3
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0608.JT808_0x8606s">
            <summary>
            设置路线
            查询类型为4
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0608.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0608.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0608.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0608,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0700">
            <summary>
            行驶记录仪数据上传
            0x0700
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0700.MsgId">
            <summary>
            0x0700
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0700.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0700.Description">
            <summary>
            行驶记录仪数据上传
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0700.ReplyMsgNum">
            <summary>
            应答流水号
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0700.CommandId">
            <summary>
            命令字
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0700.JT808CarDVRUpPackage">
            <summary>
            行车记录仪上行数据包
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0700.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0700.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0700.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0700,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0701">
            <summary>
            电子运单上报
            0x0701
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0701.MsgId">
            <summary>
            0x0701
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0701.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0701.Description">
            <summary>
            电子运单上报
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0701.ElectronicWaybillLength">
            <summary>
            电子运单长度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0701.ElectronicContent">
            <summary>
            电子运单内容
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0701.ElectronicContentObj">
            <summary>
            电子运单内容
            注意:需要具体的实现
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0701.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0701.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0701.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0701,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0701_CustomBodyBase">
            <summary>
            电子运单内容基类
            注意:需要具体的实现
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0702">
            <summary>
            驾驶员身份信息采集上报
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0702.MsgId">
            <summary>
            0x0702
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0702.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0702.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0702.IC_Card_Status">
            <summary>
            状态
            0x01：从业资格证 IC 卡插入（驾驶员上班）；
            0x02：从业资格证 IC 卡拔出（驾驶员下班）。
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0702.IC_Card_PlugDateTime">
            <summary>
            插卡/拔卡时间，YY-MM-DD-hh-mm-ss；
            以下字段在状态为 0x01 时才有效并做填充。
            BCD[6]
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0702.IC_Card_ReadResult">
            <summary>
            IC 卡读取结果
            0x00：IC 卡读卡成功；
            0x01：读卡失败，原因为卡片密钥认证未通过；
            0x02：读卡失败，原因为卡片已被锁定；
            0x03：读卡失败，原因为卡片被拔出；
            0x04：读卡失败，原因为数据校验错误。
            以下字段在 IC 卡读取结果等于 0x00 时才有效。
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0702.DriverUserNameLength">
            <summary>
            驾驶员姓名长度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0702.DriverUserName">
            <summary>
            驾驶员姓名
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0702.QualificationCode">
            <summary>
            从业资格证编码 
            2011 长度40 位 ，不足补 '\0'；
            2013 长度 20 位，不足补 '\0'。
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0702.LicenseIssuingLength">
            <summary>
            发证机构名称长度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0702.LicenseIssuing">
            <summary>
            发证机构名称
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0702.CertificateExpiresDate">
            <summary>
            证件有效期 BCD[4]
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0702.DriverIdentityCard">
            <summary>
            驾驶员身份证号 长度20 不足补 '\0'
            2011版本
            2019版本
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0702.FaceMatchValue">
            <summary>
            人脸匹配度
            身份证或从业资格证照片与人脸匹配度比例：0~100
            2019版本
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0702.UID">
            <summary>
            身份证 UID
            长度 20 位，不足补0x00
            2019版本
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0702.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0702.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0702.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0702,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0704">
            <summary>
            定位数据批量上传
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0704.MsgId">
            <summary>
            0x0704
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0704.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0704.Description">
            <summary>
            定位数据批量上传
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0704.Count">
            <summary>
            数据项个数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0704.LocationType">
            <summary>
            位置数据类型
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0704.Positions">
            <summary>
            位置汇报数据集合
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0704.ErrorRemainPositions">
            <summary>
            异常错误剩余数据存储
            key:count index
            value:0200 data
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0704.BatchLocationType">
            <summary>
            位置数据类型
            </summary>
        </member>
        <member name="F:JT808.Protocol.MessageBody.JT808_0x0704.BatchLocationType.正常位置批量汇报">
            <summary>
            正常位置批量汇报
            </summary>
        </member>
        <member name="F:JT808.Protocol.MessageBody.JT808_0x0704.BatchLocationType.盲区补报">
            <summary>
            盲区补报
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0704.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0704.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0704,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0704.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0705">
            <summary>
            CAN 总线数据上传
            0x0705
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0705.MsgId">
            <summary>
            0x0705
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0705.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0705.Description">
            <summary>
            CAN总线数据上传
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0705.CanItemCount">
            <summary>
            数据项个数
            包含的 CAN 总线数据项个数，>0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0705.FirstCanReceiveTime">
            <summary>
            CAN 总线数据接收时间
            第 1 条 CAN 总线数据的接收时间，hh-mm-ss-msms
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0705.CanItems">
            <summary>
            CAN 总线数据项
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0705.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0705.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0705.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0705,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0800">
            <summary>
            多媒体事件信息上传
            0x0800
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0800.MsgId">
            <summary>
            0x0800
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0800.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0800.Description">
            <summary>
            多媒体事件信息上传
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0800.MultimediaId">
            <summary>
            多媒体数据 ID
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0800.MultimediaType">
            <summary>
            多媒体类型
            0：图像；1：音频；2：视频；
            <see cref="T:JT808.Protocol.Enums.JT808MultimediaType"/>
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0800.MultimediaCodingFormat">
            <summary>
            多媒体格式编码 
            0：JPEG；1：TIF；2：MP3；3：WAV；4：WMV；其他保留
            <see cref="T:JT808.Protocol.Enums.JT808MultimediaCodingFormat"/>
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0800.EventItemCoding">
            <summary>
            事件项编码
            0：平台下发指令；
            1：定时动作；
            2：抢劫报警触发；
            3：碰撞侧翻报警触发；
            4：门开拍照；
            5：门关拍照；
            6：车门由开变关，时速从＜20 公里到超过 20 公里；
            7：定距拍照；
            其他保留
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0800.ChannelId">
            <summary>
            通道 ID
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0800.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0800.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0800.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0800,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0801">
            <summary>
            多媒体数据上传
            0x0801
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0801.MsgId">
            <summary>
            0x0801
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0801.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0801.Description">
            <summary>
            多媒体数据上传
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0801.MultimediaId">
            <summary>
            多媒体 ID
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0801.MultimediaType">
            <summary>
            多媒体类型
            <see cref="T:JT808.Protocol.Enums.JT808MultimediaType"/>
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0801.MultimediaCodingFormat">
            <summary>
            多媒体格式编码 
            0：JPEG；1：TIF；2：MP3；3：WAV；4：WMV；其他保留
            <see cref="T:JT808.Protocol.Enums.JT808MultimediaCodingFormat"/>
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0801.EventItemCoding">
            <summary>
            事件项编码
            <see cref="T:JT808.Protocol.Enums.JT808EventItemCoding"/>
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0801.ChannelId">
            <summary>
            通道 ID
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0801.PositionError">
            <summary>
            定位错误
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0801.Position">
            <summary>
            位置信息汇报(0x0200)消息体
            表示拍摄或录制的起始时刻的位置基本信息数据
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0801.MultimediaDataPackage">
            <summary>
            多媒体数据包
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0801.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0801.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0801.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0801,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0802">
            <summary>
            存储多媒体数据检索应答
            0x0802
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0802.MsgId">
            <summary>
            0x0802
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0802.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0802.Description">
            <summary>
            存储多媒体数据检索应答
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0802.MsgNum">
            <summary>
            应答流水号
            对应的多媒体数据检索消息的流水号
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0802.MultimediaItemCount">
            <summary>
            多媒体数据总项数
            满足检索条件的多媒体数据总项数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0802.MultimediaSearchItems">
            <summary>
            检索项集合
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0802.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0802.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0802.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0802,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0805">
            <summary>
            摄像头立即拍摄命令应答
            0x0805
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0805.MsgId">
            <summary>
            0x0805
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0805.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0805.Description">
            <summary>
            摄像头立即拍摄命令应答
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0805.ReplyMsgNum">
            <summary>
            应答流水号
            对应平台摄像头立即拍摄命令的消息流水号
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0805.Result">
            <summary>
            结果
            0：成功；1：失败；2：通道不支持。以下字段在结果=0 时才有效。
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0805.MultimediaIdCount">
            <summary>
            多媒体ID个数
            拍摄成功的多媒体个数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0805.MultimediaIds">
            <summary>
            多媒体ID列表
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0805.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0805.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0805.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0805,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0900">
            <summary>
            数据上行透传
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0900.MsgId">
            <summary>
            0x0900
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0900.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0900.Description">
            <summary>
            数据上行透传
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0900.PassthroughType">
            <summary>
            透传消息类型
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0900.PassthroughData">
            <summary>
            透传数据
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0900.JT808_0x0900_BodyBase">
            <summary>
            透传消息内容
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0900.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0900.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0900.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0900,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0900_BodyBase">
            <summary>
            数据上行透传
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0900_BodyBase.PassthroughType">
            <summary>
            透传消息类型
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0901">
            <summary>
            数据压缩上报
            0x0901
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0901.MsgId">
            <summary>
            0x0901
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0901.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0901.Description">
            <summary>
            数据压缩上报
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0901.UnCompressMessageLength">
            <summary>
            未压缩消息长度 
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0901.UnCompressMessage">
            <summary>
            未压缩消息体
            压缩消息体为需要压缩的消息经过 GZIP 压缩算法后的消息
            可实现 refJT808.Protocol.IJT808ICompress 自定义压缩算法
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0901.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0901.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0901.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0901,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x0A00">
            <summary>
            终端 RSA 公钥
            0x0A00
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0A00.MsgId">
            <summary>
            0x0A00
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0A00.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0A00.Description">
            <summary>
            终端RSA公钥
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0A00.E">
            <summary>
            e
            终端 RSA 公钥{e,n}中的 e
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x0A00.N">
            <summary>
            n
            RSA 公钥{e,n}中的 n
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0A00.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0A00.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x0A00.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x0A00,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8001">
            <summary>
            平台通用应答
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8001.MsgId">
            <summary>
            0x8001
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8001.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8001.Description">
            <summary>
            平台通用应答
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8001.MsgNum">
            <summary>
            应答消息流水号
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8001.AckMsgId">
            <summary>
            应答消息Id
            <see cref="T:JT808.Protocol.Enums.JT808MsgId"/>
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8001.JT808PlatformResult">
            <summary>
            返回结果
            <see cref="T:JT808.Protocol.Enums.JT808PlatformResult"/>
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8001.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8001.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8001.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8001,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8003">
            <summary>
            补传分包请求
            0x8003
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8003.MsgId">
            <summary>
            0x8003
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8003.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8003.Description">
            <summary>
            补传分包请求
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8003.OriginalMsgNum">
            <summary>
            原始消息流水号
            对应要求补传的原始消息第一包的消息流水号
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8003.AgainPackageCount">
            <summary>
            重传包总数
            2013 byte
            2019 ushort
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8003.AgainPackageData">
            <summary>
            重传包 ID 列表
            BYTE[2*n]
            重传包序号顺序排列，如“包 ID1 包 ID2......包 IDn”。
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8003.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8003.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8003.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8003,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8004">
            <summary>
            查询服务器时间应答
            2019版本
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8004.MsgId">
            <summary>
            0x8004
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8004.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8004.Description">
            <summary>
            查询服务器时间应答
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8004.Time">
            <summary>
            服务器时间
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8004.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8004.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8004.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8004,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8100">
            <summary>
            终端注册应答
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8100.MsgId">
            <summary>
            0x8100
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8100.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8100.Description">
            <summary>
            终端注册应答
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8100.AckMsgNum">
            <summary>
            应答流水号
            对应的终端注册消息的流水号
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8100.JT808TerminalRegisterResult">
            <summary>
            结果
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8100.Code">
            <summary>
            鉴权码
            只有在成功后才有该字段
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8100.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8100.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8100.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8100,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103">
            <summary>
            设置终端参数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103.MsgId">
            <summary>
            0x8103
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103.Description">
            <summary>
            设置终端参数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103.ParamCount">
            <summary>
            参数总数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103.ParamList">
            <summary>
            参数列表
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103.CustomParamList">
            <summary>
            自定义参数列表
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0001">
            <summary>
            终端心跳发送间隔，单位为秒（s）
            0x8103_0x0001
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0001.ParamId">
            <summary>
            0x0001
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0001.ParamLength">
            <summary>
            数据 长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0001.ParamValue">
            <summary>
            终端心跳发送间隔，单位为秒（s）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0001.Description">
            <summary>
            终端心跳发送间隔
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0001.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0001.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0001.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0001,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0002">
            <summary>
            TCP 消息应答超时时间，单位为秒（s）
            0x8103_0x0002
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0002.ParamId">
            <summary>
            0x0002
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0002.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0002.ParamValue">
            <summary>
            TCP 消息应答超时时间，单位为秒（s）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0002.Description">
            <summary>
            TCP消息应答超时时间
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0002.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0002.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0002.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0002,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0003">
            <summary>
            TCP 消息重传次数
            0x8103_0x0003
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0003.ParamId">
            <summary>
            0x0003
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0003.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0003.ParamValue">
            <summary>
            TCP 消息重传次数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0003.Description">
            <summary>
            TCP消息重传次数
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0003.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0003.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0003.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0003,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0004">
            <summary>
            UDP 消息应答超时时间，单位为秒（s）
            0x8103_0x0004
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0004.ParamId">
            <summary>
            0x0004
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0004.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0004.ParamValue">
            <summary>
            UDP 消息应答超时时间，单位为秒（s）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0004.Description">
            <summary>
            UDP消息应答超时时间
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0004.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0004.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0004.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0004,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0005">
            <summary>
            UDP 消息重传次数
            0x8103_0x0005
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0005.ParamId">
            <summary>
            0x0005
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0005.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0005.ParamValue">
            <summary>
            UDP 消息重传次数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0005.Description">
            <summary>
            UDP消息重传次数
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0005.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0005.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0005.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0005,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0006">
            <summary>
            SMS 消息应答超时时间，单位为秒（s）
            0x8103_0x0006
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0006.ParamId">
            <summary>
            0x0006
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0006.ParamLength">
            <summary>
            数据长度
            byte 4
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0006.ParamValue">
            <summary>
            SMS 消息应答超时时间，单位为秒（s）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0006.Description">
            <summary>
            SMS消息应答超时时间
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0006.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0006.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0006.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0006,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0007">
            <summary>
            SMS 消息重传次数
            0x8103_0x0007
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0007.ParamId">
            <summary>
            0x0007
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0007.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0007.ParamValue">
            <summary>
            SMS 消息重传次数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0007.Description">
            <summary>
            SMS消息重传次数
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0007.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0007.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0007.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0007,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0010">
            <summary>
            主服务器 APN，无线通信拨号访问点。若网络制式为 CDMA，则该处为PPP 拨号号码
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0010.ParamId">
            <summary>
            0x0010
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0010.ParamLength">
            <summary>
            数据长度
            n byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0010.ParamValue">
            <summary>
            主服务器 APN，无线通信拨号访问点。若网络制式为 CDMA，则该处为PPP 拨号号码
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0010.Description">
            <summary>
            主服务器APN
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0010.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0010.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0010.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0010,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0011">
            <summary>
            主服务器无线通信拨号用户名
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0011.ParamId">
            <summary>
            0x0011
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0011.ParamLength">
            <summary>
            数据长度
            n byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0011.ParamValue">
            <summary>
            主服务器无线通信拨号用户名
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0011.Description">
            <summary>
            主服务器无线通信拨号用户名
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0011.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0011.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0011.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0011,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0012">
            <summary>
            主服务器无线通信拨号密码
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0012.ParamId">
            <summary>
            0x0012
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0012.ParamLength">
            <summary>
            数据长度
            n byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0012.ParamValue">
            <summary>
            主服务器无线通信拨号密码
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0012.Description">
            <summary>
            主服务器无线通信拨号密码
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0012.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0012.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0012.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0012,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0013">
            <summary>
            主服务器地址,IP 或域名
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0013.ParamId">
            <summary>
            0x0013
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0013.ParamLength">
            <summary>
            数据长度
            n byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0013.ParamValue">
            <summary>
            主服务器地址,IP 或域名
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0013.Description">
            <summary>
            主服务器地址
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0013.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0013.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0013.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0013,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0014">
            <summary>
            备份服务器 APN，无线通信拨号访问点
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0014.ParamId">
            <summary>
            0x0014
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0014.ParamLength">
            <summary>
            数据长度
            n byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0014.ParamValue">
            <summary>
            备份服务器 APN，无线通信拨号访问点
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0014.Description">
            <summary>
            备份服务器 APN
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0014.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0014.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0014.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0014,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0015">
            <summary>
            备份服务器无线通信拨号用户名
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0015.ParamId">
            <summary>
            0x0015
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0015.ParamLength">
            <summary>
            数据长度
            n byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0015.ParamValue">
            <summary>
            备份服务器无线通信拨号用户名
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0015.Description">
            <summary>
            备份服务器无线通信拨号用户名
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0015.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0015.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0015.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0015,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0016">
            <summary>
            备份服务器无线通信拨号密码
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0016.ParamId">
            <summary>
            0x0016
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0016.ParamLength">
            <summary>
            数据 长度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0016.ParamValue">
            <summary>
            备份服务器无线通信拨号密码
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0016.Description">
            <summary>
            备份服务器无线通信拨号密码
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0016.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0016.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0016.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0016,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0017">
            <summary>
            备份服务器地址,IP 或域名
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0017.ParamId">
            <summary>
            0x0017
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0017.ParamLength">
            <summary>
            数据 长度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0017.ParamValue">
            <summary>
            备份服务器地址,IP 或域名
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0017.Description">
            <summary>
            备份服务器地址
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0017.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0017.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0017.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0017,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0018">
            <summary>
            服务器 TCP 端口
            2019版本已作为保留
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0018.ParamId">
            <summary>
            0x0018
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0018.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0018.ParamValue">
             <summary>
            服务器 TCP 端口
             </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0018.Description">
            <summary>
            服务器TCP端口
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0018.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0018.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0018.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0018,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0019">
            <summary>
            服务器 UDP 端口
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0019.ParamId">
            <summary>
            0x0019
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0019.ParamLength">
            <summary>
            数据长度
            n byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0019.ParamValue">
             <summary>
            服务器 UDP 端口
             </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0019.Description">
            <summary>
            服务器UDP端口
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0019.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0019.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0019.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0019,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x001A">
            <summary>
            道路运输证 IC 卡认证主服务器 IP 地址或域名
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x001A.ParamId">
            <summary>
            0x001A
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x001A.ParamLength">
            <summary>
            数据长度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x001A.ParamValue">
            <summary>
            道路运输证 IC 卡认证主服务器 IP 地址或域名
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x001A.Description">
            <summary>
            道路运输证IC卡认证主服务器IP地址或域名
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x001A.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x001A.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x001A.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x001A,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x001B">
            <summary>
            道路运输证 IC 卡认证主服务器 TCP 端口
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x001B.ParamId">
            <summary>
            0x001B
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x001B.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x001B.ParamValue">
             <summary>
            道路运输证 IC 卡认证主服务器 TCP 端口
             </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x001B.Description">
            <summary>
            道路运输证IC卡认证主服务器TCP端口
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x001B.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x001B.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x001B.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x001B,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x001C">
            <summary>
            道路运输证 IC 卡认证主服务器 UDP 端口
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x001C.ParamId">
            <summary>
            0x001C
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x001C.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x001C.ParamValue">
             <summary>
            道路运输证 IC 卡认证主服务器 UDP 端口
             </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x001C.Description">
            <summary>
            道路运输证IC卡认证主服务器UDP端口
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x001C.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x001C.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x001C.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x001C,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x001D">
            <summary>
            道路运输证 IC 卡认证备份服务器 IP 地址或域名，端口同主服务器
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x001D.ParamId">
            <summary>
            0x001D
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x001D.ParamLength">
            <summary>
            数据长度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x001D.ParamValue">
            <summary>
            道路运输证 IC 卡认证备份服务器 IP 地址或域名，端口同主服务器
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x001D.Description">
            <summary>
            道路运输证IC卡认证备份服务器IP地址或域名
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x001D.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x001D.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x001D.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x001D,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0020">
            <summary>
            位置汇报策略，0：定时汇报；1：定距汇报；2：定时和定距汇报
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0020.ParamId">
            <summary>
            0x0020
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0020.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0020.ParamValue">
            <summary>
            位置汇报策略，
            0：定时汇报；
            1：定距汇报；
            2：定时和定距汇报
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0020.Description">
            <summary>
            位置汇报策略
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0020.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0020.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0020.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0020,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0021">
            <summary>
            位置汇报方案，0：根据 ACC 状态； 1：根据登录状态和 ACC 状态，先判断登录状态，若登录再根据 ACC 状态
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0021.ParamId">
            <summary>
            0x0021
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0021.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0021.ParamValue">
            <summary>
            位置汇报方案，
            0：根据 ACC 状态； 
            1：根据登录状态和 ACC 状态，先判断登录状态，若登录再根据 ACC 状态
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0021.Description">
            <summary>
            位置汇报方案
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0021.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0021.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0021.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0021,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0022">
            <summary>
            驾驶员未登录汇报时间间隔，单位为秒（s），>0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0022.ParamId">
            <summary>
            0x0022
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0022.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0022.ParamValue">
            <summary>
            驾驶员未登录汇报时间间隔，单位为秒（s），>0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0022.Description">
            <summary>
            驾驶员未登录汇报时间间隔
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0022.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0022.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0022.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0022,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0023">
            <summary>
            从服务器APN。该值为空时，终端应使用主服务器相同配置
            2019版本
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0023.ParamId">
            <summary>
            0x0023
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0023.ParamLength">
            <summary>
            数据长度
            n byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0023.ParamValue">
            <summary>
            参数值
            从服务器APN
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0023.Description">
            <summary>
            从服务器APN
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0023.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0023.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0023.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0023,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0024">
            <summary>
            从服务器无线通信拨号用户名。该值为空时，终端应使用主服务器相同配置
            2019版本
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0024.ParamId">
            <summary>
            0x0024
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0024.ParamLength">
            <summary>
            数据长度
            n byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0024.ParamValue">
            <summary>
            参数值
            从服务器无线通信拨号用户名
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0024.Description">
            <summary>
            从服务器无线通信拨号用户名
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0024.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0024.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0024.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0024,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0025">
            <summary>
            从服务器无线通信拨号密码。该值为空，终端应使用主服务器相同配置
            2019版本
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0025.ParamId">
            <summary>
            0x0025
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0025.ParamLength">
            <summary>
            数据 长度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0025.ParamValue">
            <summary>
            参数值
            从服务器无线通信拨号密码
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0025.Description">
            <summary>
            从服务器无线通信拨号密码
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0025.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0025.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0025.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0025,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0026">
            <summary>
            从服务器备份地址IP。该值为空，终端应使用主服务器相同配置
            2019版本
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0026.ParamId">
            <summary>
            0x0026
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0026.ParamLength">
            <summary>
            数据长度
            n byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0026.ParamValue">
            <summary>
            参数值
            从服务器备份地址IP
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0026.Description">
            <summary>
            从服务器备份地址IP
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0026.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0026.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0026.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0026,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0027">
            <summary>
            休眠时汇报时间间隔，单位为秒（s），>0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0027.ParamId">
            <summary>
            0x0027
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0027.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0027.ParamValue">
            <summary>
            休眠时汇报时间间隔，单位为秒（s），>0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0027.Description">
            <summary>
            休眠时汇报时间间隔
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0027.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0027.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0027.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0027,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0028">
            <summary>
            紧急报警时汇报时间间隔，单位为秒（s），>0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0028.ParamId">
            <summary>
            0x0028
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0028.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0028.ParamValue">
            <summary>
            参数值
            紧急报警时汇报时间间隔，单位为秒（s），>0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0028.Description">
            <summary>
            紧急报警时汇报时间间隔
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0028.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0028.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0028.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0028,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0029">
            <summary>
            缺省时间汇报间隔，单位为秒（s），>0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0029.ParamId">
            <summary>
            0x0029
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0029.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0029.ParamValue">
            <summary>
            缺省时间汇报间隔，单位为秒（s），>0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0029.Description">
            <summary>
            缺省时间汇报间隔
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0029.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0029.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0029.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0029,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x002C">
            <summary>
            缺省距离汇报间隔，单位为米（m），>0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x002C.ParamId">
            <summary>
            0x002C
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x002C.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x002C.ParamValue">
            <summary>
            缺省距离汇报间隔，单位为米（m），>0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x002C.Description">
            <summary>
            缺省距离汇报间隔
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x002C.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x002C.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x002C.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x002C,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x002D">
            <summary>
            驾驶员未登录汇报距离间隔，单位为米（m），>0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x002D.ParamId">
            <summary>
            0x002D
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x002D.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x002D.ParamValue">
            <summary>
            驾驶员未登录汇报距离间隔，单位为米（m），>0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x002D.Description">
            <summary>
            驾驶员未登录汇报距离间隔
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x002D.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x002D.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x002D.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x002D,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x002E">
            <summary>
            休眠时汇报距离间隔，单位为米（m），>0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x002E.ParamId">
            <summary>
            0x002E
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x002E.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x002E.ParamValue">
            <summary>
            休眠时汇报距离间隔，单位为米（m），>0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x002E.Description">
            <summary>
            休眠时汇报距离间隔
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x002E.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x002E.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x002E.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x002E,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x002F">
            <summary>
            紧急报警时汇报距离间隔，单位为米（m），>0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x002F.ParamId">
            <summary>
            0x002F
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x002F.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x002F.ParamValue">
            <summary>
            紧急报警时汇报距离间隔，单位为米（m），>0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x002F.Description">
            <summary>
            紧急报警时汇报距离间隔
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x002F.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x002F.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x002F.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x002F,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0030">
            <summary>
            拐点补传角度，小于180
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0030.ParamId">
            <summary>
            0x0030
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0030.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0030.ParamValue">
            <summary>
            拐点补传角度，小于180
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0030.Description">
            <summary>
            拐点补传角度
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0030.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0030.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0030.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0030,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0031">
            <summary>
            电子围栏半径（非法位移阈值），单位为米
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0031.ParamId">
            <summary>
            0x0031
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0031.ParamLength">
            <summary>
            数据长度
            2 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0031.ParamValue">
            <summary>
            电子围栏半径（非法位移阈值），单位为米
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0031.Description">
            <summary>
            电子围栏半径
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0031.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0031.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0031.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0031,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0032">
            <summary>
            违规行驶时段范围
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0032.ParamId">
            <summary>
            0x0032
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0032.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0032.ParamValue">
            <summary>
            违规行驶时段范围（非法位移阈值），单位为米
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0032.Description">
            <summary>
            违规行驶时段范围
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0032.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0032.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0032.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0032,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0040">
            <summary>
            监控平台电话号码
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0040.ParamId">
            <summary>
            0x0040
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0040.ParamLength">
            <summary>
            数据长度
            n byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0040.ParamValue">
            <summary>
            监控平台电话号码
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0040.Description">
            <summary>
            监控平台电话号码
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0040.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0040.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0040.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0040,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0041">
            <summary>
            复位电话号码，可采用此电话号码拨打终端电话让终端复位
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0041.ParamId">
            <summary>
            0x0041
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0041.ParamLength">
            <summary>
            数据长度
            n byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0041.ParamValue">
            <summary>
            复位电话号码，可采用此电话号码拨打终端电话让终端复位
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0041.Description">
            <summary>
            复位电话号码
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0041.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0041.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0041.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0041,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0042">
            <summary>
            恢复出厂设置电话号码，可采用此电话号码拨打终端电话让终端恢复出厂设置
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0042.ParamId">
            <summary>
            0x0042
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0042.ParamLength">
            <summary>
            数据长度
            n byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0042.ParamValue">
            <summary>
            恢复出厂设置电话号码，可采用此电话号码拨打终端电话让终端恢复出厂设置
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0042.Description">
            <summary>
            恢复出厂设置电话号码
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0042.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0042.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0042.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0042,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0043">
            <summary>
            监控平台 SMS 电话号码
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0043.ParamId">
            <summary>
            0x0043
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0043.ParamLength">
            <summary>
            数据长度
            n byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0043.ParamValue">
            <summary>
            监控平台 SMS 电话号码
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0043.Description">
            <summary>
            监控平台SMS电话号码
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0043.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0043.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0043.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0043,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0044">
            <summary>
            接收终端 SMS 文本报警号码
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0044.ParamId">
            <summary>
            0x0044
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0044.ParamLength">
            <summary>
            数据长度
            n byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0044.ParamValue">
            <summary>
            接收终端 SMS 文本报警号码
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0044.Description">
            <summary>
            接收终端SMS文本报警号码
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0044.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0044.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0044.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0044,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0045">
            <summary>
            终端电话接听策略，0：自动接听；1：ACC ON 时自动接听，OFF 时手动接听
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0045.ParamId">
            <summary>
            0x0045
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0045.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0045.ParamValue">
            <summary>
            终端电话接听策略，0：自动接听；1：ACC ON 时自动接听，OFF 时手动接听
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0045.Description">
            <summary>
            终端电话接听策略
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0045.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0045.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0045.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0045,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0046">
            <summary>
            每次最长通话时间，单位为秒（s），0 为不允许通话，0xFFFFFFFF 为不限制
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0046.ParamId">
            <summary>
            0x0046
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0046.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0046.ParamValue">
            <summary>
            每次最长通话时间，单位为秒（s），0 为不允许通话，0xFFFFFFFF 为不限制
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0046.Description">
            <summary>
            每次最长通话时间
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0046.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0046.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0046.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0046,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0047">
            <summary>
            当月最长通话时间，单位为秒（s），0 为不允许通话，0xFFFFFFFF 为不限制
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0047.ParamId">
            <summary>
            0x0047
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0047.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0047.ParamValue">
            <summary>
            当月最长通话时间，单位为秒（s），0 为不允许通话，0xFFFFFFFF 为不限制
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0047.Description">
            <summary>
            当月最长通话时间
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0047.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0047.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0047.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0047,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0048">
            <summary>
            监听电话号码
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0048.ParamId">
            <summary>
            0x0048
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0048.ParamLength">
            <summary>
            数据长度
            n byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0048.ParamValue">
            <summary>
            监听电话号码
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0048.Description">
            <summary>
            监听电话号码
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0048.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0048.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0048.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0048,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0049">
            <summary>
            监管平台特权短信号码
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0049.ParamId">
            <summary>
            0x0049
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0049.ParamLength">
            <summary>
            数据长度
            n byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0049.ParamValue">
            <summary>
            监管平台特权短信号码
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0049.Description">
            <summary>
            监管平台特权短信号码
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0049.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0049.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0049.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0049,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0050">
            <summary>
            报警屏蔽字，与位置信息汇报消息中的报警标志相对应，相应位为 1则相应报警被屏蔽
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0050.ParamId">
            <summary>
            0x0050
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0050.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0050.ParamValue">
            <summary>
            报警屏蔽字，与位置信息汇报消息中的报警标志相对应，相应位为 1则相应报警被屏蔽
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0050.Description">
            <summary>
            报警屏蔽字
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0050.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0050.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0050.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0050,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0051">
            <summary>
            报警发送文本 SMS 开关，与位置信息汇报消息中的报警标志相对应，相应位为 1 则相应报警时发送文本 SMS
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0051.ParamId">
            <summary>
            0x0051
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0051.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0051.ParamValue">
            <summary>
            报警发送文本 SMS 开关，与位置信息汇报消息中的报警标志相对应，相应位为 1 则相应报警时发送文本 SMS
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0051.Description">
            <summary>
            报警发送文本SMS开关
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0051.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0051.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0051.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0051,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0052">
            <summary>
            报警拍摄开关，与位置信息汇报消息中的报警标志相对应，相应位为1 则相应报警时摄像头拍摄
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0052.ParamId">
            <summary>
            0x0052
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0052.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0052.ParamValue">
            <summary>
            报警拍摄开关，与位置信息汇报消息中的报警标志相对应，相应位为1 则相应报警时摄像头拍摄
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0052.Description">
            <summary>
            报警拍摄开关
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0052.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0052.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0052.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0052,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0053">
            <summary>
            报警拍摄存储标志，与位置信息汇报消息中的报警标志相对应，相应位为 1 则对相应报警时拍的照片进行存储，否则实时上传
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0053.ParamId">
            <summary>
            0x0053
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0053.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0053.ParamValue">
            <summary>
            报警拍摄存储标志，与位置信息汇报消息中的报警标志相对应，相应位为 1 则对相应报警时拍的照片进行存储，否则实时上传
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0053.Description">
            <summary>
            报警拍摄存储标志
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0053.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0053.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0053.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0053,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0054">
            <summary>
            关键标志，与位置信息汇报消息中的报警标志相对应，相应位为 1 则对相应报警为关键报警
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0054.ParamId">
            <summary>
            0x0054
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0054.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0054.ParamValue">
            <summary>
            关键标志，与位置信息汇报消息中的报警标志相对应，相应位为 1 则对相应报警为关键报警
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0054.Description">
            <summary>
            关键标志
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0054.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0054.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0054.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0054,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0055">
            <summary>
            最高速度，单位为公里每小时（km/h）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0055.ParamId">
            <summary>
            0x0055
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0055.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0055.ParamValue">
            <summary>
            最高速度，单位为公里每小时（km/h）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0055.Description">
            <summary>
            最高速度
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0055.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0055.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0055.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0055,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0056">
            <summary>
            超速持续时间，单位为秒（s）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0056.ParamId">
            <summary>
            0x0056
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0056.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0056.ParamValue">
            <summary>
            超速持续时间，单位为秒（s）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0056.Description">
            <summary>
            超速持续时间
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0056.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0056.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0056.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0056,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0057">
            <summary>
            连续驾驶时间门限，单位为秒（s）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0057.ParamId">
            <summary>
            0x0057
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0057.ParamLength">
            <summary>
            数据长度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0057.ParamValue">
            <summary>
            连续驾驶时间门限，单位为秒（s）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0057.Description">
            <summary>
            连续驾驶时间门限
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0057.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0057.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0057.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0057,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0058">
            <summary>
            当天累计驾驶时间门限，单位为秒（s）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0058.ParamId">
            <summary>
            0x0058
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0058.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0058.ParamValue">
            <summary>
            当天累计驾驶时间门限，单位为秒（s）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0058.Description">
            <summary>
            当天累计驾驶时间门限
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0058.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0058.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0058.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0058,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0059">
            <summary>
            最小休息时间，单位为秒（s）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0059.ParamId">
            <summary>
            0x0059
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0059.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0059.ParamValue">
            <summary>
            最小休息时间，单位为秒（s）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0059.Description">
            <summary>
            最小休息时间
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0059.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0059.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0059.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0059,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x005A">
            <summary>
            最长停车时间，单位为秒（s）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x005A.ParamId">
            <summary>
            0x005A
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x005A.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x005A.ParamValue">
            <summary>
            最长停车时间，单位为秒（s）
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x005A.Description">
            <summary>
            最长停车时间
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x005A.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x005A.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x005A.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x005A,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x005B">
            <summary>
            超速报警预警差值，单位为 1/10Km/h
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x005B.ParamId">
            <summary>
            0x005B
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x005B.ParamLength">
            <summary>
            数据长度
            2 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x005B.ParamValue">
            <summary>
            超速报警预警差值，单位为 1/10Km/h
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x005B.Description">
            <summary>
            超速报警预警差值
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x005B.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x005B.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x005B.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x005B,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x005C">
            <summary>
            疲劳驾驶预警差值，单位为秒（s），>0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x005C.ParamId">
            <summary>
            0x005C
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x005C.ParamLength">
            <summary>
            数据长度
            2 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x005C.ParamValue">
            <summary>
            疲劳驾驶预警差值，单位为秒（s），>0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x005C.Description">
            <summary>
            疲劳驾驶预警差值
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x005C.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x005C.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x005C.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x005C,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x005D">
            <summary>
            碰撞报警参数设置
            b7-b0： 碰撞时间，单位 4ms；
            b15-b8：碰撞加速度，单位 0.1g，设置范围在：0-79 之间，默认为10。
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x005D.ParamId">
            <summary>
            0x005D
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x005D.ParamLength">
            <summary>
            数据长度
            2 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x005D.ParamValue">
            <summary>
            碰撞报警参数设置
            b7-b0： 碰撞时间，单位4ms；
            b15-b8：碰撞加速度，单位 0.1g，设置范围在：0-79 之间，默认为10。
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x005D.Description">
            <summary>
            碰撞报警参数设置
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x005D.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x005D.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x005D.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x005D,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x005E">
            <summary>
            侧翻报警参数设置：
            侧翻角度，单位 1 度，默认为 30 度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x005E.ParamId">
            <summary>
            0x005E
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x005E.ParamLength">
            <summary>
            数据长度
            2 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x005E.ParamValue">
            <summary>
            侧翻报警参数设置：
            侧翻角度，单位 1 度，默认为 30 度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x005E.Description">
            <summary>
            侧翻报警参数设置
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x005E.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x005E.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x005E.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x005E,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0064">
            <summary>
            定时拍照控制，见 表 14
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0064.ParamId">
            <summary>
            0x0064
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0064.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0064.ParamValue">
            <summary>
            定时拍照控制，见808表 14
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0064.Description">
            <summary>
            定时拍照控制
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0064.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0064.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0064.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0064,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0065">
            <summary>
            定距拍照控制，见 表 15
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0065.ParamId">
            <summary>
            0x0065
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0065.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0065.ParamValue">
            <summary>
            定距拍照控制，见808表15
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0065.Description">
            <summary>
            定距拍照控制
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0065.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0065.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0065.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0065,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0070">
            <summary>
            图像/视频质量，1-10，1 最好
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0070.ParamId">
            <summary>
            0x0070
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0070.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0070.ParamValue">
            <summary>
            图像/视频质量，1-10，1 最好
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0070.Description">
            <summary>
            图像/视频质量
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0070.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0070.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0070.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0070,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0071">
            <summary>
            亮度，0-255
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0071.ParamId">
            <summary>
            0x0071
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0071.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0071.ParamValue">
            <summary>
            亮度，0-255
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0071.Description">
            <summary>
            亮度
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0071.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0071.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0071.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0071,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0072">
            <summary>
            对比度，0-127
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0072.ParamId">
            <summary>
            0x0072
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0072.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0072.ParamValue">
            <summary>
            对比度，0-127
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0072.Description">
            <summary>
            对比度
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0072.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0072.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0072.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0072,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0073">
            <summary>
            饱和度，0-127
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0073.ParamId">
            <summary>
            0x0073
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0073.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0073.ParamValue">
            <summary>
            饱和度，0-127
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0073.Description">
            <summary>
            饱和度
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0073.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0073.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0073.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0073,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0074">
            <summary>
            色度，0-255
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0074.ParamId">
            <summary>
            0x0074
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0074.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0074.ParamValue">
            <summary>
            色度，0-255
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0074.Description">
            <summary>
            色度
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0074.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0074.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0074.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0074,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0080">
            <summary>
            车辆里程表读数，1/10km
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0080.ParamId">
            <summary>
            0x0080
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0080.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0080.ParamValue">
            <summary>
            车辆里程表读数，1/10km
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0080.Description">
            <summary>
            车辆里程表读数
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0080.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0080.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0080.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0080,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0081">
            <summary>
            车辆所在的省域 ID
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0081.ParamId">
            <summary>
            0x0081
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0081.ParamLength">
            <summary>
            数据长度
            2 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0081.ParamValue">
            <summary>
            车辆所在的省域 ID
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0081.Description">
            <summary>
            车辆所在的省域ID
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0081.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0081.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0081.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0081,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0082">
            <summary>
            车辆所在的市域 ID
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0082.ParamId">
            <summary>
            0x0082
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0082.ParamLength">
            <summary>
            数据长度
            2 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0082.ParamValue">
            <summary>
            车辆所在的市域 ID
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0082.Description">
            <summary>
            车辆所在的市域ID
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0082.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0082.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0082.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0082,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0083">
            <summary>
            公安交通管理部门颁发的机动车号牌
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0083.ParamId">
            <summary>
            0x0083
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0083.ParamLength">
            <summary>
            数据长度
            n byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0083.ParamValue">
            <summary>
            公安交通管理部门颁发的机动车号牌
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0083.Description">
            <summary>
            公安交通管理部门颁发的机动车号牌
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0083.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0083.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0083.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0083,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0084">
            <summary>
            车牌颜色，按照 JT/T415-2006 的 5.4.12
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0084.ParamId">
            <summary>
            0x0084
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0084.ParamLength">
            <summary>
            数据长度
            n byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0084.ParamValue">
            <summary>
            车牌颜色，按照 JT/T415-2006 的 5.4.12
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0084.Description">
            <summary>
            车牌颜色
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0084.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0084.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0084.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0084,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0090">
            <summary>
            GNSS 定位模式，定义如下：
            bit0，0：禁用 GPS 定位， 1：启用 GPS 定位；
            bit1，0：禁用北斗定位， 1：启用北斗定位；
            bit2，0：禁用 GLONASS 定位， 1：启用 GLONASS 定位；
            bit3，0：禁用 Galileo 定位， 1：启用 Galileo 定位。
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0090.ParamId">
            <summary>
            0x0090
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0090.ParamLength">
            <summary>
            数据长度
            1 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0090.ParamValue">
            <summary>
            GNSS 定位模式，定义如下：
            bit0，0：禁用 GPS 定位， 1：启用 GPS 定位；
            bit1，0：禁用北斗定位， 1：启用北斗定位；
            bit2，0：禁用 GLONASS 定位， 1：启用 GLONASS 定位；
            bit3，0：禁用 Galileo 定位， 1：启用 Galileo 定位。
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0090.Description">
            <summary>
            GNSS 定位模式
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0090.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0090.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0090.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0090,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0091">
            <summary>
            GNSS 波特率，定义如下：
            0x00：4800；0x01：9600；
            0x02：19200；0x03：38400；
            0x04：57600；0x05：115200。
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0091.ParamId">
            <summary>
            0x0091
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0091.ParamLength">
            <summary>
            数据长度
            1 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0091.ParamValue">
            <summary>
            GNSS 波特率，定义如下：
            0x00：4800；0x01：9600；
            0x02：19200；0x03：38400；
            0x04：57600；0x05：115200。
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0091.Description">
            <summary>
            GNSS 波特率
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0091.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0091.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0091.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0091,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0092">
            <summary>
            GNSS 模块详细定位数据输出频率，定义如下：
            0x00：500ms；0x01：1000ms（默认值）；
            0x02：2000ms；0x03：3000ms；
            0x04：4000ms。
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0092.ParamId">
            <summary>
            0x0092
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0092.ParamLength">
            <summary>
            数据长度
            1 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0092.ParamValue">
            <summary>
            GNSS 模块详细定位数据输出频率，定义如下：
            0x00：500ms；0x01：1000ms（默认值）；
            0x02：2000ms；0x03：3000ms；
            0x04：4000ms。
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0092.Description">
            <summary>
            GNSS模块详细定位数据输出频率
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0092.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0092.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0092.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0092,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0093">
            <summary>
            GNSS 模块详细定位数据采集频率，单位为秒，默认为 1。
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0093.ParamId">
            <summary>
            0x0093
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0093.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0093.ParamValue">
            <summary>
            GNSS 模块详细定位数据采集频率，单位为秒，默认为 1。
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0093.Description">
            <summary>
            GNSS模块详细定位数据采集频率
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0093.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0093.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0093.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0093,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0094">
            <summary>
            GNSS 模块详细定位数据上传方式
            0x00，本地存储，不上传（默认值）；
            0x01，按时间间隔上传；
            0x02，按距离间隔上传；
            0x0B，按累计时间上传，达到传输时间后自动停止上传；
            0x0C，按累计距离上传，达到距离后自动停止上传；
            0x0D，按累计条数上传，达到上传条数后自动停止上传。
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0094.ParamId">
            <summary>
            0x0094
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0094.ParamLength">
            <summary>
            数据长度
            1 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0094.ParamValue">
            <summary>
            GNSS 模块详细定位数据上传方式
            0x00，本地存储，不上传（默认值）；
            0x01，按时间间隔上传；
            0x02，按距离间隔上传；
            0x0B，按累计时间上传，达到传输时间后自动停止上传；
            0x0C，按累计距离上传，达到距离后自动停止上传；
            0x0D，按累计条数上传，达到上传条数后自动停止上传。
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0094.Description">
            <summary>
            GNSS 模块详细定位数据上传方式
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0094.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0094.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0094.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0094,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0095">
            <summary>
            GNSS 模块详细定位数据上传设置：
            上传方式为 0x01 时，单位为秒；
            上传方式为 0x02 时，单位为米；
            上传方式为 0x0B 时，单位为秒；
            上传方式为 0x0C 时，单位为米；
            上传方式为 0x0D 时，单位为条。
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0095.ParamId">
            <summary>
            0x0095
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0095.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0095.ParamValue">
            <summary>
            GNSS 模块详细定位数据上传设置：
            上传方式为 0x01 时，单位为秒；
            上传方式为 0x02 时，单位为米；
            上传方式为 0x0B 时，单位为秒；
            上传方式为 0x0C 时，单位为米；
            上传方式为 0x0D 时，单位为条。
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0095.Description">
            <summary>
            GNSS模块详细定位数据上传设置
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0095.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0095.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0095.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0095,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0100">
            <summary>
            CAN 总线通道 1 采集时间间隔(ms)，0 表示不采集
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0100.ParamId">
            <summary>
            0x0100
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0100.ParamLength">
            <summary>
            数据 长度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0100.ParamValue">
            <summary>
            CAN 总线通道 1 采集时间间隔(ms)，0 表示不采集
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0100.Description">
            <summary>
            CAN 总线通道 1 采集时间间隔
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0100.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0100.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0100.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0100,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0101">
            <summary>
            CAN 总线通道 1 上传时间间隔(s)，0 表示不上传
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0101.ParamId">
            <summary>
            0x0101
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0101.ParamLength">
            <summary>
            数据长度
            2 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0101.ParamValue">
            <summary>
            CAN 总线通道 1 上传时间间隔(s)，0 表示不上传
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0101.Description">
            <summary>
            总线通道1上传时间间隔
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0101.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0101.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0101.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0101,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0102">
            <summary>
            CAN 总线通道 2 采集时间间隔(ms)，0 表示不采集
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0102.ParamId">
            <summary>
            0x0102
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0102.ParamLength">
            <summary>
            数据长度
            4 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0102.ParamValue">
            <summary>
            CAN 总线通道 2 采集时间间隔(ms)，0 表示不采集
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0102.Description">
            <summary>
            CAN总线通道2采集时间间隔
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0102.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0102.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0102.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0102,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0103">
            <summary>
            CAN 总线通道 2 上传时间间隔(s)，0 表示不上传
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0103.ParamId">
            <summary>
            0x0103
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0103.ParamLength">
            <summary>
            数据长度
            2 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0103.ParamValue">
            <summary>
            CAN 总线通道 2 上传时间间隔(s)，0 表示不上传
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0103.Description">
            <summary>
            CAN总线通道2上传时间间隔
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0103.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0103.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0103.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0103,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_0x0110">
            <summary>
            CAN 总线 ID 单独采集设置：
            bit63-bit32 表示此 ID 采集时间间隔(ms)，0 表示不采集；
            bit31 表示 CAN 通道号，0：CAN1，1：CAN2；
            bit30 表示帧类型，0：标准帧，1：扩展帧；
            bit29 表示数据采集方式，0：原始数据，1：采集区间的计算值；
            bit28-bit0 表示 CAN 总线 ID。
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0110.ParamId">
            <summary>
            0x0110
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0110.ParamLength">
            <summary>
            数据长度
            8 byte
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0110.CollectTimeInterval">
            <summary>
            bit63-bit32 表示此 ID 采集时间间隔(ms)，0 表示不采集；
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0110.ChannelNo">
            <summary>
            bit31 表示 CAN 通道号，0：CAN1，1：CAN2；
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0110.FrameType">
            <summary>
            bit30 表示帧类型，0：标准帧，1：扩展帧；
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0110.CollectWay">
            <summary>
             bit29 表示数据采集方式，0：原始数据，1：采集区间的计算值；
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0110.BusId">
            <summary>
            bit28-bit0 表示 CAN 总线 ID。
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_0x0110.Description">
            <summary>
            CAN总线ID单独采集设置
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0110.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0110.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8103_0x0110.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8103_0x0110,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_BodyBase">
            <summary>
            终端参数设置
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_BodyBase.ParamId">
            <summary>
            参数 ID
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_BodyBase.ParamLength">
            <summary>
            参数长度
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8103_CustomBodyBase">
            <summary>
            自定义终端参数设置
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_CustomBodyBase.ParamId">
            <summary>
            参数 ID
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8103_CustomBodyBase.ParamLength">
            <summary>
            参数长度
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8104">
            <summary>
            查询终端参数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8104.MsgId">
            <summary>
            0x8104
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8104.Description">
            <summary>
            查询终端参数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8104.SkipSerialization">
            <summary>
            跳过数据体序列化
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8105">
            <summary>
            终端控制
            </summary>
        </member>
        <member name="F:JT808.Protocol.MessageBody.JT808_0x8105.CommandParameterCount">
            <summary>
            标准命令参数数量
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.MsgId">
            <summary>
            0x8105
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.Description">
            <summary>
            终端控制
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.CommandWord">
            <summary>
            命令字
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.CommandParameters">
            <summary>
            命令参数集合
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.CustomCommandParameters">
            <summary>
            自定义命令参数集合
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.UnknownCommandParameters">
            <summary>
            未知的命令参数集合
            key:order
            value:data
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8105.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8105.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8105,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8105.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8105.ICommandParameter">
            <summary>
            命令参数接口
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.ICommandParameter.Order">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.ICommandParameter.CommandName">
            <summary>
            命令名称
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8105.ICommandParameterConvert">
            <summary>
            命令参数值的转换
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8105.ICommandParameterConvert.ToBytes">
            <summary>
            转为byte数组
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8105.ICommandParameterConvert.ToValue(System.Byte[])">
            <summary>
            将byte数组转为命令值
            </summary>
            <param name="bytes"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8105.ICommandParameterValue`1">
            <summary>
            命令参数值
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.ICommandParameterValue`1.Value">
            <summary>
            对应参数值
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8105.ICusotmCommandParameter">
            <summary>
            自定义命令参数接口
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8105.ConnectionControlCommandParameter">
            <summary>
            连接控制
            0：切换到指定监管平台服务器，连接到该服务器后即进入应急状态，此状态下仅有下发控制指令的监管平台可发送包括短信在内的控制指令；
            1：切换回原缺省监控平台服务器，并恢复正常状态。
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.ConnectionControlCommandParameter.Order">
            <summary>
            排序 0
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.ConnectionControlCommandParameter.CommandName">
            <summary>
            连接控制
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.ConnectionControlCommandParameter.Value">
            <summary>
            连接控制
            0：切换到指定监管平台服务器，连接到该服务器后即进入应急状态，此状态下仅有下发控制指令的监管平台可发送包括短信在内的控制指令；
            1：切换回原缺省监控平台服务器，并恢复正常状态。
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8105.ConnectionControlCommandParameter.ToBytes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8105.ConnectionControlCommandParameter.ToValue(System.Byte[])">
            <summary>
            
            </summary>
            <param name="bytes"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8105.DialPointNameCommandParameter">
            <summary>
            拨号点名称
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.DialPointNameCommandParameter.Order">
            <summary>
            排序 1
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.DialPointNameCommandParameter.CommandName">
            <summary>
            拨号点名称
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.DialPointNameCommandParameter.Value">
            <summary>
            拨号点名称
            一般为服务器 APN，无线通信拨号访问点，若网络制式为 CDMA，则该值为 PPP 连接拨号号码
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8105.DialPointNameCommandParameter.ToBytes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8105.DialPointNameCommandParameter.ToValue(System.Byte[])">
            <summary>
            
            </summary>
            <param name="bytes"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8105.DialUserNameCommandParameter">
            <summary>
            拨号用户名
            服务器无线通信拨号用户名
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.DialUserNameCommandParameter.Order">
            <summary>
            排序 2
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.DialUserNameCommandParameter.CommandName">
            <summary>
            拨号用户名
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.DialUserNameCommandParameter.Value">
            <summary>
            拨号用户名
            服务器无线通信拨号用户名
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8105.DialUserNameCommandParameter.ToBytes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8105.DialUserNameCommandParameter.ToValue(System.Byte[])">
            <summary>
            
            </summary>
            <param name="bytes"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8105.DialPwdCommandParameter">
            <summary>
            拨号密码
            服务器无线通信拨号密码
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.DialPwdCommandParameter.Order">
            <summary>
            排序 3
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.DialPwdCommandParameter.CommandName">
            <summary>
            拨号密码
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.DialPwdCommandParameter.Value">
            <summary>
            拨号密码
            服务器无线通信拨号密码
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8105.DialPwdCommandParameter.ToBytes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8105.DialPwdCommandParameter.ToValue(System.Byte[])">
            <summary>
            
            </summary>
            <param name="bytes"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8105.ServerUrlCommandParameter">
            <summary>
            服务器地址;IP 或域名
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.ServerUrlCommandParameter.Order">
            <summary>
            排序 4
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.ServerUrlCommandParameter.CommandName">
            <summary>
            服务器地址
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.ServerUrlCommandParameter.Value">
            <summary>
            服务器地址 IP或域名
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8105.ServerUrlCommandParameter.ToBytes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8105.ServerUrlCommandParameter.ToValue(System.Byte[])">
            <summary>
            
            </summary>
            <param name="bytes"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8105.TcpPortCommandParameter">
            <summary>
            Tcp端口
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.TcpPortCommandParameter.Order">
            <summary>
            排序 5
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.TcpPortCommandParameter.CommandName">
            <summary>
            连接控制
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.TcpPortCommandParameter.Value">
            <summary>
            Tcp端口
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8105.TcpPortCommandParameter.ToBytes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8105.TcpPortCommandParameter.ToValue(System.Byte[])">
            <summary>
            
            </summary>
            <param name="bytes"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8105.UdpPortCommandParameter">
            <summary>
            Udp端口
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.UdpPortCommandParameter.Order">
            <summary>
            排序 6
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.UdpPortCommandParameter.CommandName">
            <summary>
            连接控制
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.UdpPortCommandParameter.Value">
            <summary>
            Udp端口
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8105.UdpPortCommandParameter.ToBytes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8105.UdpPortCommandParameter.ToValue(System.Byte[])">
            <summary>
            
            </summary>
            <param name="bytes"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8105.MakerIdCommandParameter">
            <summary>
            制造商ID
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.MakerIdCommandParameter.Order">
            <summary>
            排序 7
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.MakerIdCommandParameter.CommandName">
            <summary>
            服务器地址
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.MakerIdCommandParameter.Value">
            <summary>
            制造商ID
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8105.MakerIdCommandParameter.ToBytes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8105.MakerIdCommandParameter.ToValue(System.Byte[])">
            <summary>
            
            </summary>
            <param name="bytes"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8105.MonitorPlatformAuthCodeCommandParameter">
            <summary>
            监管平台鉴权码
            监管平台下发的鉴权码，仅用于终端连接到监管平台之后的鉴权，终端连接回原监控平台还用原鉴权码
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.MonitorPlatformAuthCodeCommandParameter.Order">
            <summary>
            排序 8
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.MonitorPlatformAuthCodeCommandParameter.CommandName">
            <summary>
            监管平台鉴权码
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.MonitorPlatformAuthCodeCommandParameter.Value">
            <summary>
            监管平台鉴权码
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8105.MonitorPlatformAuthCodeCommandParameter.ToBytes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8105.MonitorPlatformAuthCodeCommandParameter.ToValue(System.Byte[])">
            <summary>
            
            </summary>
            <param name="bytes"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8105.HardwareVersionCommandParameter">
            <summary>
            硬件版本
            终端的硬件版本号，由制造商自定
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.HardwareVersionCommandParameter.Order">
            <summary>
            排序 9
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.HardwareVersionCommandParameter.CommandName">
            <summary>
            硬件版本
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.HardwareVersionCommandParameter.Value">
            <summary>
            硬件版本
            终端的硬件版本号，由制造商自定
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8105.HardwareVersionCommandParameter.ToBytes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8105.HardwareVersionCommandParameter.ToValue(System.Byte[])">
            <summary>
            
            </summary>
            <param name="bytes"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8105.FirmwareVersionCommandParameter">
            <summary>
            固件版本
            终端的固件版本号，由制造商自定
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.FirmwareVersionCommandParameter.Order">
            <summary>
            排序 10
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.FirmwareVersionCommandParameter.CommandName">
            <summary>
            固件版本
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.FirmwareVersionCommandParameter.Value">
            <summary>
            固件版本
            终端的硬件版本号，由制造商自定
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8105.FirmwareVersionCommandParameter.ToBytes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8105.FirmwareVersionCommandParameter.ToValue(System.Byte[])">
            <summary>
            
            </summary>
            <param name="bytes"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8105.UrlCommandParameter">
            <summary>
            URL的完整地址
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.UrlCommandParameter.Order">
            <summary>
            排序 11
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.UrlCommandParameter.CommandName">
            <summary>
            URL的完整地址
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.UrlCommandParameter.Value">
            <summary>
            URL的完整地址
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8105.UrlCommandParameter.ToBytes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8105.UrlCommandParameter.ToValue(System.Byte[])">
            <summary>
            
            </summary>
            <param name="bytes"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8105.ConnectTimeLimitCommandParameter">
            <summary>
            连接到指定服务器时限
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.ConnectTimeLimitCommandParameter.Order">
            <summary>
            排序 12
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.ConnectTimeLimitCommandParameter.CommandName">
            <summary>
            连接控制
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8105.ConnectTimeLimitCommandParameter.Value">
            <summary>
            连接到指定服务器时限
            单位：分（min），值非 0 后的有效期截止前，终端应连回原地址。
            若值为 0，则表示一直连接指 定服务器
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8105.ConnectTimeLimitCommandParameter.ToBytes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8105.ConnectTimeLimitCommandParameter.ToValue(System.Byte[])">
            <summary>
            
            </summary>
            <param name="bytes"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8106">
            <summary>
            查询指定终端参数
            0x8106
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8106.MsgId">
            <summary>
            0x8106
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8106.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8106.Description">
            <summary>
            查询指定终端参数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8106.ParameterCount">
            <summary>
            参数总数
            参数总数为 n
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8106.Parameters">
            <summary>
            参数 ID 列表
            参数顺序排列，如“参数 ID1 参数 ID2......参数IDn”。
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8106.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8106.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8106,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8106.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8107">
            <summary>
            查询终端属性
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8107.MsgId">
            <summary>
            0x8107
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8107.SkipSerialization">
            <summary>
            跳过数据体序列化
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8107.Description">
            <summary>
            查询终端属性
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8108">
            <summary>
            下发终端升级包
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8108.MsgId">
            <summary>
            0x8108
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8108.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8108.Description">
            <summary>
            下发终端升级包
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8108.UpgradeType">
            <summary>
            升级类型
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8108.MakerId">
            <summary>
            制造商 ID
            2013版本 5 个字节，终端制造商编码
            2019版本 11 个字节，终端制造商编码
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8108.VersionNumLength">
            <summary>
            版本号长度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8108.VersionNum">
            <summary>
            版本号
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8108.UpgradePackageLength">
            <summary>
            升级数据包长度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8108.UpgradePackage">
            <summary>
            升级数据包
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8108.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8108.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8108,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8108.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8201">
            <summary>
            位置信息查询
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8201.MsgId">
            <summary>
            0x8201
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8201.SkipSerialization">
            <summary>
            跳过数据体序列化
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8201.Description">
            <summary>
            位置信息查询
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8202">
            <summary>
            临时位置跟踪控制
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8202.MsgId">
            <summary>
            0x8202
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8202.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8202.Description">
            <summary>
            临时位置跟踪控制
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8202.Interval">
            <summary>
            时间间隔
            单位为秒（s），0 则停止跟踪。停止跟踪无需带后继字段
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8202.LocationTrackingValidity">
            <summary>
            位置跟踪有效期
            单位为秒（s），终端在接收到位置跟踪控制消息后，在有效期截止时间之前，依据消息中的时间间隔发送位置汇报
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8202.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8202.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8202,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8202.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8203">
            <summary>
            人工确认报警消息
            0x8203
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8203.MsgId">
            <summary>
            0x8203
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8203.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8203.Description">
            <summary>
            人工确认报警消息
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8203.AlarmMsgNum">
            <summary>
            报警消息流水号
            需人工确认的报警消息流水号，0 表示该报警类型所有消息
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8203.ManualConfirmAlarmType">
            <summary>
            人工确认报警类型
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8203.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8203.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8203,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8203.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8204">
            <summary>
            链路检测
            2019版本
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8204.MsgId">
            <summary>
            0x8204
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8204.SkipSerialization">
            <summary>
            跳过序列化器
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8204.Description">
            <summary>
            链路检测
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8300">
            <summary>
            文本信息下发
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8300.MsgId">
            <summary>
            0x8300
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8300.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8300.Description">
            <summary>
            文本信息下发
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8300.TextFlag">
            <summary>
            文本信息标志位含义见 表 38
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8300.TextType">
            <summary>
            文本类型
            1=通知,2=服务
            2019版本
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8300.TextInfo">
            <summary>
            文本信息
            最长为 1024 字节，经GBK编码
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8300.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8300.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8300,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8300.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8301">
            <summary>
            事件设置
            0x8301
            2019版本已作删除
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8301.MsgId">
            <summary>
            0x8301
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8301.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8301.Description">
            <summary>
            事件设置
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8301.SettingType">
            <summary>
            设置类型
            <see cref="T:JT808.Protocol.Enums.JT808EventSettingType"/>
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8301.SettingCount">
            <summary>
            设置总数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8301.EventItems">
            <summary>
            事件项
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8301.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8301.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8301,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8301.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8302">
            <summary>
            提问下发
            0x8302
            2019版本已作删除
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8302.MsgId">
            <summary>
            0x8302
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8302.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8302.Description">
            <summary>
            提问下发
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8302.Flag">
            <summary>
            标志
            提问下发标志位定义
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8302.IssueContentLength">
            <summary>
            问题内容长度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8302.Issue">
            <summary>
            问题
            问题文本，经 GBK 编码，长度为 N
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8302.Answers">
            <summary>
            候选答案列表 
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8302.Answer">
            <summary>
            候选答案信息
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8302.Answer.Id">
            <summary>
            答案 ID
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8302.Answer.ContentLength">
            <summary>
            答案内容长度
            答案内容字段字节长度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8302.Answer.Content">
            <summary>
            答案内容 
            答案内容，经 GBK 编码
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8302.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8302.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8302,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8302.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8303">
            <summary>
            信息点播菜单设置
            0x8303
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8303.MsgId">
            <summary>
            0x8303
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8303.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8303.Description">
            <summary>
            信息点播菜单设置
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8303.SettingType">
            <summary>
            设置类型
            <see cref="T:JT808.Protocol.Enums.JT808InformationSettingType"/>
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8303.InformationItemCount">
            <summary>
            信息项总数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8303.InformationItems">
            <summary>
            信息点播信息项组成数据
            信息项列表
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8303.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8303.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8303,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8303.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8304">
            <summary>
            信息服务
            0x8304
            2019版本已作删除
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8304.MsgId">
            <summary>
            0x8304
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8304.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8304.Description">
            <summary>
            信息服务
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8304.InformationType">
            <summary>
            信息类型
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8304.InformationLength">
            <summary>
            信息长度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8304.InformationContent">
            <summary>
            信息内容
            经 GBK 编码
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8304.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8304.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8304,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8304.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8400">
            <summary>
            电话回拨
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8400.MsgId">
            <summary>
            0x8400
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8400.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8400.Description">
            <summary>
            电话回拨
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8400.CallBack">
            <summary>
            0:普通通话；1:监听
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8400.PhoneNumber">
            <summary>
            电话号码 
            最长为 20 字节
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8400.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8400.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8400,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8400.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8401">
            <summary>
            设置电话本
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8401.MsgId">
            <summary>
            0x8401
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8401.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8401.Description">
            <summary>
            设置电话本
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8401.SettingTelephoneBook">
            <summary>
            设置类型
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8401.ContactCount">
            <summary>
            联系人总数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8401.JT808ContactProperties">
            <summary>
            联系人项
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8401.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8401.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8401,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8401.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8500">
            <summary>
            车辆控制
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8500.MsgId">
            <summary>
            0x8500
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8500.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8500.Description">
            <summary>
            车辆控制
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8500.ControlFlag">
            <summary>
            控制标志 
            控制指令标志位数据格式
            0：车门解锁；1：车门加锁
            1-7 保留
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8500.ControlTypeCount">
            <summary>
            控制类型数量
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8500.ControlTypeBuffer">
            <summary>
            用于反序列化的时候,由于厂家自定义类型比较多，所以直接用byte数组存储
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8500.ControlTypes">
            <summary>
            用于序列化的时候,由于厂家自定义类型比较多，所以直接用JT808_0x8500_ControlType
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8500.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8500.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8500.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8500,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8500_0x0001">
            <summary>
            控制类型
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8500_0x0001.ControlTypeId">
            <summary>
            0x0001
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8500_0x0001.ControlTypeParameter">
            <summary>
            控制类型参数
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8500_0x0001.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8500_0x0001.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8500_0x0001.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8500_0x0001,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8500_ControlType">
            <summary>
            控制类型
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8500_ControlType.ControlTypeId">
            <summary>
            控制类型Id
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8600">
            <summary>
            设置圆形区域
            0x8600
            注：本条消息协议支持周期时间范围，如要限制每天的8:30-18:00，起始/结束时间设为：00-00-00-08-30-00/00-00-00-18-00-00，其他以此类推
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8600.MsgId">
            <summary>
            0x8600
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8600.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8600.Description">
            <summary>
            设置圆形区域
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8600.SettingAreaProperty">
            <summary>
            设置属性
            <see cref="T:JT808.Protocol.Enums.JT808SettingProperty"/>
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8600.AreaCount">
            <summary>
            区域总数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8600.AreaItems">
            <summary>
            区域项
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8600.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8600.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8600,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8600.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8601">
            <summary>
            删除圆形区域
            0x8601
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8601.MsgId">
            <summary>
            0x8601
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8601.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8601.Description">
            <summary>
            删除圆形区域
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8601.AreaCount">
            <summary>
            区域数
            本条消息中包含的区域数，不超过 125 个，多于 125个建议用多条消息，0 为删除所有圆形区域
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8601.AreaIds">
            <summary>
            区域ID集合
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8601.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8601.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8601,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8601.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8602">
            <summary>
            设置矩形区域
            0x8602
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8602.MsgId">
            <summary>
            0x8602
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8602.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8602.Description">
            <summary>
            设置矩形区域
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8602.SettingAreaProperty">
            <summary>
            设置属性
            <see cref="T:JT808.Protocol.Enums.JT808SettingProperty"/>
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8602.AreaCount">
            <summary>
            区域总数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8602.AreaItems">
            <summary>
            区域项
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8602.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8602.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8602,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8602.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8603">
            <summary>
            删除矩形区域
            0x8603
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8603.MsgId">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8603.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8603.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8603.AreaCount">
            <summary>
            区域数
            本条消息中包含的区域数，不超过 125 个，多于 125个建议用多条消息，0 为删除所有圆形区域
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8603.AreaIds">
            <summary>
            区域ID集合
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8603.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8603.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8603,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8603.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8604">
            <summary>
            设置多边形区域
            0x8604
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8604.MsgId">
            <summary>
            0x8604
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8604.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8604.Description">
            <summary>
            设置多边形区域
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8604.AreaId">
            <summary>
            区域 ID
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8604.AreaProperty">
            <summary>
            区域属性
            <see cref="T:JT808.Protocol.Enums.JT808SettingProperty"/>
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8604.StartTime">
            <summary>
            起始时间
            YY-MM-DD-hh-mm-ss，若区域属性 0 位为 0 则没有该字段
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8604.EndTime">
            <summary>
            结束时间
            YY-MM-DD-hh-mm-ss，若区域属性 0 位为 0 则没有该字段
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8604.HighestSpeed">
            <summary>
            最高速度
            Km/h，若区域属性 1 位为 0 则没有该字段
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8604.OverspeedDuration">
            <summary>
            超速持续时间 
            单位为秒（s）（类似表述，同前修改），若区域属性 1 位为 0 则没有该字段
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8604.PeakCount">
            <summary>
            区域总顶点数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8604.PeakItems">
            <summary>
            顶点项
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8604.NightMaximumSpeed">
            <summary>
            夜间最高速度
            2019版本
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8604.NameLength">
            <summary>
            名称长度
            2019版本
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8604.AreaName">
            <summary>
            区域名称
            2019版本
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8604.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8604.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8604,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8604.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8605">
            <summary>
            删除多边形区域
            0x8605
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8605.MsgId">
            <summary>
            0x8605
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8605.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8605.Description">
            <summary>
            删除多边形区域
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8605.AreaCount">
            <summary>
            区域数
            本条消息中包含的区域数，不超过 125 个，多于 125个建议用多条消息，0 为删除所有圆形区域
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8605.AreaIds">
            <summary>
            区域ID集合
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8605.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8605.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8605,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8605.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8606">
            <summary>
            设置路线
            0x8606
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8606.MsgId">
            <summary>
            0x8606
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8606.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8606.Description">
            <summary>
            设置路线
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8606.RouteId">
            <summary>
            路线 ID
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8606.RouteProperty">
            <summary>
            路线属性
            路线属性数据格式见 表 67
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8606.StartTime">
            <summary>
            起始时间
            YY-MM-DD-hh-mm-ss，若区域属性 0 位为 0 则没有该字段
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8606.EndTime">
            <summary>
            结束时间
            YY-MM-DD-hh-mm-ss，若区域属性 0 位为 0 则没有该字段
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8606.InflectionPointCount">
            <summary>
            路线总拐点数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8606.InflectionPointItems">
            <summary>
            拐点项
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8606.RouteNameLength">
            <summary>
            名称长度
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8606.RouteName">
            <summary>
            路线名称
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8606.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8606.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8606,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8606.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8607">
            <summary>
            删除路线
            0x8607
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8607.MsgId">
            <summary>
            0x8607
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8607.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8607.Description">
            <summary>
            删除路线
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8607.AreaCount">
            <summary>
            区域数
            本条消息中包含的区域数，不超过 125 个，多于 125个建议用多条消息，0 为删除所有圆形区域
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8607.AreaIds">
            <summary>
            区域ID集合
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8607.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8607.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8607,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8607.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8608">
            <summary>
            查询区域或线路数据
            0x8608
            2019版本
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8608.MsgId">
            <summary>
            0x8608
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8608.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8608.Description">
            <summary>
            查询区域或线路数据
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8608.QueryType">
            <summary>
            查询类型
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8608.Count">
            <summary>
            查询的区域或线路的ID数量
            0表示查询所有区域或线路数据，大于0表示后面跟随要查询的区域或线路的ID数量
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8608.Ids">
            <summary>
            查询的区域或线路的ID
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8608.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8608.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8608,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8608.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8700">
            <summary>
            行驶记录数据采集命令
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8700.MsgId">
            <summary>
            0x8700
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8700.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8700.Description">
            <summary>
            行驶记录数据采集命令
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8700.CommandId">
            <summary>
            命令Id
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8700.JT808CarDVRDownPackage">
            <summary>
            行车记录仪下行数据包
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8700.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8700.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8700.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8700,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8701">
            <summary>
            行驶记录参数下传命令
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8701.MsgId">
            <summary>
            0x8701
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8701.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8701.Description">
            <summary>
            行驶记录参数下传命令
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8701.CommandId">
            <summary>
            命令Id
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8701.JT808CarDVRDownPackage">
            <summary>
            行驶记录参数下传命令包
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8701.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8701.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8701.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8701,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8702">
            <summary>
            上报驾驶员身份信息请求
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8702.MsgId">
            <summary>
            0x8702
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8702.Description">
            <summary>
            上报驾驶员身份信息请求
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8702.SkipSerialization">
            <summary>
            跳过数据体序列化
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8800">
            <summary>
            多媒体数据上传应答
            0x8800
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8800.MsgId">
            <summary>
            0x8800
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8800.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8800.Description">
            <summary>
            多媒体数据上传应答
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8800.MultimediaId">
            <summary>
            多媒体ID
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8800.RetransmitPackageCount">
            <summary>
            重传包总数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8800.RetransmitPackageIds">
            <summary>
            重传包 ID 列表
            重传包序号顺序排列，如“包 ID1 包 ID2......包 IDn”。
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8800.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8800.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8800,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8800.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8801">
            <summary>
            摄像头立即拍摄命令
            0x8801
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8801.MsgId">
            <summary>
            0x8801
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8801.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8801.Description">
            <summary>
            摄像头立即拍摄命令
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8801.ChannelId">
            <summary>
            通道 ID
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8801.ShootingCommand">
            <summary>
            拍摄命令 
            0 表示停止拍摄；0xFFFF 表示录像；其它表示拍照张数
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8801.VideoTime">
            <summary>
            拍照间隔/录像时间
            秒，0 表示按最小间隔拍照或一直录像
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8801.SaveFlag">
            <summary>
            保存标志 
            1：保存；0：实时上传
            仅主机拍照时有效
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8801.Resolution">
            <summary>
            分辨率
            <see cref="T:JT808.Protocol.Enums.JT808CameraResolutionType"/>
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8801.VideoQuality">
            <summary>
            图像/视频质量
            1-10，1 代表质量损失最小，10 表示压缩比最大
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8801.Lighting">
            <summary>
            亮度
            0-255
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8801.Contrast">
            <summary>
            对比度
            0-127
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8801.Saturability">
            <summary>
            饱和度
            0-127
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8801.Chroma">
            <summary>
            色度
            0-255
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8801.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8801.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8801,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8801.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8802">
            <summary>
            存储多媒体数据检索
            0x8802
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8802.MsgId">
            <summary>
            0x8802
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8802.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8802.Description">
            <summary>
            存储多媒体数据检索
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8802.MultimediaType">
            <summary>
            多媒体类型
            <see cref="T:JT808.Protocol.Enums.JT808MultimediaType"/>
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8802.ChannelId">
            <summary>
            通道 ID
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8802.EventItemCoding">
            <summary>
            事件项编码
            <see cref="T:JT808.Protocol.Enums.JT808EventItemCoding"/>
            0：平台下发指令；1：定时动作；2：抢劫报警触发；3：碰撞侧翻报警触发；其他保留
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8802.StartTime">
            <summary>
            起始时间
            YY-MM-DD-hh-mm-ss
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8802.EndTime">
            <summary>
            结束时间
            YY-MM-DD-hh-mm-ss
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8802.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8802.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8802,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8802.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8803">
            <summary>
            存储多媒体数据上传命令
            0x8803
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8803.MsgId">
            <summary>
            0x8803
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8803.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8803.Description">
            <summary>
            存储多媒体数据上传命令
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8803.MultimediaType">
            <summary>
            多媒体类型 
            <see cref="T:JT808.Protocol.Enums.JT808MultimediaType"/>
            0：图像；1：音频；2：视频
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8803.ChannelId">
            <summary>
            通道 ID
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8803.EventItemCoding">
            <summary>
            事件项编码
            <see cref="T:JT808.Protocol.Enums.JT808EventItemCoding"/>
            0：平台下发指令；1：定时动作；2：抢劫报警触发；3：碰撞侧翻报警触发；其他保留 
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8803.StartTime">
            <summary>
            起始时间
            YY-MM-DD-hh-mm-ss
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8803.EndTime">
            <summary>
            结束时间
            YY-MM-DD-hh-mm-ss
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8803.MultimediaDeleted">
            <summary>
            删除标志
            <see cref="T:JT808.Protocol.Enums.JT808MultimediaDeleted"/>
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8803.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8803.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8803,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8803.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8804">
            <summary>
            录音开始命令
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8804.MsgId">
            <summary>
            0x8804
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8804.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8804.Description">
            <summary>
            录音开始命令
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8804.RecordCmd">
            <summary>
            录音命令
            0：停止录音；0x01：开始录音；
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8804.RecordTime">
            <summary>
            单位为秒（s），0 表示一直录音
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8804.RecordSave">
            <summary>
            保存标志
            0：实时上传；1：保存
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8804.AudioSampleRate">
            <summary>
            音频采样率
            0：8K；1：11K；2：23K；3：32K；其他保留
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8804.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8804.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8804,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8804.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8805">
            <summary>
            单条存储多媒体数据检索上传命令
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8805.MsgId">
            <summary>
            0x8805
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8805.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8805.Description">
            <summary>
            单条存储多媒体数据检索上传命令
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8805.MultimediaId">
            <summary>
            多媒体ID
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8805.MultimediaDeleted">
            <summary>
            删除标志
            <see cref="T:JT808.Protocol.Enums.JT808MultimediaDeleted"/>
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8805.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8805.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8805,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8805.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8900">
            <summary>
            数据下行透传
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8900.MsgId">
            <summary>
            0x8900
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8900.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8900.Description">
            <summary>
            数据下行透传
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8900.PassthroughType">
            <summary>
            透传消息类型
            透传消息类型定义见 表 93
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8900.PassthroughData">
            <summary>
            数据下行透传数据
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8900.JT808_0X8900_BodyBase">
            <summary>
            透传消息内容
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8900.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8900.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8900,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8900.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8900_BodyBase">
            <summary>
            数据下行透传
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8900_BodyBase.PassthroughType">
            <summary>
            透传消息类型
            透传消息类型定义见 表 93
            </summary>
        </member>
        <member name="T:JT808.Protocol.MessageBody.JT808_0x8A00">
            <summary>
            平台RSA公钥
            0x8A00
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8A00.MsgId">
            <summary>
            0x8A00
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8A00.SkipSerialization">
            <summary>
            
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8A00.Description">
            <summary>
            平台RSA公钥
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8A00.E">
            <summary>
            e
            平台 RSA 公钥{e,n}中的 e
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessageBody.JT808_0x8A00.N">
            <summary>
            n
            RSA 公钥{e,n}中的 n
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8A00.Deserialize(JT808.Protocol.MessagePack.JT808MessagePackReader@,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8A00.Serialize(JT808.Protocol.MessagePack.JT808MessagePackWriter@,JT808.Protocol.MessageBody.JT808_0x8A00,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="config"></param>
        </member>
        <member name="M:JT808.Protocol.MessageBody.JT808_0x8A00.Analyze(JT808.Protocol.MessagePack.JT808MessagePackReader@,System.Text.Json.Utf8JsonWriter,JT808.Protocol.IJT808Config)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="writer"></param>
            <param name="config"></param>
        </member>
        <member name="T:JT808.Protocol.MessagePack.JT808MessagePackReader">
            <summary>
            JT808消息读取器
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessagePack.JT808MessagePackReader.Reader">
            <summary>
            读取buffer
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessagePack.JT808MessagePackReader.SrcBuffer">
            <summary>
            原数据
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessagePack.JT808MessagePackReader.ReaderCount">
            <summary>
            读取到的数量
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessagePack.JT808MessagePackReader.Version">
            <summary>
            JT808版本号
            </summary>
        </member>
        <member name="F:JT808.Protocol.MessagePack.JT808MessagePackReader._decoded">
            <summary>
            是否进行解码操作
            若进行解码操作，则对应的是一个正常的包
            若不进行解码操作，则对应的是一个非正常的包（头部包，数据体包等等）
            主要用来一次性读取所有数据体内容操作
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.#ctor(System.ReadOnlySpan{System.Byte},JT808.Protocol.Enums.JT808Version)">
            <summary>
            解码（转义还原）,计算校验和
            </summary>
            <param name="srcBuffer"></param>
            <param name="version">默认JT808Version.JTT2013</param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.Decode">
            <summary>
            在解码的时候把校验和也计算出来，避免在循环一次进行校验
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.Decode(System.Span{System.Byte})">
            <summary>
            在解码的时候把校验和也计算出来，避免在循环一次进行校验
            </summary>
            <returns></returns>
        </member>
        <member name="P:JT808.Protocol.MessagePack.JT808MessagePackReader.CalculateCheckXorCode">
            <summary>
            计算的校验码
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessagePack.JT808MessagePackReader.RealCheckXorCode">
            <summary>
            实际获取的校验码
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessagePack.JT808MessagePackReader.CheckXorCodeVali">
            <summary>
            验证码是否正确
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadStart">
            <summary>
            读取标识头
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadEnd">
            <summary>
            读取尾标识
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadInt16">
            <summary>
            读取有符号位的两字节数值类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadUInt16">
            <summary>
            读取无符号位的两字节数值类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadUInt32">
            <summary>
            读取无符号位的四字节数值类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadInt32">
            <summary>
            读取有符号位的四字节数值类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadUInt64">
            <summary>
            读取无符号位的八字节数值类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadInt64">
            <summary>
            读取有符号位的八字节数值类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadByte">
            <summary>
            读取一个字节
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadChar">
            <summary>
            读取一个字符
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadVirtualByte">
            <summary>
            虚拟读取一个字节，不计入内存偏移量
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadVirtualArray(System.Int32)">
            <summary>
            虚拟读取一个数组，不计入内存偏移量
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadVirtualUInt16">
            <summary>
            虚拟读取无符号位的两字节数值类型，不计入内存偏移量
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadVirtualInt16">
            <summary>
            虚拟读取有符号位的两字节数值类型，不计入内存偏移量
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadVirtualUInt32">
            <summary>
            虚拟读取无符号位的四字节数值类型，不计入内存偏移量
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadVirtualInt32">
            <summary>
            虚拟读取有符号位的四字节数值类型，不计入内存偏移量
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadVirtualUInt64">
            <summary>
            虚拟读取无符号位的八字节数值类型，不计入内存偏移量
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadVirtualInt64">
            <summary>
            虚拟读取有符号位的八字节数值类型，不计入内存偏移量
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadBigNumber(System.Int32)">
            <summary>
            读取数字编码 
            大端模式、高位在前
            </summary>
            <param name="len"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadArray(System.Int32)">
            <summary>
            读取固定大小的内存块
            </summary>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadArray(System.Int32,System.Int32)">
            <summary>
            读取固定大小的内存块
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadString(System.Int32)">
            <summary>
            读取GBK字符串编码
            </summary>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadASCII(System.Int32)">
            <summary>
            读取ASCII编码
            </summary>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadRemainStringContent">
            <summary>
            读取剩余数据体内容为字符串模式
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadHex(System.Int32)">
            <summary>
            读取16进制编码
            </summary>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadDateTime6(System.String)">
            <summary>
            读取六字节日期,yyMMddHHmmss
            </summary>
            <param name="format">>D2： 10  X2：16</param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadDateTime_yyMMddHHmmss">
            <summary>
            读取六字节日期,yyMMddHHmmss
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.BcdToInt(System.Byte)">
            <summary>
            16进制的BCD BYTE转成整型
            </summary>
            <param name="value">16进制的BCD BYTE转成整型</param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadDateTimeNull6(System.String)">
            <summary>
            读取可空类型的六字节日期,yyMMddHHmmss
            </summary>
            <param name="format">>D2： 10  X2：16</param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadDateTimeNull_yyMMddHHmmss">
            <summary>
            读取可空类型的六字节日期,yyMMddHHmmss
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadDateTime5(System.String)">
            <summary>
            读取五字节日期,HH-mm-ss-msms|HH-mm-ss-fff
            </summary>
            <param name="format">D2： 10  X2：16</param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadDateTime_HHmmssfff">
            <summary>
            读取五字节日期,HH-mm-ss-msms|HH-mm-ss-fff
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadDateTimeNull5(System.String)">
            <summary>
            读取可空类型的五字节日期,HH-mm-ss-msms|HH-mm-ss-fff
            </summary>
            <param name="format">D2： 10  X2：16</param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadDateTimeNull_HHmmssfff">
            <summary>
            读取可空类型的五字节日期,HH-mm-ss-msms|HH-mm-ss-fff
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadDateTime4(System.String)">
            <summary>
            读取四字节日期，YYYYMMDD
            </summary>
            <param name="format">D2： 10  X2：16</param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadDateTime_YYYYMMDD">
            <summary>
            读取四字节日期，YYYYMMDD
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadDateTimeNull4(System.String)">
            <summary>
            读取可空类型的四字节日期，YYYYMMDD
            </summary>
            <param name="format">D2： 10  X2：16</param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadDateTimeNull_YYYYMMDD">
            <summary>
            读取可空类型的四字节日期，YYYYMMDD
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadDateTime3(System.String)">
            <summary>
            读取三字节日期，YYMMDD
            </summary>
            <param name="format">D2： 10  X2：16</param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadDateTime_YYMMDD">
            <summary>
            读取三字节日期，YYMMDD
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadDateTimeNull3(System.String)">
            <summary>
            读取可空类型的三字节日期，YYMMDD
            </summary>
            <param name="format">D2： 10  X2：16</param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadDateTimeNull_YYMMDD">
            <summary>
            读取可空类型的三字节日期，YYMMDD
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadUTCDateTime">
            <summary>
            读取UTC时间类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadBCD(System.Int32,System.Boolean)">
            <summary>
            读取BCD编码
            </summary>
            <param name="len"></param>
            <param name="trim"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.GetReadOnlySpan(System.Int32)">
            <summary>
            读取数量大小的内存块
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.GetVirtualReadOnlySpan(System.Int32)">
            <summary>
            虚拟读取数量大小的内存块，不计入内存偏移量
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadContent(System.Int32)">
            <summary>
            读取数据体内存块
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadStringEndChar0">
            <summary>
            读取一整串字符串到\0结束
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadVirtualStringEndChar0">
            <summary>
            虚拟读取一整串字符串到\0结束，不计入内存偏移量
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadCurrentRemainContentLength">
            <summary>
            读取剩余数据体内容长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.Skip(System.Int32)">
            <summary>
            跳过多少字节
            </summary>
            <param name="count"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackReader.ReadCarDVRCheckCode(System.Int32)">
            <summary>
            读取JT19056校验码
            </summary>
            <param name="currentPosition"></param>
            <returns></returns>
        </member>
        <member name="T:JT808.Protocol.MessagePack.JT808MessagePackWriter">
            <summary>
            JT808消息写入器
            </summary>
        </member>
        <member name="P:JT808.Protocol.MessagePack.JT808MessagePackWriter.Version">
            <summary>
            JT808版本号
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.#ctor(System.Span{System.Byte},JT808.Protocol.Enums.JT808Version)">
            <summary>
            
            </summary>
            <param name="buffer">内存块</param>
            <param name="version">版本号:默认2013</param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.FlushAndGetEncodingArray">
            <summary>
            编码后的数组
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.FlushAndGetEncodingReadOnlySpan">
            <summary>
            编码后的内存块
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.FlushAndGetRealReadOnlySpan">
            <summary>
            获取实际写入的内存块
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.FlushAndGetRealArray">
            <summary>
            获取实际写入的数组
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteStart">
            <summary>
            写入头标识
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteEnd">
            <summary>
            写入尾标识
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.Nil(System.Int32@)">
            <summary>
            写入空标识,0x00
            </summary>
            <param name="position"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.Skip(System.Int32@,System.Int32@)">
            <summary>
            跳过多少字节数
            </summary>
            <param name="count"></param>
            <param name="position">跳过前的内存位置</param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.Skip(System.Int32@,System.Int32@,System.Byte@)">
            <summary>
            跳过多少字节数
            </summary>
            <param name="count"></param>
            <param name="position">跳过前的内存位置</param>
            <param name="fullValue">用什么数值填充跳过的内存块</param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteChar(System.Char@)">
            <summary>
            写入一个字符
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteByte(System.Byte@)">
            <summary>
            写入一个字节
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteInt16(System.Int16@)">
            <summary>
            写入两个字节的有符号数值类型
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteUInt16(System.UInt16@)">
            <summary>
            写入两个字节的无符号数值类型
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteInt32(System.Int32@)">
            <summary>
            写入四个字节的有符号数值类型
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteUInt32(System.UInt32@)">
            <summary>
            写入四个字节的无符号数值类型
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteUInt64(System.UInt64@)">
            <summary>
            写入八个字节的无符号数值类型
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteInt64(System.Int64@)">
            <summary>
            写入八个字节的有符号数值类型
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteString(System.String@)">
            <summary>
            写入字符串
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteArray(System.ReadOnlySpan{System.Byte}@)">
            <summary>
            写入数组
            </summary>
            <param name="src"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteUInt16Return(System.UInt16@,System.Int32@)">
            <summary>
            根据内存定位,反写两个字节的无符号数值类型
            </summary>
            <param name="value"></param>
            <param name="position"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteInt16Return(System.Int16@,System.Int32@)">
            <summary>
            根据内存定位,反写两个字节的有符号数值类型
            </summary>
            <param name="value"></param>
            <param name="position"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteInt32Return(System.Int32@,System.Int32@)">
            <summary>
            根据内存定位,反写四个字节的有符号数值类型
            </summary>
            <param name="value"></param>
            <param name="position"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteUInt32Return(System.UInt32@,System.Int32@)">
            <summary>
            根据内存定位,反写四个字节的无符号数值类型
            </summary>
            <param name="value"></param>
            <param name="position"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteInt64Return(System.Int64@,System.Int32@)">
            <summary>
            根据内存定位,反写八个字节的有符号数值类型
            </summary>
            <param name="value"></param>
            <param name="position"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteUInt64Return(System.UInt64@,System.Int32@)">
            <summary>
            根据内存定位,反写八个字节的无符号数值类型
            </summary>
            <param name="value"></param>
            <param name="position"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteByteReturn(System.Byte@,System.Int32@)">
            <summary>
            根据内存定位,反写1个字节的数值类型
            </summary>
            <param name="value"></param>
            <param name="position"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteBCDReturn(System.String@,System.Int32@,System.Int32@)">
            <summary>
            根据内存定位,反写BCD编码数据
            </summary>
            <param name="value"></param>
            <param name="len"></param>
            <param name="position"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteStringReturn(System.String@,System.Int32@)">
            <summary>
            根据内存定位,反写一串字符串数据
            </summary>
            <param name="value"></param>
            <param name="position"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteArrayReturn(System.ReadOnlySpan{System.Byte}@,System.Int32@)">
            <summary>
            根据内存定位,反写一组数组数据
            </summary>
            <param name="src"></param>
            <param name="position"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.IntToBcd(System.Int32)">
            <summary>
            整型数据转为BCD BYTE
            为了兼容int类型，不使用byte做参数
            支持0xFF一个字节的转换
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.IntToBcd(System.Int32,System.Span{System.Byte},System.Int32)">
            <summary>
            整型数据转为BCD BYTE[]
            </summary>
            <param name="value">整数值</param>
            <param name="list">bytes</param>
            <param name="count">字节数>=整数值</param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.IntToBcd(System.Int64,System.Span{System.Byte},System.Int32)">
            <summary>
            整型数据转为BCD BYTE[]
            </summary>
            <param name="value">整数值</param>
            <param name="list">bytes</param>
            <param name="byteCount">字节数>=整数值</param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteBCD(System.Int64@,System.Int32@)">
            <summary>
            写入BCD编码数据
            </summary>
            <param name="value">整数值</param>
            <param name="byteCount">字节数>=整数值</param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteBCD(System.Int32@,System.Int32@)">
            <summary>
            写入BCD编码数据
            </summary>
            <param name="value">整数值</param>
            <param name="count">字节数>=整数值</param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteDateTime6(System.DateTime@,System.Int32@)">
            <summary>
            写入六个字节的日期类型,yyMMddHHmmss
            </summary>
            <param name="value"></param>
            <param name="fromBase"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteDateTime_yyMMddHHmmss(System.DateTime@)">
            <summary>
            写入六个字节的日期类型,yyMMddHHmmss
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteDateTime6(System.Nullable{System.DateTime}@,System.Int32@)">
            <summary>
            写入六个字节的可空日期类型,yyMMddHHmmss
            </summary>
            <param name="value"></param>
            <param name="fromBase"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteDateTime_yyMMddHHmmss(System.Nullable{System.DateTime}@)">
            <summary>
            写入六个字节的可空日期类型,yyMMddHHmmss
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteDateTime5(System.DateTime@,System.Int32@)">
            <summary>
            写入五个字节的日期类型,HH-mm-ss-msms或HH-mm-ss-fff
            </summary>
            <param name="value"></param>
            <param name="fromBase"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteDateTime_HHmmssfff(System.DateTime@)">
            <summary>
            写入五个字节的日期类型,HH-mm-ss-msms或HH-mm-ss-fff
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteDateTime5(System.Nullable{System.DateTime}@,System.Int32@)">
            <summary>
            写入五个字节的可空日期类型,HH-mm-ss-msms或HH-mm-ss-fff
            </summary>
            <param name="value"></param>
            <param name="fromBase"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteDateTime_HHmmssfff(System.Nullable{System.DateTime}@)">
            <summary>
            写入五个字节的可空日期类型,HH-mm-ss-msms或HH-mm-ss-fff
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteUTCDateTime(System.DateTime@)">
            <summary>
            写入UTC日期类型
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteDateTime4(System.DateTime@,System.Int32@)">
            <summary>
            写入四个字节的日期类型,YYYYMMDD BCD[4] 数据形如：20200101
            </summary>
            <param name="value"></param>
            <param name="fromBase"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteDateTime_YYYYMMDD(System.DateTime@)">
            <summary>
            写入四个字节的日期类型,YYYYMMDD BCD[4] 数据形如：20200101
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteDateTime4(System.Nullable{System.DateTime}@,System.Int32@)">
            <summary>
            写入四个字节的可空日期类型,YYYYMMDD BCD[4]数据形如:20200101
            </summary>
            <param name="value"></param>
            <param name="fromBase"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteDateTime_YYYYMMDD(System.Nullable{System.DateTime}@)">
            <summary>
            写入四个字节的可空日期类型,YYYYMMDD BCD[4]数据形如:20200101
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteDateTime3(System.DateTime@,System.Int32@)">
            <summary>
            写入三个字节的日期类型,YYMMDD 数据形如：20200101
            </summary>
            <param name="value"></param>
            <param name="fromBase"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteDateTime_YYMMDD(System.DateTime@)">
            <summary>
            写入三个字节的日期类型,YYMMDD 数据形如：200101
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteDateTime3(System.Nullable{System.DateTime}@,System.Int32@)">
            <summary>
            写入三个字节的可空日期类型,YYMMDD 数据形如：200101
            </summary>
            <param name="value"></param>
            <param name="fromBase"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteDateTime_YYMMDD(System.Nullable{System.DateTime}@)">
            <summary>
            写入三个字节的可空日期类型,YYMMDD 数据形如：20200101
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteXor(System.Int32@,System.Int32@)">
            <summary>
            将指定内存块进行或运算并写入一个字节
            </summary>
            <param name="start"></param>
            <param name="end"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteXor(System.Int32@)">
            <summary>
            将指定内存块进行或运算并写入一个字节
            </summary>
            <param name="start"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteXor">
            <summary>
            将内存块进行或运算并写入一个字节
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteBCD(System.String@,System.Int32@)">
            <summary>
            写入BCD编码数据
            </summary>
            <param name="value"></param>
            <param name="len"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteHex(System.String,System.Int32@)">
            <summary>
            写入Hex编码数据
            </summary>
            <param name="value"></param>
            <param name="len"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteASCII(System.String@)">
            <summary>
            写入ASCII编码数据
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteFullEncode">
            <summary>
            将内存块进行808转义处理
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteEncode">
            <summary>
            将内存块进行808转义处理
            </summary>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteBigNumber(System.String@,System.Int32)">
            <summary>
            写入数值类型，数字编码 大端模式、高位在前
            </summary>
            <param name="value"></param>
            <param name="len"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteStringEndChar0(System.String)">
            <summary>
            将字符串写入并写入一个\0作为结尾
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.GetCurrentPosition">
            <summary>
            获取当前内存块写入的位置
            </summary>
            <returns></returns>
        </member>
        <member name="M:JT808.Protocol.MessagePack.JT808MessagePackWriter.WriteCarDVRCheckCode(System.Int32@)">
            <summary>
            写入JT19056校验码
            </summary>
            <param name="currentPosition"></param>
        </member>
        <member name="T:JT808.Protocol.Metadata.JT808CanProperty">
            <summary>
            Can属性
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808CanProperty.CanId">
            <summary>
            CAN ID
            4
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808CanProperty.CanData">
            <summary>
            CAN 数据
            8
            </summary>
        </member>
        <member name="T:JT808.Protocol.Metadata.JT808CircleAreaProperty">
            <summary>
            圆形区域属性
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808CircleAreaProperty.AreaId">
            <summary>
            区域 ID
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808CircleAreaProperty.AreaProperty">
            <summary>
            区域属性
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808CircleAreaProperty.CenterPointLat">
            <summary>
            中心点纬度
            以度为单位的纬度值乘以 10 的 6 次方，精确到百万分之一度
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808CircleAreaProperty.CenterPointLng">
            <summary>
            中心点经度
            以度为单位的经度值乘以 10 的 6 次方，精确到百万分之一度
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808CircleAreaProperty.Radius">
            <summary>
            半径
            单位为米（m），路段为该拐点到下一拐点
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808CircleAreaProperty.StartTime">
            <summary>
            起始时间
            YY-MM-DD-hh-mm-ss，若区域属性 0 位为 0 则没有该字段
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808CircleAreaProperty.EndTime">
            <summary>
            结束时间
            YY-MM-DD-hh-mm-ss，若区域属性 0 位为 0 则没有该字段
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808CircleAreaProperty.HighestSpeed">
            <summary>
            最高速度
            Km/h，若区域属性 1 位为 0 则没有该字段
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808CircleAreaProperty.OverspeedDuration">
            <summary>
            超速持续时间 
            单位为秒（s）（类似表述，同前修改），若区域属性 1 位为 0 则没有该字段
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808CircleAreaProperty.NightMaximumSpeed">
            <summary>
            夜间最高速度
            2019版本
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808CircleAreaProperty.NameLength">
            <summary>
            名称长度
            2019版本
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808CircleAreaProperty.AreaName">
            <summary>
            区域名称
            2019版本
            </summary>
        </member>
        <member name="T:JT808.Protocol.Metadata.JT808ContactProperty">
            <summary>
            电话本联系人项数据
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808ContactProperty.TelephoneBookContactType">
            <summary>
            标志 1：呼入；2：呼出；3：呼入/呼出
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808ContactProperty.PhoneNumberLength">
            <summary>
            号码长度
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808ContactProperty.PhoneNumber">
            <summary>
            电话号码
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808ContactProperty.ContactLength">
            <summary>
            联系人长度
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808ContactProperty.Contact">
            <summary>
            联系人 经 GBK 编码
            </summary>
        </member>
        <member name="T:JT808.Protocol.Metadata.JT808EventProperty">
            <summary>
            事件属性
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808EventProperty.EventId">
            <summary>
            事件 ID 
            若终端已有同 ID 的事件，则被覆盖
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808EventProperty.EventContentLength">
            <summary>
            事件内容长度
            后继事件内容字段字节长度
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808EventProperty.EventContent">
            <summary>
            事件内容
            事件内容，经 GBK 编码
            </summary>
        </member>
        <member name="T:JT808.Protocol.Metadata.JT808InflectionPointProperty">
            <summary>
            拐点属性
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808InflectionPointProperty.InflectionPointId">
            <summary>
            拐点 ID
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808InflectionPointProperty.SectionId">
            <summary>
            路段 ID
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808InflectionPointProperty.InflectionPointLat">
            <summary>
            拐点纬度
            以度为单位的纬度值乘以 10 的 6 次方，精确到百万分之一度
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808InflectionPointProperty.InflectionPointLng">
            <summary>
            拐点经度
            以度为单位的经度值乘以 10 的 6 次方，精确到百万分之一度
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808InflectionPointProperty.SectionWidth">
            <summary>
            路段宽度
            单位为米（m），路段为该拐点到下一拐点
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808InflectionPointProperty.SectionProperty">
            <summary>
            路段属性
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808InflectionPointProperty.SectionLongDrivingThreshold">
            <summary>
            路段行驶过长阈值
            单位为秒（s），若路段属性 0 位为 0 则没有该字段
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808InflectionPointProperty.SectionDrivingUnderThreshold">
            <summary>
            路段行驶不足阈值
            单位为秒（s），若路段属性 0 位为 0 则没有该字段
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808InflectionPointProperty.SectionHighestSpeed">
            <summary>
            路段最高速度
            单位为公里每小时（km/h），若路段属性 1 位为 0 则没有该字段
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808InflectionPointProperty.SectionOverspeedDuration">
            <summary>
            超速持续时间 
            单位为秒（s），若路段属性 1 位为 0 则没有该字段
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808InflectionPointProperty.NightMaximumSpeed">
            <summary>
            夜间最高速度
            单位为千米每小时(km/h),若路段属性 1 位为 0 则没有该字段
            </summary>
        </member>
        <member name="T:JT808.Protocol.Metadata.JT808InformationItemProperty">
            <summary>
            信息点播属性
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808InformationItemProperty.InformationType">
            <summary>
            信息类型
            若终端已有同类型的信息项，则被覆盖
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808InformationItemProperty.InformationLength">
            <summary>
            信息名称长度
            信息名称字段字节长度
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808InformationItemProperty.InformationName">
            <summary>
            信息名称
            经 GBK 编码处理
            </summary>
        </member>
        <member name="T:JT808.Protocol.Metadata.JT808MultimediaSearchProperty">
            <summary>
            存储多媒体数据检索应答
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808MultimediaSearchProperty.MultimediaId">
            <summary>
            多媒体 ID
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808MultimediaSearchProperty.MultimediaType">
            <summary>
            多媒体类型
            <see cref="T:JT808.Protocol.Enums.JT808MultimediaType"/>
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808MultimediaSearchProperty.ChannelId">
            <summary>
            通道 ID
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808MultimediaSearchProperty.EventItemCoding">
            <summary>
            事件项编码
            <see cref="T:JT808.Protocol.Enums.JT808EventItemCoding"/>
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808MultimediaSearchProperty.Position">
            <summary>
            位置信息汇报(0x0200)消息体
            表示拍摄或录制的起始时刻的位置基本信息数据
            </summary>
        </member>
        <member name="T:JT808.Protocol.Metadata.JT808PeakProperty">
            <summary>
            顶点项
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808PeakProperty.Lat">
            <summary>
            顶点纬度
            以度为单位的纬度值乘以 10 的 6 次方，精确到百万分之一度
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808PeakProperty.Lng">
            <summary>
            顶点经度
            以度为单位的经度值乘以 10 的 6 次方，精确到百万分之一度
            </summary>
        </member>
        <member name="T:JT808.Protocol.Metadata.JT808RectangleAreaProperty">
            <summary>
            矩形区域属性
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808RectangleAreaProperty.AreaId">
            <summary>
            区域 ID
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808RectangleAreaProperty.AreaProperty">
            <summary>
            区域属性
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808RectangleAreaProperty.UpLeftPointLat">
            <summary>
            左上点纬度
            以度为单位的纬度值乘以 10 的 6 次方，精确到百万分之一度
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808RectangleAreaProperty.UpLeftPointLng">
            <summary>
            左上点经度
            以度为单位的经度值乘以 10 的 6 次方，精确到百万分之一度
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808RectangleAreaProperty.LowRightPointLat">
            <summary>
            右下点纬度
            以度为单位的纬度值乘以 10 的 6 次方，精确到百万分之一度
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808RectangleAreaProperty.LowRightPointLng">
            <summary>
            右下点经度
            以度为单位的经度值乘以 10 的 6 次方，精确到百万分之一度
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808RectangleAreaProperty.StartTime">
            <summary>
            起始时间
            YY-MM-DD-hh-mm-ss，若区域属性 0 位为 0 则没有该字段
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808RectangleAreaProperty.EndTime">
            <summary>
            结束时间
            YY-MM-DD-hh-mm-ss，若区域属性 0 位为 0 则没有该字段
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808RectangleAreaProperty.HighestSpeed">
            <summary>
            最高速度
            Km/h，若区域属性 1 位为 0 则没有该字段
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808RectangleAreaProperty.OverspeedDuration">
            <summary>
            超速持续时间 
            单位为秒（s）（类似表述，同前修改），若区域属性 1 位为 0 则没有该字段
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808RectangleAreaProperty.NightMaximumSpeed">
            <summary>
            夜间最高速度
            2019版本
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808RectangleAreaProperty.NameLength">
            <summary>
            名称长度
            2019版本
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808RectangleAreaProperty.AreaName">
            <summary>
            区域名称
            2019版本
            </summary>
        </member>
        <member name="T:JT808.Protocol.Metadata.JT808SplitPackageProperty">
            <summary>
            分包属性
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808SplitPackageProperty.PackgeIndex">
            <summary>
            当前页
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808SplitPackageProperty.PackgeCount">
            <summary>
            分页总数
            </summary>
        </member>
        <member name="P:JT808.Protocol.Metadata.JT808SplitPackageProperty.Data">
            <summary>
            分包数据
            </summary>
        </member>
    </members>
</doc>
